(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>p});var o=t(537),r=t.n(o),i=t(645),a=t.n(i),l=t(667),c=t.n(l),A=new URL(t(201),t.b),d=a()(r()),s=c()(A);d.push([e.id,"@font-face {\n    font-family: 'MyFont';\n    src: url("+s+');\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    color: white;\n    font-family: \'MyFont\';\n    height: 100%;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    grid-template-areas: \n        "header header"\n        "nav project-container";\n}\n\n.header {\n    background-color: #e76f51;\n    grid-area: header;\n    text-align: center;\n}\n\n.nav {\n    background-color: #264653;\n    grid-area: nav;\n    min-width: 147px;\n} \n\n.nav > ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 1.3rem;\n    padding-left: 15px;\n}\n\n.nav li {\n    margin-bottom: 10px;\n}\n\n.nav ul li:hover {\n    cursor: pointer;\n    color: #ffd56b;\n}\n\n/*MAIN PROJECTS DISPLAY*/\n\n.project-container {\n    grid-area: project-container;\n    padding: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.card {\n    background-color: #2a9d8f;\n    width: 250px;\n    height: 250px;\n    box-sizing: border-box;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n}\n\n.card h3 {\n    margin: 0;\n    text-align: center;\n    min-height: 46px;\n}\n\n.card ul {\n    list-style: none;\n    padding-left: 0;\n}\n\n.card li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.card li > div > p + p:hover {\n    color: #ffd56b;\n    cursor: pointer;\n}\n\n.card > div > ul > li > div {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    align-items: center;\n}\n\n.card li > div > p:hover {\n    cursor: pointer;\n}\n\n.card p {\n    margin: 0;\n}\n\n.card button {\n    margin-bottom: 10px;\n    margin-top: auto;\n}\n\n.checkbox {\n    font-size: 2rem;\n}\n\n.strikethrough {\n    text-decoration: line-through;\n}\n\n/*FORMS*/\n\nform {\n    background-color: #2a9d8f;\n    padding: 20px 40px 20px 40px;\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\nform div {\n    display: flex;\n    flex-direction: column;\n}\n\nform ul {\n    list-style: none;\n    margin: 0;\n    padding-left: 0;\n}\n\nform li {\n    margin-bottom: 10px;\n}\n\nlabel[for="newTitle"],\nlabel[for="desc"],\nlabel[for="date"],\nlabel[for="select-option"] {\n    margin-right: 8px;\n}\n\n#low-priority {\n    margin-left: 8px;\n}\n\nlabel[for="project"] {\n    margin-bottom: 5px;\n}\n\nform h3 {\n    margin-top: 0;\n    text-align: center;\n    font-size: 1.6rem;\n}\n\nbutton {\n   border: none;\n   text-decoration: none; \n   background-color: #264653;\n   color: white;\n   padding: 5px 10px;\n   align-self: center;\n   margin-top: 15px;\n}\n\nbutton:hover {\n    cursor: pointer;\n    color: #264653;\n    background-color: white;\n}\n\n/*MODAL*/\n\n.modal {\n    top: 0%;\n    left: 0%;\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    background: rgba(0, 0, 0, 0.5);\n  }\n\n.child {\n    top: 50%;\n    left: 50%;\n    width: 350px;\n    height: 350px;\n    padding: 30px 30px;\n    background: #2a9d8f;\n    position: absolute;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.modal-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    gap: 10px;\n}\n\n.modal-div {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto auto auto;\n    justify-items: start;\n    align-items: start;\n    column-gap: 20px;\n    row-gap: 10px;\n}\n\n.child h3 {\n    margin-top: 0;\n    align-self: center;\n}\n\n.child p,\n.child h4 {\n    margin: 0;\n}\n\n.child h4 {\n    justify-self: end;\n    font-weight: bold;\n}\n\n.star-filled {\n    color: yellow;\n}\n\n.button-div {\n    display: flex;\n    align-content: center;\n    justify-content: center;\n    gap: 20px;\n    padding-top: 10px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAA8C;AAClD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,qBAAqB;IACrB,YAAY;IACZ,iBAAiB;IACjB,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B;;+BAE2B;AAC/B;;AAEA;IACI,yBAAyB;IACzB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA,wBAAwB;;AAExB;IACI,4BAA4B;IAC5B,aAAa;IACb,aAAa;IACb,eAAe;IACf,SAAS;AACb;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,SAAS;IACT,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,6BAA6B;AACjC;;AAEA,QAAQ;;AAER;IACI,yBAAyB;IACzB,4BAA4B;IAC5B,UAAU;IACV,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;;;;IAII,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;GACG,YAAY;GACZ,qBAAqB;GACrB,yBAAyB;GACzB,YAAY;GACZ,iBAAiB;GACjB,kBAAkB;GAClB,gBAAgB;AACnB;;AAEA;IACI,eAAe;IACf,cAAc;IACd,uBAAuB;AAC3B;;AAEA,QAAQ;;AAER;IACI,OAAO;IACP,QAAQ;IACR,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,8BAA8B;EAChC;;AAEF;IACI,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB,kBAAkB;IAClB,gCAAgC;IAChC,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,uCAAuC;IACvC,oBAAoB;IACpB,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB;;AAEA;;IAEI,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,uBAAuB;IACvB,SAAS;IACT,iBAAiB;AACrB",sourcesContent:['@font-face {\n    font-family: \'MyFont\';\n    src: url(\'./LexendDeca-VariableFont_wght.ttf\');\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    color: white;\n    font-family: \'MyFont\';\n    height: 100%;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    grid-template-areas: \n        "header header"\n        "nav project-container";\n}\n\n.header {\n    background-color: #e76f51;\n    grid-area: header;\n    text-align: center;\n}\n\n.nav {\n    background-color: #264653;\n    grid-area: nav;\n    min-width: 147px;\n} \n\n.nav > ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 1.3rem;\n    padding-left: 15px;\n}\n\n.nav li {\n    margin-bottom: 10px;\n}\n\n.nav ul li:hover {\n    cursor: pointer;\n    color: #ffd56b;\n}\n\n/*MAIN PROJECTS DISPLAY*/\n\n.project-container {\n    grid-area: project-container;\n    padding: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.card {\n    background-color: #2a9d8f;\n    width: 250px;\n    height: 250px;\n    box-sizing: border-box;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n}\n\n.card h3 {\n    margin: 0;\n    text-align: center;\n    min-height: 46px;\n}\n\n.card ul {\n    list-style: none;\n    padding-left: 0;\n}\n\n.card li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.card li > div > p + p:hover {\n    color: #ffd56b;\n    cursor: pointer;\n}\n\n.card > div > ul > li > div {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    align-items: center;\n}\n\n.card li > div > p:hover {\n    cursor: pointer;\n}\n\n.card p {\n    margin: 0;\n}\n\n.card button {\n    margin-bottom: 10px;\n    margin-top: auto;\n}\n\n.checkbox {\n    font-size: 2rem;\n}\n\n.strikethrough {\n    text-decoration: line-through;\n}\n\n/*FORMS*/\n\nform {\n    background-color: #2a9d8f;\n    padding: 20px 40px 20px 40px;\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\nform div {\n    display: flex;\n    flex-direction: column;\n}\n\nform ul {\n    list-style: none;\n    margin: 0;\n    padding-left: 0;\n}\n\nform li {\n    margin-bottom: 10px;\n}\n\nlabel[for="newTitle"],\nlabel[for="desc"],\nlabel[for="date"],\nlabel[for="select-option"] {\n    margin-right: 8px;\n}\n\n#low-priority {\n    margin-left: 8px;\n}\n\nlabel[for="project"] {\n    margin-bottom: 5px;\n}\n\nform h3 {\n    margin-top: 0;\n    text-align: center;\n    font-size: 1.6rem;\n}\n\nbutton {\n   border: none;\n   text-decoration: none; \n   background-color: #264653;\n   color: white;\n   padding: 5px 10px;\n   align-self: center;\n   margin-top: 15px;\n}\n\nbutton:hover {\n    cursor: pointer;\n    color: #264653;\n    background-color: white;\n}\n\n/*MODAL*/\n\n.modal {\n    top: 0%;\n    left: 0%;\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    background: rgba(0, 0, 0, 0.5);\n  }\n\n.child {\n    top: 50%;\n    left: 50%;\n    width: 350px;\n    height: 350px;\n    padding: 30px 30px;\n    background: #2a9d8f;\n    position: absolute;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.modal-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    gap: 10px;\n}\n\n.modal-div {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto auto auto;\n    justify-items: start;\n    align-items: start;\n    column-gap: 20px;\n    row-gap: 10px;\n}\n\n.child h3 {\n    margin-top: 0;\n    align-self: center;\n}\n\n.child p,\n.child h4 {\n    margin: 0;\n}\n\n.child h4 {\n    justify-self: end;\n    font-weight: bold;\n}\n\n.star-filled {\n    color: yellow;\n}\n\n.button-div {\n    display: flex;\n    align-content: center;\n    justify-content: center;\n    gap: 20px;\n    padding-top: 10px;\n}'],sourceRoot:""}]);const p=d},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var l=0;l<this.length;l++){var c=this[l][0];null!=c&&(a[c]=!0)}for(var A=0;A<e.length;A++){var d=[].concat(e[A]);o&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),n.push(d))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],l=0;l<e.length;l++){var c=e[l],A=o.base?c[0]+o.base:c[0],d=i[A]||0,s="".concat(A," ").concat(d);i[A]=d+1;var p=t(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=r(u,o);o.byIndex=l,n.splice(l,0,{identifier:s,updater:m,references:1})}a.push(s)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var l=t(i[a]);n[l].references--}for(var c=o(e,r),A=0;A<i.length;A++){var d=t(i[A]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=c}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},201:(e,n,t)=>{e.exports=t.p+"85a26ab7491852266e9b.ttf"}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),i=t(569),a=t.n(i),l=t(565),c=t.n(l),A=t(216),d=t.n(A),s=t(589),p=t.n(s),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const g=()=>{const e=document.querySelector(".project-container");for(;e.lastElementChild;)e.removeChild(e.lastElementChild)},f=(e,n)=>{const t=document.createElement("div");t.classList.add("modal");const o=document.createElement("div");o.classList.add("child");const r=document.createElement("div"),i=document.createElement("h3"),a=document.createElement("p");r.classList.add("modal-header"),a.innerHTML="&#9634;",i.innerHTML=e.title,r.appendChild(a),r.appendChild(i);const l=document.createElement("div");l.classList.add("modal-div");const c=document.createElement("h4");c.innerHTML="Description:";const A=document.createElement("p");A.textContent=e.description;const d=document.createElement("h4");d.innerHTML="Due Date:";const s=document.createElement("p");s.textContent=e.dueDate;const p=document.createElement("h4");p.innerHTML="Priority:";const u=document.createElement("p");let m="",g="";1===e.priority||"high"===e.priority?(g="&#11088;",m="High priority"):(g="&#9734;",m="Low priority"),u.innerHTML=m+" "+g;const f=document.createElement("h4");f.innerHTML="Project:";const C=document.createElement("p");C.innerHTML=n.title;const B=document.createElement("button");B.textContent="Edit Task";const I=document.createElement("button");I.textContent="Delete Task";const b=document.createElement("div");b.classList.add("button-div"),o.appendChild(r),o.appendChild(l),l.appendChild(c),l.appendChild(A),l.appendChild(d),l.appendChild(s),l.appendChild(p),l.appendChild(u),l.appendChild(f),l.appendChild(C),o.appendChild(b),b.appendChild(B),b.appendChild(I),t.appendChild(o),document.body.appendChild(t),I.addEventListener("click",(()=>{w(n,e)})),t.addEventListener("click",(e=>{"modal"===e.target.className&&h()}))},h=()=>{const e=document.querySelector(".modal");e&&e.remove()},C=e=>{let n={list:[""],title:e.value};localStorage.setItem(e.value,JSON.stringify(n))},B=()=>{if(g(),console.log(localStorage),0===localStorage.length){let e={list:[{title:"Plan route",description:"Use guidebook to plan hiking route",dueDate:"4/1/23",priority:1,status:0},{title:"Plan meals",description:"Plan meals to meet calorie needs",dueDate:"4/7/23",priority:0,status:0},{title:"Pack gear",description:"Pack gear needed for 10 day trip",dueDate:"4/14/23",priority:1,status:0}],title:"Prep for Backpacking Trip"},n={list:[{title:"Cuddle",description:"Cuddle with my dog",dueDate:"12/20/22",priority:1,status:0}],title:"Love my dog"};localStorage.setItem("backpackTrip",JSON.stringify(e)),localStorage.setItem("loveDog",JSON.stringify(n))}!function(){for(let n=0;n<localStorage.length;n++){e=I(JSON.parse(localStorage.getItem(localStorage.key(n)))),document.querySelector(".project-container").appendChild(e)}var e}()};function I(e){const n=document.createElement("div");n.classList.add("card");const t=document.createElement("h3");t.textContent=e.title,n.appendChild(t);const o=document.createElement("div");n.appendChild(o);const r=document.createElement("ul");o.appendChild(r);for(let n=0;n<e.list.length;n++){const t=document.createElement("li");r.appendChild(t);const o=document.createElement("div");t.appendChild(o);const i=document.createElement("p");i.classList.add("checkbox");const a=document.createElement("p"),l=document.createElement("p");b(i,e.list[n].status,a,l);let c="";1!==e.list[n].priority&&"high"!==e.list[n].priority||(c="&#11088;"),null!=e.list[n].title&&(a.innerHTML=e.list[n].title+" "+c,l.innerHTML=e.list[n].dueDate,o.appendChild(i),o.appendChild(a),t.appendChild(l)),x(e.list[n].status,i,a,l,e,e.list[n]),a.addEventListener("click",(()=>{f(e.list[n],e)}))}const i=document.createElement("button");return i.innerHTML="Delete Project",n.appendChild(i),i.addEventListener("click",(()=>{var n;n=e,localStorage.removeItem(n.title),B()})),n}function b(e,n,t,o){1===n?y(e,t,o):0===n&&(e.innerHTML="&#9744;")}function y(e,n,t){e.innerHTML="&#9745;",n.classList.add("strikethrough"),t.classList.add("strikethrough")}function x(e,n,t,o,r,i){n.addEventListener("click",(()=>{0===e?(y(n,t,o),v(r,i)):1===e&&(function(e,n,t){e.innerHTML="&#9744;",n.classList.remove("strikethrough"),t.classList.remove("strikethrough")}(n,t,o),v(r,i))}))}function v(e,n){for(let t=0;t<localStorage.length;t++)if(e.title===JSON.parse(localStorage.getItem(localStorage.key(t))).title){let e=JSON.parse(localStorage.getItem(localStorage.key(t)));for(let o=0;o<e.list.length;o++)e.list[o].title==n.title&&(0===e.list[o].status?e.list[o].status=1:1===e.list[o].status&&(e.list[o].status=0),localStorage.setItem(localStorage.key(t),JSON.stringify(e)))}B()}const E=e=>{e.preventDefault();const n=document.querySelector("#newTitle").value,t=document.querySelector("#desc").value,o=document.querySelector("#date").value;let r="",i=document.getElementsByName("priority");for(let e=0;e<i.length;e++)i[e].checked&&(r=i[e].value);let a=document.querySelector("#select-option").value;for(let e=0;e<localStorage.length;e++)a==JSON.parse(localStorage.getItem(localStorage.key(e))).title&&(a=JSON.parse(localStorage.getItem(localStorage.key(e))));let l=S(n,t,o,r,a);k(a,l)},S=(e,n,t,o)=>({title:e,description:n,dueDate:t,priority:o,status:0}),k=(e,n)=>{for(let t=0;t<localStorage.length;t++)if(e.title===JSON.parse(localStorage.getItem(localStorage.key(t))).title){let e=JSON.parse(localStorage.getItem(localStorage.key(t)));e.list.push(n),localStorage.setItem(localStorage.key(t),JSON.stringify(e))}B()},w=(e,n)=>{for(let t=0;t<localStorage.length;t++)if(e.title===JSON.parse(localStorage.getItem(localStorage.key(t))).title){let e=JSON.parse(localStorage.getItem(localStorage.key(t)));for(let o=0;o<e.list.length;o++)e.list[o].title==n.title&&(e.list.splice(o,1),localStorage.setItem(localStorage.key(t),JSON.stringify(e)))}B(),h()},j=(e,n,t,o,r,i)=>{n=document.createElement("li");const a=document.createElement("label");a.setAttribute("for",t),a.textContent=o,(r=document.createElement("input")).setAttribute("type",i),r.setAttribute("id",t),r.setAttribute("name",t),e.appendChild(n),n.appendChild(a),n.appendChild(r)},L=(e,n,t,o,r,i,a,l,c,A)=>{const d=document.createElement("li");e.appendChild(d);const s=(e,n,t,o,r)=>{const i=document.createElement("label");i.setAttribute("for",n),i.textContent=t,(o=document.createElement("input")).setAttribute("type","radio"),o.setAttribute("id",n),o.setAttribute("name",e),o.setAttribute("value",r),d.appendChild(o),d.appendChild(i)};s(n,t,o,r,i),s(n,a,l,c,A)};B(),document.querySelector(".nav>ul>li").addEventListener("click",B),document.querySelector(".nav>ul>li+li").addEventListener("click",(()=>{g(),(()=>{const e=document.querySelector(".project-container"),n=document.createElement("form"),t=document.createElement("h3");t.textContent="Add 'To Do' Item",e.appendChild(n),n.appendChild(t),n.setAttribute("id","newToDoForm"),n.setAttribute("action",""),n.setAttribute("method","post");const o=document.createElement("div");n.appendChild(o);const r=document.createElement("ul");o.appendChild(r),j(r,"firstItem","newTitle","To Do Item Title","input1","text"),j(r,"secItem","desc","Description","input2","text"),j(r,"thirdItem","date","Due Date","input3","date"),L(r,"priority","high-priority","High Priority","input4","high","low-priority","Low Priority","input5","low");const i=document.createElement("li"),a=document.createElement("label");a.textContent="Project",a.setAttribute("for","select-option");const l=document.createElement("select");l.setAttribute("name","Project"),l.setAttribute("id","select-option"),r.appendChild(i),i.appendChild(a),i.appendChild(l);for(let e=0;e<localStorage.length;e++){const n=document.createElement("option"),t=JSON.parse(localStorage.getItem(localStorage.key(e))).title;n.setAttribute("value",t),n.textContent=t,l.appendChild(n)}const c=document.createElement("button");c.setAttribute("type","submit"),c.textContent="Submit",c.setAttribute("id","submit-todo"),o.appendChild(c),n.addEventListener("submit",E)})()})),document.querySelector(".nav>ul>li+li+li").addEventListener("click",(()=>{g(),(()=>{const e=document.querySelector(".project-container"),n=document.createElement("form"),t=document.createElement("h3");t.textContent="Add a Project",e.appendChild(n),n.appendChild(t),n.setAttribute("id","newProjectForm"),n.setAttribute("action",""),n.setAttribute("method","post");const o=document.createElement("div");n.appendChild(o);const r=document.createElement("label");r.setAttribute("for","project"),r.textContent="New Project";const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("id","project-title"),i.setAttribute("name","project"),o.appendChild(r),o.appendChild(i);const a=document.createElement("button");a.setAttribute("type","submit"),a.textContent="Submit",a.setAttribute("id","submit-project"),o.appendChild(a),n.addEventListener("submit",(()=>{C(i)}))})()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFXeEosU0FBU1csY0FBYyxTQUN4QzZJLEVBQVN4SSxhQUFhLE1BQU8sV0FDN0J3SSxFQUFTeEUsWUFBYyxjQUN2QixNQUFNc0IsRUFBUXRHLFNBQVNXLGNBQWMsU0FDckMyRixFQUFNdEYsYUFBYSxPQUFRLFFBQzNCc0YsRUFBTXRGLGFBQWEsS0FBTSxpQkFDekJzRixFQUFNdEYsYUFBYSxPQUFRLFdBQzNCdUosRUFBSTlKLFlBQVkrSSxHQUNoQmUsRUFBSTlKLFlBQVk2RixHQUdoQixNQUFNc0UsRUFBUzVLLFNBQVNXLGNBQWMsVUFDdENpSyxFQUFPNUosYUFBYSxPQUFRLFVBQzVCNEosRUFBTzVGLFlBQWMsU0FDckI0RixFQUFPNUosYUFBYSxLQUFNLGtCQUMxQnVKLEVBQUk5SixZQUFZbUssR0FDaEJOLEVBQUt0RSxpQkFBaUIsVUFBVSxLQUM1QkssRUFBbUJDLEVBQU0sR0FFNUIsRUF6Q0R3RSxFQUFrQixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvZG8vLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9jbGVhci5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL21vZGFsLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvcHJvamVjdC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3BnbG9hZC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3RvLWRvcy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3RvLWRvZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuL0xleGVuZERlY2EtVmFyaWFibGVGb250X3dnaHQudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnTXlGb250JztcXG4gICAgc3JjOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fICsgXCIpO1xcbn1cXG5cXG5ib2R5IHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIGZvbnQtZmFtaWx5OiAnTXlGb250JztcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgNmZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciA2ZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFxcbiAgICAgICAgXFxcImhlYWRlciBoZWFkZXJcXFwiXFxuICAgICAgICBcXFwibmF2IHByb2plY3QtY29udGFpbmVyXFxcIjtcXG59XFxuXFxuLmhlYWRlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNzZmNTE7XFxuICAgIGdyaWQtYXJlYTogaGVhZGVyO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5uYXYge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjY0NjUzO1xcbiAgICBncmlkLWFyZWE6IG5hdjtcXG4gICAgbWluLXdpZHRoOiAxNDdweDtcXG59IFxcblxcbi5uYXYgPiB1bCB7XFxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogNXB4O1xcbiAgICBmb250LXNpemU6IDEuM3JlbTtcXG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xcbn1cXG5cXG4ubmF2IGxpIHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG59XFxuXFxuLm5hdiB1bCBsaTpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgY29sb3I6ICNmZmQ1NmI7XFxufVxcblxcbi8qTUFJTiBQUk9KRUNUUyBESVNQTEFZKi9cXG5cXG4ucHJvamVjdC1jb250YWluZXIge1xcbiAgICBncmlkLWFyZWE6IHByb2plY3QtY29udGFpbmVyO1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxuICAgIGdhcDogMjBweDtcXG59XFxuXFxuLmNhcmQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmE5ZDhmO1xcbiAgICB3aWR0aDogMjUwcHg7XFxuICAgIGhlaWdodDogMjUwcHg7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcblxcbi5jYXJkIGgzIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIG1pbi1oZWlnaHQ6IDQ2cHg7XFxufVxcblxcbi5jYXJkIHVsIHtcXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcXG4gICAgcGFkZGluZy1sZWZ0OiAwO1xcbn1cXG5cXG4uY2FyZCBsaSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmNhcmQgbGkgPiBkaXYgPiBwICsgcDpob3ZlciB7XFxuICAgIGNvbG9yOiAjZmZkNTZiO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5jYXJkID4gZGl2ID4gdWwgPiBsaSA+IGRpdiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGdhcDogNXB4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uY2FyZCBsaSA+IGRpdiA+IHA6aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5jYXJkIHAge1xcbiAgICBtYXJnaW46IDA7XFxufVxcblxcbi5jYXJkIGJ1dHRvbiB7XFxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XFxuICAgIG1hcmdpbi10b3A6IGF1dG87XFxufVxcblxcbi5jaGVja2JveCB7XFxuICAgIGZvbnQtc2l6ZTogMnJlbTtcXG59XFxuXFxuLnN0cmlrZXRocm91Z2gge1xcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcXG59XFxuXFxuLypGT1JNUyovXFxuXFxuZm9ybSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyYTlkOGY7XFxuICAgIHBhZGRpbmc6IDIwcHggNDBweCAyMHB4IDQwcHg7XFxuICAgIHdpZHRoOiA1MCU7XFxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XFxufVxcblxcbmZvcm0gZGl2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuZm9ybSB1bCB7XFxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZy1sZWZ0OiAwO1xcbn1cXG5cXG5mb3JtIGxpIHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG59XFxuXFxubGFiZWxbZm9yPVxcXCJuZXdUaXRsZVxcXCJdLFxcbmxhYmVsW2Zvcj1cXFwiZGVzY1xcXCJdLFxcbmxhYmVsW2Zvcj1cXFwiZGF0ZVxcXCJdLFxcbmxhYmVsW2Zvcj1cXFwic2VsZWN0LW9wdGlvblxcXCJdIHtcXG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XFxufVxcblxcbiNsb3ctcHJpb3JpdHkge1xcbiAgICBtYXJnaW4tbGVmdDogOHB4O1xcbn1cXG5cXG5sYWJlbFtmb3I9XFxcInByb2plY3RcXFwiXSB7XFxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcXG59XFxuXFxuZm9ybSBoMyB7XFxuICAgIG1hcmdpbi10b3A6IDA7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgZm9udC1zaXplOiAxLjZyZW07XFxufVxcblxcbmJ1dHRvbiB7XFxuICAgYm9yZGVyOiBub25lO1xcbiAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgXFxuICAgYmFja2dyb3VuZC1jb2xvcjogIzI2NDY1MztcXG4gICBjb2xvcjogd2hpdGU7XFxuICAgcGFkZGluZzogNXB4IDEwcHg7XFxuICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgIG1hcmdpbi10b3A6IDE1cHg7XFxufVxcblxcbmJ1dHRvbjpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgY29sb3I6ICMyNjQ2NTM7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbn1cXG5cXG4vKk1PREFMKi9cXG5cXG4ubW9kYWwge1xcbiAgICB0b3A6IDAlO1xcbiAgICBsZWZ0OiAwJTtcXG4gICAgd2lkdGg6IDEwMHZ3O1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC41KTtcXG4gIH1cXG5cXG4uY2hpbGQge1xcbiAgICB0b3A6IDUwJTtcXG4gICAgbGVmdDogNTAlO1xcbiAgICB3aWR0aDogMzUwcHg7XFxuICAgIGhlaWdodDogMzUwcHg7XFxuICAgIHBhZGRpbmc6IDMwcHggMzBweDtcXG4gICAgYmFja2dyb3VuZDogIzJhOWQ4ZjtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbi5tb2RhbC1oZWFkZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgZ2FwOiAxMHB4O1xcbn1cXG5cXG4ubW9kYWwtZGl2IHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0byBhdXRvIGF1dG87XFxuICAgIGp1c3RpZnktaXRlbXM6IHN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogc3RhcnQ7XFxuICAgIGNvbHVtbi1nYXA6IDIwcHg7XFxuICAgIHJvdy1nYXA6IDEwcHg7XFxufVxcblxcbi5jaGlsZCBoMyB7XFxuICAgIG1hcmdpbi10b3A6IDA7XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG59XFxuXFxuLmNoaWxkIHAsXFxuLmNoaWxkIGg0IHtcXG4gICAgbWFyZ2luOiAwO1xcbn1cXG5cXG4uY2hpbGQgaDQge1xcbiAgICBqdXN0aWZ5LXNlbGY6IGVuZDtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVxcblxcbi5zdGFyLWZpbGxlZCB7XFxuICAgIGNvbG9yOiB5ZWxsb3c7XFxufVxcblxcbi5idXR0b24tZGl2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgZ2FwOiAyMHB4O1xcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHFCQUFxQjtJQUNyQiw0Q0FBOEM7QUFDbEQ7O0FBRUE7SUFDSSxTQUFTO0lBQ1QsVUFBVTtJQUNWLFlBQVk7SUFDWixxQkFBcUI7SUFDckIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLDJCQUEyQjtJQUMzQjs7K0JBRTJCO0FBQy9COztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsY0FBYztJQUNkLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFFBQVE7SUFDUixpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGNBQWM7QUFDbEI7O0FBRUEsd0JBQXdCOztBQUV4QjtJQUNJLDRCQUE0QjtJQUM1QixhQUFhO0lBQ2IsYUFBYTtJQUNiLGVBQWU7SUFDZixTQUFTO0FBQ2I7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsYUFBYTtJQUNiLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxTQUFTO0lBQ1Qsa0JBQWtCO0lBQ2xCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsUUFBUTtJQUNSLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxTQUFTO0FBQ2I7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLDZCQUE2QjtBQUNqQzs7QUFFQSxRQUFROztBQUVSO0lBQ0kseUJBQXlCO0lBQ3pCLDRCQUE0QjtJQUM1QixVQUFVO0lBQ1YsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsU0FBUztJQUNULGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7Ozs7SUFJSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLGlCQUFpQjtBQUNyQjs7QUFFQTtHQUNHLFlBQVk7R0FDWixxQkFBcUI7R0FDckIseUJBQXlCO0dBQ3pCLFlBQVk7R0FDWixpQkFBaUI7R0FDakIsa0JBQWtCO0dBQ2xCLGdCQUFnQjtBQUNuQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixjQUFjO0lBQ2QsdUJBQXVCO0FBQzNCOztBQUVBLFFBQVE7O0FBRVI7SUFDSSxPQUFPO0lBQ1AsUUFBUTtJQUNSLFlBQVk7SUFDWixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLDhCQUE4QjtFQUNoQzs7QUFFRjtJQUNJLFFBQVE7SUFDUixTQUFTO0lBQ1QsWUFBWTtJQUNaLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixnQ0FBZ0M7SUFDaEMsYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLHVDQUF1QztJQUN2QyxvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtBQUN0Qjs7QUFFQTs7SUFFSSxTQUFTO0FBQ2I7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixxQkFBcUI7SUFDckIsdUJBQXVCO0lBQ3ZCLFNBQVM7SUFDVCxpQkFBaUI7QUFDckJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGZvbnQtZmFjZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnTXlGb250JztcXG4gICAgc3JjOiB1cmwoJy4vTGV4ZW5kRGVjYS1WYXJpYWJsZUZvbnRfd2dodC50dGYnKTtcXG59XFxuXFxuYm9keSB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBmb250LWZhbWlseTogJ015Rm9udCc7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgbWluLWhlaWdodDogMTAwdmg7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDZmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgNmZyO1xcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcXG4gICAgICAgIFxcXCJoZWFkZXIgaGVhZGVyXFxcIlxcbiAgICAgICAgXFxcIm5hdiBwcm9qZWN0LWNvbnRhaW5lclxcXCI7XFxufVxcblxcbi5oZWFkZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTc2ZjUxO1xcbiAgICBncmlkLWFyZWE6IGhlYWRlcjtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4ubmF2IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI2NDY1MztcXG4gICAgZ3JpZC1hcmVhOiBuYXY7XFxuICAgIG1pbi13aWR0aDogMTQ3cHg7XFxufSBcXG5cXG4ubmF2ID4gdWwge1xcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDVweDtcXG4gICAgZm9udC1zaXplOiAxLjNyZW07XFxuICAgIHBhZGRpbmctbGVmdDogMTVweDtcXG59XFxuXFxuLm5hdiBsaSB7XFxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XFxufVxcblxcbi5uYXYgdWwgbGk6aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGNvbG9yOiAjZmZkNTZiO1xcbn1cXG5cXG4vKk1BSU4gUFJPSkVDVFMgRElTUExBWSovXFxuXFxuLnByb2plY3QtY29udGFpbmVyIHtcXG4gICAgZ3JpZC1hcmVhOiBwcm9qZWN0LWNvbnRhaW5lcjtcXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC13cmFwOiB3cmFwO1xcbiAgICBnYXA6IDIwcHg7XFxufVxcblxcbi5jYXJkIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJhOWQ4ZjtcXG4gICAgd2lkdGg6IDI1MHB4O1xcbiAgICBoZWlnaHQ6IDI1MHB4O1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uY2FyZCBoMyB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBtaW4taGVpZ2h0OiA0NnB4O1xcbn1cXG5cXG4uY2FyZCB1bCB7XFxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICAgIHBhZGRpbmctbGVmdDogMDtcXG59XFxuXFxuLmNhcmQgbGkge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5jYXJkIGxpID4gZGl2ID4gcCArIHA6aG92ZXIge1xcbiAgICBjb2xvcjogI2ZmZDU2YjtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uY2FyZCA+IGRpdiA+IHVsID4gbGkgPiBkaXYge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBnYXA6IDVweDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmNhcmQgbGkgPiBkaXYgPiBwOmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uY2FyZCBwIHtcXG4gICAgbWFyZ2luOiAwO1xcbn1cXG5cXG4uY2FyZCBidXR0b24ge1xcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xcbn1cXG5cXG4uY2hlY2tib3gge1xcbiAgICBmb250LXNpemU6IDJyZW07XFxufVxcblxcbi5zdHJpa2V0aHJvdWdoIHtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxufVxcblxcbi8qRk9STVMqL1xcblxcbmZvcm0ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmE5ZDhmO1xcbiAgICBwYWRkaW5nOiAyMHB4IDQwcHggMjBweCA0MHB4O1xcbiAgICB3aWR0aDogNTAlO1xcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xcbn1cXG5cXG5mb3JtIGRpdiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcblxcbmZvcm0gdWwge1xcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmctbGVmdDogMDtcXG59XFxuXFxuZm9ybSBsaSB7XFxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XFxufVxcblxcbmxhYmVsW2Zvcj1cXFwibmV3VGl0bGVcXFwiXSxcXG5sYWJlbFtmb3I9XFxcImRlc2NcXFwiXSxcXG5sYWJlbFtmb3I9XFxcImRhdGVcXFwiXSxcXG5sYWJlbFtmb3I9XFxcInNlbGVjdC1vcHRpb25cXFwiXSB7XFxuICAgIG1hcmdpbi1yaWdodDogOHB4O1xcbn1cXG5cXG4jbG93LXByaW9yaXR5IHtcXG4gICAgbWFyZ2luLWxlZnQ6IDhweDtcXG59XFxuXFxubGFiZWxbZm9yPVxcXCJwcm9qZWN0XFxcIl0ge1xcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XFxufVxcblxcbmZvcm0gaDMge1xcbiAgICBtYXJnaW4tdG9wOiAwO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xcbn1cXG5cXG5idXR0b24ge1xcbiAgIGJvcmRlcjogbm9uZTtcXG4gICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IFxcbiAgIGJhY2tncm91bmQtY29sb3I6ICMyNjQ2NTM7XFxuICAgY29sb3I6IHdoaXRlO1xcbiAgIHBhZGRpbmc6IDVweCAxMHB4O1xcbiAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gICBtYXJnaW4tdG9wOiAxNXB4O1xcbn1cXG5cXG5idXR0b246aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGNvbG9yOiAjMjY0NjUzO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuLypNT0RBTCovXFxuXFxuLm1vZGFsIHtcXG4gICAgdG9wOiAwJTtcXG4gICAgbGVmdDogMCU7XFxuICAgIHdpZHRoOiAxMDB2dztcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7XFxuICB9XFxuXFxuLmNoaWxkIHtcXG4gICAgdG9wOiA1MCU7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgd2lkdGg6IDM1MHB4O1xcbiAgICBoZWlnaHQ6IDM1MHB4O1xcbiAgICBwYWRkaW5nOiAzMHB4IDMwcHg7XFxuICAgIGJhY2tncm91bmQ6ICMyYTlkOGY7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbn1cXG5cXG4ubW9kYWwtaGVhZGVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuLm1vZGFsLWRpdiB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG8gYXV0byBhdXRvO1xcbiAgICBqdXN0aWZ5LWl0ZW1zOiBzdGFydDtcXG4gICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xcbiAgICBjb2x1bW4tZ2FwOiAyMHB4O1xcbiAgICByb3ctZ2FwOiAxMHB4O1xcbn1cXG5cXG4uY2hpbGQgaDMge1xcbiAgICBtYXJnaW4tdG9wOiAwO1xcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxufVxcblxcbi5jaGlsZCBwLFxcbi5jaGlsZCBoNCB7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxuLmNoaWxkIGg0IHtcXG4gICAganVzdGlmeS1zZWxmOiBlbmQ7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG5cXG4uc3Rhci1maWxsZWQge1xcbiAgICBjb2xvcjogeWVsbG93O1xcbn1cXG5cXG4uYnV0dG9uLWRpdiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGdhcDogMjBweDtcXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7XG5cbiAgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH1cblxuICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImV4cG9ydCBjb25zdCBjbGVhckNvbnRlbnQgPSAoKSA9PiB7XG4gICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdC1jb250YWluZXJcIik7XG4gICAgd2hpbGUgKGNvbnRlbnQubGFzdEVsZW1lbnRDaGlsZCkge1xuICAgICAgICBjb250ZW50LnJlbW92ZUNoaWxkKGNvbnRlbnQubGFzdEVsZW1lbnRDaGlsZCk7XG4gICAgfVxufSIsImltcG9ydCB7IGRlbGV0ZVRvRG8gfSBmcm9tIFwiLi90by1kb3NcIlxuXG5leHBvcnQgY29uc3QgYnVpbGRNb2RhbCA9IChvYmosIHByb2opID0+IHtcbiAgLy9DcmVhdGUgdGhlIGJhY2tncm91bmQgbW9kYWwgZGl2XG4gIGNvbnN0IG1vZGFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgbW9kYWwuY2xhc3NMaXN0LmFkZCgnbW9kYWwnKVxuXG4gIC8vQ3JlYXRlIHRoZSBpbm5lciBtb2RhbCBkaXZcbiAgY29uc3QgY2hpbGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICBjaGlsZC5jbGFzc0xpc3QuYWRkKCdjaGlsZCcpXG5cbiAgLy9DcmVhdGUgY2hlY2tib3ggJiB0aXRsZVxuICBjb25zdCBtb2RhbEhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IG1vZGFsVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XG4gIGNvbnN0IG1vZGFsQ2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgbW9kYWxIZWFkZXIuY2xhc3NMaXN0LmFkZChcIm1vZGFsLWhlYWRlclwiKTtcbiAgbW9kYWxDaGVja2JveC5pbm5lckhUTUwgPSBcIiYjOTYzNDtcIjtcblxuICBcblxuICBtb2RhbFRpdGxlLmlubmVySFRNTCA9IG9iai50aXRsZTtcbiAgbW9kYWxIZWFkZXIuYXBwZW5kQ2hpbGQobW9kYWxDaGVja2JveCk7XG4gIG1vZGFsSGVhZGVyLmFwcGVuZENoaWxkKG1vZGFsVGl0bGUpO1xuICBcbiAgLy9DcmVhdGUgZGVzY3JpcHRpb24gJiBkdWUgZGF0ZSBjb250ZW50XG4gIGNvbnN0IG1vZGFsRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgbW9kYWxEaXYuY2xhc3NMaXN0LmFkZChcIm1vZGFsLWRpdlwiKTtcbiAgY29uc3QgbW9kYWxEZXNjVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDRcIik7XG4gIG1vZGFsRGVzY1RpdGxlLmlubmVySFRNTCA9IFwiRGVzY3JpcHRpb246XCI7XG4gIGNvbnN0IG1vZGFsRGVzYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICBtb2RhbERlc2MudGV4dENvbnRlbnQgPSBvYmouZGVzY3JpcHRpb247XG4gIGNvbnN0IG1vZGFsRGF0ZVRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImg0XCIpO1xuICBtb2RhbERhdGVUaXRsZS5pbm5lckhUTUwgPSBcIkR1ZSBEYXRlOlwiXG4gIGNvbnN0IG1vZGFsRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICBtb2RhbERhdGUudGV4dENvbnRlbnQgPSBvYmouZHVlRGF0ZTtcblxuICAvL1NldCBjb3JyZWN0IHByaW9yaXR5IHN0YXR1cyBjb250ZW50XG4gIGNvbnN0IG1vZGFsUHJpb3JpdHlUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoNFwiKTtcbiAgbW9kYWxQcmlvcml0eVRpdGxlLmlubmVySFRNTCA9IFwiUHJpb3JpdHk6XCJcbiAgY29uc3QgbW9kYWxQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICBcbiAgbGV0IHByaW9yaXR5TGV2ZWwgPSBcIlwiO1xuICBsZXQgcHJpb3JpdHlTdGFyID0gXCJcIjtcbiAgaWYgKG9iai5wcmlvcml0eSA9PT0gMSB8fCBvYmoucHJpb3JpdHkgPT09IFwiaGlnaFwiKSB7XG4gICAgcHJpb3JpdHlTdGFyID0gXCImIzExMDg4O1wiO1xuICAgIHByaW9yaXR5TGV2ZWwgPSBcIkhpZ2ggcHJpb3JpdHlcIjsgXG4gIH0gZWxzZSB7XG4gICAgcHJpb3JpdHlTdGFyID0gXCImIzk3MzQ7XCI7XG4gICAgcHJpb3JpdHlMZXZlbCA9IFwiTG93IHByaW9yaXR5XCI7fVxuXG4gIG1vZGFsUHJpb3JpdHkuaW5uZXJIVE1MID0gcHJpb3JpdHlMZXZlbCArIFwiIFwiICsgcHJpb3JpdHlTdGFyO1xuICBjb25zdCBtb2RhbFByb2plY3RUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoNFwiKTtcbiAgbW9kYWxQcm9qZWN0VGl0bGUuaW5uZXJIVE1MID0gXCJQcm9qZWN0OlwiXG4gIFxuICAvL1NldCBjb3JyZWN0IHByb2plY3QgY29udGVudFxuICBjb25zdCBtb2RhbFByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgbW9kYWxQcm9qZWN0LmlubmVySFRNTCA9IHByb2oudGl0bGU7XG5cbiAgLy9BZGQgZWRpdCAmIGRlbGV0ZSBidXR0b25zXG4gIGNvbnN0IG1vZGFsRWRpdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gIG1vZGFsRWRpdC50ZXh0Q29udGVudCA9IFwiRWRpdCBUYXNrXCI7XG4gIGNvbnN0IG1vZGFsRGVsZXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgbW9kYWxEZWxldGUudGV4dENvbnRlbnQgPSBcIkRlbGV0ZSBUYXNrXCI7XG4gIGNvbnN0IGJ1dHRvbkRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGJ1dHRvbkRpdi5jbGFzc0xpc3QuYWRkKFwiYnV0dG9uLWRpdlwiKTtcblxuICAvL0FwcGVuZCBjb250ZW50IHRvIG1vZGFsXG4gIGNoaWxkLmFwcGVuZENoaWxkKG1vZGFsSGVhZGVyKTtcbiAgY2hpbGQuYXBwZW5kQ2hpbGQobW9kYWxEaXYpO1xuICBtb2RhbERpdi5hcHBlbmRDaGlsZChtb2RhbERlc2NUaXRsZSk7XG4gIG1vZGFsRGl2LmFwcGVuZENoaWxkKG1vZGFsRGVzYyk7XG4gIG1vZGFsRGl2LmFwcGVuZENoaWxkKG1vZGFsRGF0ZVRpdGxlKTtcbiAgbW9kYWxEaXYuYXBwZW5kQ2hpbGQobW9kYWxEYXRlKTtcbiAgbW9kYWxEaXYuYXBwZW5kQ2hpbGQobW9kYWxQcmlvcml0eVRpdGxlKTtcbiAgbW9kYWxEaXYuYXBwZW5kQ2hpbGQobW9kYWxQcmlvcml0eSk7XG4gIG1vZGFsRGl2LmFwcGVuZENoaWxkKG1vZGFsUHJvamVjdFRpdGxlKTtcbiAgbW9kYWxEaXYuYXBwZW5kQ2hpbGQobW9kYWxQcm9qZWN0KTtcbiAgY2hpbGQuYXBwZW5kQ2hpbGQoYnV0dG9uRGl2KTtcbiAgYnV0dG9uRGl2LmFwcGVuZENoaWxkKG1vZGFsRWRpdCk7XG4gIGJ1dHRvbkRpdi5hcHBlbmRDaGlsZChtb2RhbERlbGV0ZSk7XG4gIG1vZGFsLmFwcGVuZENoaWxkKGNoaWxkKTtcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChtb2RhbCk7XG4gIFxuICAvL0RlbGV0ZSB0byBkbyB0YXNrIGlmIGRlbGV0ZSBidXR0b24gY2xpY2tlZFxuICBtb2RhbERlbGV0ZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGRlbGV0ZVRvRG8ocHJvaiwgb2JqKTtcbiAgfSk7XG5cbiAgLy8gUmVtb3ZlIG1vZGFsIGlmIGJhY2tncm91bmQgY2xpY2tlZFxuICBtb2RhbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGV2ZW50ID0+IHtcbiAgICBpZiAoZXZlbnQudGFyZ2V0LmNsYXNzTmFtZSA9PT0gJ21vZGFsJykge1xuICAgICAgcmVtb3ZlTW9kYWwoKVxuICAgIH1cbiAgfSlcbn1cblxuLy9GaW5kIHRoZSBtb2RhbCBhbmQgcmVtb3ZlIGlmIGl0IGV4aXN0c1xuZXhwb3J0IGNvbnN0IHJlbW92ZU1vZGFsID0gKCkgPT4ge1xuICAgIGNvbnN0IG1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsJylcbiAgICBpZiAobW9kYWwpIHtcbiAgICAgIG1vZGFsLnJlbW92ZSgpXG4gICAgfVxuICB9IiwiaW1wb3J0IHsgY2xlYXJDb250ZW50IH0gZnJvbSBcIi4vY2xlYXJcIjtcbmltcG9ydCB7IGxvYWRQYWdlIH0gZnJvbSBcIi4vcGdsb2FkXCI7XG5cbmV4cG9ydCBjb25zdCBtYWtlUHJvamVjdCA9ICh0aXRsZSkgPT4ge1xuICAgIGxldCBsaXN0ID0gW107XG4gICAgcmV0dXJuIHsgdGl0bGUsIGxpc3QgfTtcbn1cblxuZXhwb3J0IGNvbnN0IHNob3dQcm9qZWN0Rm9ybSA9ICgpID0+IHtcbiAgICBjbGVhckNvbnRlbnQoKTtcbiAgICBidWlsZFByb2plY3RGb3JtKCk7XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVQcm9qZWN0ID0gKHByb2plY3QpID0+IHtcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShwcm9qZWN0LnRpdGxlKTtcbiAgICBsb2FkUGFnZSgpO1xufVxuXG5jb25zdCBidWlsZFByb2plY3RGb3JtID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdC1jb250YWluZXJcIik7XG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpO1xuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgzXCIpO1xuICAgIHRpdGxlLnRleHRDb250ZW50ID0gXCJBZGQgYSBQcm9qZWN0XCI7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGZvcm0pO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQodGl0bGUpO1xuICAgIGZvcm0uc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJuZXdQcm9qZWN0Rm9ybVwiKTtcbiAgICBmb3JtLnNldEF0dHJpYnV0ZShcImFjdGlvblwiLCBcIlwiKTtcbiAgICBmb3JtLnNldEF0dHJpYnV0ZShcIm1ldGhvZFwiLCBcInBvc3RcIik7XG4gICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGRpdik7XG5cbiAgICAvL0J1aWxkIHByb2plY3QgaW5wdXRcbiAgICBjb25zdCBuZXdMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcbiAgICBuZXdMYWJlbC5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgXCJwcm9qZWN0XCIpO1xuICAgIG5ld0xhYmVsLnRleHRDb250ZW50ID0gXCJOZXcgUHJvamVjdFwiO1xuICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgIGlucHV0LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJ0ZXh0XCIpO1xuICAgIGlucHV0LnNldEF0dHJpYnV0ZShcImlkXCIsIFwicHJvamVjdC10aXRsZVwiKTtcbiAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwicHJvamVjdFwiKTtcbiAgICBkaXYuYXBwZW5kQ2hpbGQobmV3TGFiZWwpO1xuICAgIGRpdi5hcHBlbmRDaGlsZChpbnB1dCk7XG5cbiAgICAvL0J1aWxkIHN1Ym1pdCBidXR0b25cbiAgICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGJ1dHRvbi5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwic3VibWl0XCIpO1xuICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU3VibWl0XCI7XG4gICAgYnV0dG9uLnNldEF0dHJpYnV0ZShcImlkXCIsIFwic3VibWl0LXByb2plY3RcIik7XG4gICAgZGl2LmFwcGVuZENoaWxkKGJ1dHRvbik7XG4gICAgZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsICgpID0+IHtcbiAgICAgICAgc2F2ZVRvTG9jYWxTdG9yYWdlKGlucHV0KTtcbiAgICB9XG4gICAgKTtcbn1cblxuY29uc3Qgc2F2ZVRvTG9jYWxTdG9yYWdlID0gKGlucHV0KSA9PiB7XG4gICAgbGV0IGVtcHR5T2JqID0ge1xuICAgICAgICBsaXN0OiBbXCJcIl0sXG4gICAgICAgIHRpdGxlOiBpbnB1dC52YWx1ZVxuICAgIH1cbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShpbnB1dC52YWx1ZSwgSlNPTi5zdHJpbmdpZnkoZW1wdHlPYmopKTtcbn0iLCJpbXBvcnQgeyBkZWxldGVQcm9qZWN0IH0gZnJvbSAnLi9wcm9qZWN0LmpzJztcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuaW1wb3J0IHsgY2xlYXJDb250ZW50IH0gZnJvbSAnLi9jbGVhci5qcyc7XG5pbXBvcnQgeyBidWlsZE1vZGFsIH0gZnJvbSAnLi9tb2RhbC5qcyc7XG5cblxuZXhwb3J0IGNvbnN0IGxvYWRQYWdlID0gKCkgPT4ge1xuICAgIGNsZWFyQ29udGVudCgpO1xuICAgIGNvbnNvbGUubG9nKGxvY2FsU3RvcmFnZSk7XG5cbiAgICAvL1NldCBkZWZhdWx0IHByb2plY3RzXG4gICAgaWYgKGxvY2FsU3RvcmFnZS5sZW5ndGggPT09IDApIHtcblxuICAgICAgICBsZXQgYmFja3BhY2tUcmlwID0ge1xuICAgICAgICAgICAgbGlzdDogW1xuICAgICAgICAgICAgICAgIHt0aXRsZTogJ1BsYW4gcm91dGUnLCBkZXNjcmlwdGlvbjogJ1VzZSBndWlkZWJvb2sgdG8gcGxhbiBoaWtpbmcgcm91dGUnLCBkdWVEYXRlOiAnNC8xLzIzJywgcHJpb3JpdHk6IDEsIHN0YXR1czogMH0sXG4gICAgICAgICAgICAgICAge3RpdGxlOiAnUGxhbiBtZWFscycsIGRlc2NyaXB0aW9uOiAnUGxhbiBtZWFscyB0byBtZWV0IGNhbG9yaWUgbmVlZHMnLCBkdWVEYXRlOiAnNC83LzIzJywgcHJpb3JpdHk6IDAsIHN0YXR1czogMH0sXG4gICAgICAgICAgICAgICAge3RpdGxlOiAnUGFjayBnZWFyJywgZGVzY3JpcHRpb246ICdQYWNrIGdlYXIgbmVlZGVkIGZvciAxMCBkYXkgdHJpcCcsIGR1ZURhdGU6ICc0LzE0LzIzJywgcHJpb3JpdHk6IDEsIHN0YXR1czogMH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB0aXRsZTogXCJQcmVwIGZvciBCYWNrcGFja2luZyBUcmlwXCJcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBsb3ZlRG9nID0ge1xuICAgICAgICAgICAgbGlzdDogW1xuICAgICAgICAgICAgICAgIHt0aXRsZTogJ0N1ZGRsZScsIGRlc2NyaXB0aW9uOiAnQ3VkZGxlIHdpdGggbXkgZG9nJywgZHVlRGF0ZTogJzEyLzIwLzIyJywgcHJpb3JpdHk6IDEsIHN0YXR1czogMH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB0aXRsZTogXCJMb3ZlIG15IGRvZ1wiXG4gICAgICAgIH1cblxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImJhY2twYWNrVHJpcFwiLCBKU09OLnN0cmluZ2lmeShiYWNrcGFja1RyaXApKTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJsb3ZlRG9nXCIsIEpTT04uc3RyaW5naWZ5KGxvdmVEb2cpKTtcbiAgICB9XG5cbiAgICBcblxuICAgIC8vQWRkIGNhcmQgdG8gcHJvamVjdCBjb250YWluZXJcbiAgICBmdW5jdGlvbiBhZGRDYXJkKGNhcmQpIHtcbiAgICAgICAgY29uc3QgZGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0LWNvbnRhaW5lclwiKTtcbiAgICAgICAgZGl2LmFwcGVuZENoaWxkKGNhcmQpO1xuICAgIH1cblxuICAgIC8vQ3JlYXRlIHByb2plY3QgY2FyZHMgJiBhZGQgdG8gcHJvamVjdCBjb250YWluZXJcbiAgICAoZnVuY3Rpb24gY3JlYXRlQ2FyZERpc3BsYXkoKSB7XG4gICAgICAgIGZvciAobGV0IGk9MDsgaSA8IGxvY2FsU3RvcmFnZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgbmV3Q2FyZCA9IG1ha2VDYXJkKEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0obG9jYWxTdG9yYWdlLmtleShpKSkpKTtcbiAgICAgICAgICAgIGFkZENhcmQobmV3Q2FyZCk7XG4gICAgICAgIH1cbiAgICB9KSgpO1xufVxuXG4gICAgXG5cbi8vQnVpbGQgdGhlIHByb2plY3QgY2FyZHNcbmZ1bmN0aW9uIG1ha2VDYXJkKG9iaikge1xuICAgIC8vQ3JlYXRlIGNhcmQgJiBwcm9qZWN0IHRpdGxlXG4gICAgY29uc3QgY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY2FyZC5jbGFzc0xpc3QuYWRkKFwiY2FyZFwiKTtcbiAgICBjb25zdCBwcm9qZWN0VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XG4gICAgcHJvamVjdFRpdGxlLnRleHRDb250ZW50ID0gb2JqLnRpdGxlO1xuICAgIGNhcmQuYXBwZW5kQ2hpbGQocHJvamVjdFRpdGxlKTtcblxuICAgIC8vQ3JlYXRlIGNvbnRhaW5lciBmb3IgdG8gZG8gdGFzayBsaXN0XG4gICAgY29uc3QgbGlzdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY2FyZC5hcHBlbmRDaGlsZChsaXN0Q29udGFpbmVyKTtcbiAgICBjb25zdCB0b0RvTGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiKTtcbiAgICBsaXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKHRvRG9MaXN0KTsgICAgICAgIFxuXG4gICAgLy9DcmVhdGUgdG8gZG8gdGFzayBjaGVja2JveCwgdGl0bGUsICYgZHVlIGRhdGUgZWxlbWVudHNcbiAgICBmb3IobGV0IGk9MDsgaTxvYmoubGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCB0b0RvTGluZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcbiAgICAgICAgdG9Eb0xpc3QuYXBwZW5kQ2hpbGQodG9Eb0xpbmUpO1xuICAgICAgICBjb25zdCBsZWZ0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgdG9Eb0xpbmUuYXBwZW5kQ2hpbGQobGVmdERpdik7XG4gICAgICAgIGNvbnN0IGNoZWNrYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgIGNoZWNrYm94LmNsYXNzTGlzdC5hZGQoXCJjaGVja2JveFwiKTtcbiAgICAgICAgY29uc3QgdG9Eb1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgIGNvbnN0IHRvRG9EYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG5cbiAgICAgICAgLy9EaXNwbGF5IHRoZSBjb3JyZWN0IGNvbXBsZXRpb24gc3RhdHVzXG4gICAgICAgIGRpc3BsYXlTdGF0dXMoY2hlY2tib3gsIG9iai5saXN0W2ldLnN0YXR1cywgdG9Eb1RpdGxlLCB0b0RvRGF0ZSk7XG5cbiAgICAgICAgLy9EaXNwbGF5IGNvcnJlY3QgcHJpb3JpdHkgc3RhdHVzXG4gICAgICAgIGxldCBwcmlvcml0eVN0YXIgPSBcIlwiO1xuICAgICAgICBpZiAob2JqLmxpc3RbaV0ucHJpb3JpdHkgPT09IDEgfHwgb2JqLmxpc3RbaV0ucHJpb3JpdHkgPT09IFwiaGlnaFwiKSB7XG4gICAgICAgICAgICBwcmlvcml0eVN0YXIgPSBcIiYjMTEwODg7XCJcbiAgICAgICAgfVxuICAgICAgICBpZiAob2JqLmxpc3RbaV0udGl0bGUgIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0b0RvVGl0bGUuaW5uZXJIVE1MID0gb2JqLmxpc3RbaV0udGl0bGUgKyBcIiBcIiArIHByaW9yaXR5U3RhcjtcbiAgICAgICAgICAgIHRvRG9EYXRlLmlubmVySFRNTCA9IG9iai5saXN0W2ldLmR1ZURhdGU7XG4gICAgICAgICAgICBsZWZ0RGl2LmFwcGVuZENoaWxkKGNoZWNrYm94KTtcbiAgICAgICAgICAgIGxlZnREaXYuYXBwZW5kQ2hpbGQodG9Eb1RpdGxlKTtcbiAgICAgICAgICAgIHRvRG9MaW5lLmFwcGVuZENoaWxkKHRvRG9EYXRlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vTWFyayB0byBkbyB0YXNrIGNvbXBsZXRlIHdoZW4gY2hlY2tib3ggaXMgY2hlY2tlZFxuICAgICAgICBhZGRTdGF0dXNMaXN0ZW5lcihvYmoubGlzdFtpXS5zdGF0dXMsIGNoZWNrYm94LCB0b0RvVGl0bGUsIHRvRG9EYXRlLCBvYmosIG9iai5saXN0W2ldKTtcblxuICAgICAgICAvL0J1aWxkIG1vZGFsIHdoZW4gdXNlciBjbGlja3Mgb24gdGFzayB0aXRsZVxuICAgICAgICB0b0RvVGl0bGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgIGJ1aWxkTW9kYWwob2JqLmxpc3RbaV0sIG9iaik7XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLy9BcHBlbmQgZGVsZXRlIHByb2plY3QgYnV0dG9uXG4gICAgY29uc3QgZGVsZXRlUHJvakJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgZGVsZXRlUHJvakJ1dHRvbi5pbm5lckhUTUwgPSBcIkRlbGV0ZSBQcm9qZWN0XCI7XG4gICAgY2FyZC5hcHBlbmRDaGlsZChkZWxldGVQcm9qQnV0dG9uKTtcbiAgICBkZWxldGVQcm9qQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGRlbGV0ZVByb2plY3Qob2JqKTtcbiAgICB9KVxuICAgIHJldHVybiBjYXJkO1xufVxuXG4vL0Rpc3BsYXkgY29ycmVjdCBjb21wbGV0aW9uIHN0YXR1c1xuZnVuY3Rpb24gZGlzcGxheVN0YXR1cyhjaGVja2JveCwgc3RhdHVzLCB0b0RvVGl0bGUsIHRvRG9EYXRlKSB7XG4gICAgaWYgKHN0YXR1cyA9PT0gMSkge1xuICAgICAgICBtYXJrQ29tcGxldGUoY2hlY2tib3gsIHRvRG9UaXRsZSwgdG9Eb0RhdGUpO1xuICAgIH0gZWxzZSBpZiAoc3RhdHVzID09PSAwKSB7XG4gICAgICAgIGNoZWNrYm94LmlubmVySFRNTCA9IFwiJiM5NzQ0O1wiO1xuICAgIH1cbn1cblxuLy9NYXJrIHRhc2sgYXMgY29tcGxldGVcbmZ1bmN0aW9uIG1hcmtDb21wbGV0ZShjaGVja2JveCwgdG9Eb1RpdGxlLCB0b0RvRGF0ZSkge1xuICAgIGNoZWNrYm94LmlubmVySFRNTCA9IFwiJiM5NzQ1O1wiO1xuICAgIHRvRG9UaXRsZS5jbGFzc0xpc3QuYWRkKFwic3RyaWtldGhyb3VnaFwiKTtcbiAgICB0b0RvRGF0ZS5jbGFzc0xpc3QuYWRkKFwic3RyaWtldGhyb3VnaFwiKTtcbn1cblxuLy9NYXJrIHRhc2sgYXMgaW5jb21wbGV0ZVxuZnVuY3Rpb24gbWFya0luY29tcGxldGUoY2hlY2tib3gsIHRvRG9UaXRsZSwgdG9Eb0RhdGUpIHtcbiAgICBjaGVja2JveC5pbm5lckhUTUwgPSBcIiYjOTc0NDtcIjtcbiAgICB0b0RvVGl0bGUuY2xhc3NMaXN0LnJlbW92ZShcInN0cmlrZXRocm91Z2hcIik7XG4gICAgdG9Eb0RhdGUuY2xhc3NMaXN0LnJlbW92ZShcInN0cmlrZXRocm91Z2hcIik7XG59XG5cbmZ1bmN0aW9uIGFkZFN0YXR1c0xpc3RlbmVyKHN0YXR1cywgY2hlY2tib3gsIHRvRG9UaXRsZSwgdG9Eb0RhdGUsIHByb2osIHRvRG8pIHtcbiAgICBjaGVja2JveC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBpZiAoc3RhdHVzID09PSAwKSB7XG4gICAgICAgICAgICBtYXJrQ29tcGxldGUoY2hlY2tib3gsIHRvRG9UaXRsZSwgdG9Eb0RhdGUpO1xuICAgICAgICAgICAgdXBkYXRlU3RhdHVzKHByb2osIHRvRG8pO1xuICAgICAgICB9IGVsc2UgaWYgKHN0YXR1cyA9PT0gMSkge1xuICAgICAgICAgICAgbWFya0luY29tcGxldGUoY2hlY2tib3gsIHRvRG9UaXRsZSwgdG9Eb0RhdGUpO1xuICAgICAgICAgICAgdXBkYXRlU3RhdHVzKHByb2osIHRvRG8pO1xuICAgICAgICB9XG4gICAgfSlcbn1cblxuLy9VcGRhdGUgdGFzayBzdGF0dXMgaW4gbG9jYWwgc3RvcmFnZVxuZnVuY3Rpb24gdXBkYXRlU3RhdHVzKHByb2plY3QsIHRvRG8pIHtcbiAgICBmb3IgKGxldCBpPTA7IGk8bG9jYWxTdG9yYWdlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vRmluZCBwcm9qZWN0IGluIGxvY2FsIHN0b3JhZ2VcbiAgICAgICAgaWYgKHByb2plY3QudGl0bGUgPT09IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0obG9jYWxTdG9yYWdlLmtleShpKSkpLnRpdGxlKSB7XG4gICAgICAgICAgIC8vU2V0IHByb2plY3QgYXMgYW4gb2JqZWN0XG4gICAgICAgICAgICBsZXQgcGFyc2VkID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShsb2NhbFN0b3JhZ2Uua2V5KGkpKSk7XG4gICAgICAgICAgICAvL0ZpbmQgdG8gZG8gdGFzayB3aXRoaW4gcHJvamVjdFxuICAgICAgICAgICAgZm9yIChsZXQgaj0wOyBqPHBhcnNlZC5saXN0Lmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHBhcnNlZC5saXN0W2pdLnRpdGxlID09IHRvRG8udGl0bGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy9VcGRhdGUgc3RhdHVzIG9mIHRvIGRvIHRhc2sgaW4gcGFyc2VkIHZhcmlhYmxlXG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXJzZWQubGlzdFtqXS5zdGF0dXMgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlZC5saXN0W2pdLnN0YXR1cyA9IDE7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocGFyc2VkLmxpc3Rbal0uc3RhdHVzID09PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZWQubGlzdFtqXS5zdGF0dXMgPSAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vVXBkYXRlIGxvY2FsIHN0b3JhZ2UgdG8gbWF0Y2ggdXBkYXRlZCBwYXJzZWQgdmFyaWFibGVcbiAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0obG9jYWxTdG9yYWdlLmtleShpKSwgSlNPTi5zdHJpbmdpZnkocGFyc2VkKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgfVxuICAgICAgICB9IFxuICAgIH1cbiAgIGxvYWRQYWdlKCk7XG59IiwiaW1wb3J0IHsgcmVtb3ZlTW9kYWwgfSBmcm9tICcuL21vZGFsLmpzJztcbmltcG9ydCB7IGxvYWRQYWdlIH0gZnJvbSAnLi9wZ2xvYWQuanMnO1xuXG5cblxuZXhwb3J0IGNvbnN0IHNhdmVUb0RvID0gKGUpID0+IHtcbiAgICBcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25ld1RpdGxlXCIpLnZhbHVlO1xuICAgIGNvbnN0IGRlc2MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Rlc2NcIikudmFsdWU7XG4gICAgY29uc3QgZGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGF0ZVwiKS52YWx1ZTtcbiAgICBsZXQgcHJpb3JpdHkgPSBcIlwiO1xuICAgIGxldCBwcmlvcml0eVJlc3VsdCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKFwicHJpb3JpdHlcIik7XG4gICAgZm9yKGxldCBpID0gMDsgaSA8IHByaW9yaXR5UmVzdWx0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmKHByaW9yaXR5UmVzdWx0W2ldLmNoZWNrZWQpIHtcbiAgICAgICAgICAgIHByaW9yaXR5ID0gcHJpb3JpdHlSZXN1bHRbaV0udmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbGV0IHByb2plY3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3NlbGVjdC1vcHRpb25cIikudmFsdWU7XG4gICAgZm9yIChsZXQgaT0wOyBpPGxvY2FsU3RvcmFnZS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAocHJvamVjdCA9PSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGxvY2FsU3RvcmFnZS5rZXkoaSkpKS50aXRsZSkge1xuICAgICAgICAgICAgcHJvamVjdCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0obG9jYWxTdG9yYWdlLmtleShpKSkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBuZXdUb0RvID0gbWFrZVRvRG8odGl0bGUsIGRlc2MsIGRhdGUsIHByaW9yaXR5LCBwcm9qZWN0KTtcbiAgICBhZGRUb0RvKHByb2plY3QsIG5ld1RvRG8pO1xufVxuXG5leHBvcnQgY29uc3QgbWFrZVRvRG8gPSAodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSkgPT4ge1xuICAgIGxldCBzdGF0dXMgPSAwO1xuICAgIHJldHVybiB7IHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHksIHN0YXR1cyB9O1xufVxuXG5leHBvcnQgY29uc3QgYWRkVG9EbyA9IChwcm9qZWN0LCB0b0RvKSA9PiB7XG4gICAgIGZvciAobGV0IGk9MDsgaTxsb2NhbFN0b3JhZ2UubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgIGlmIChwcm9qZWN0LnRpdGxlID09PSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGxvY2FsU3RvcmFnZS5rZXkoaSkpKS50aXRsZSkge1xuICAgICAgICAgICAgbGV0IHBhcnNlZCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0obG9jYWxTdG9yYWdlLmtleShpKSkpO1xuICAgICAgICAgICAgcGFyc2VkLmxpc3QucHVzaCh0b0RvKTtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGxvY2FsU3RvcmFnZS5rZXkoaSksIEpTT04uc3RyaW5naWZ5KHBhcnNlZCkpO1xuICAgICAgICAgfSBcbiAgICAgfVxuICAgIGxvYWRQYWdlKCk7XG59XG5cbmV4cG9ydCBjb25zdCBkZWxldGVUb0RvID0gKHByb2plY3QsIHRvRG8pID0+IHtcbiAgICBmb3IgKGxldCBpPTA7IGk8bG9jYWxTdG9yYWdlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAocHJvamVjdC50aXRsZSA9PT0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShsb2NhbFN0b3JhZ2Uua2V5KGkpKSkudGl0bGUpIHtcbiAgICAgICAgICAgICAgIGxldCBwYXJzZWQgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGxvY2FsU3RvcmFnZS5rZXkoaSkpKTtcbiAgICAgICAgICAgICAgIGZvciAobGV0IGo9MDsgajxwYXJzZWQubGlzdC5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgIGlmIChwYXJzZWQubGlzdFtqXS50aXRsZSA9PSB0b0RvLnRpdGxlKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcnNlZC5saXN0LnNwbGljZShqLDEpO1xuICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShsb2NhbFN0b3JhZ2Uua2V5KGkpLCBKU09OLnN0cmluZ2lmeShwYXJzZWQpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IFxuICAgICAgICB9XG4gICBsb2FkUGFnZSgpO1xuICAgcmVtb3ZlTW9kYWwoKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNoYW5nZVN0YXR1cyA9IChwcm9qZWN0LCB0b0RvKSA9PiB7XG4gICAgZm9yIChsZXQgaT0wOyBpIDwgcHJvamVjdC5saXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmKHByb2plY3QubGlzdFtpXSA9PT0gdG9Ebykge1xuICAgICAgICAgICAgaWYocHJvamVjdC5saXN0W2ldLnN0YXR1cyA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHByb2plY3QubGlzdFtpXS5zdGF0dXMgPSAxO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChwcm9qZWN0Lmxpc3RbaV0uc3RhdHVzID09PSAxKSB7XG4gICAgICAgICAgICAgICAgcHJvamVjdC5saXN0W2ldLnN0YXR1cyA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBjb25zdCBjaGFuZ2VQcmlvcml0eSA9IChwcm9qZWN0LCB0b0RvKSA9PiB7XG4gICAgZm9yIChsZXQgaT0wOyBpIDwgcHJvamVjdC5saXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmKHByb2plY3QubGlzdFtpXSA9PT0gdG9Ebykge1xuICAgICAgICAgICAgaWYocHJvamVjdC5saXN0W2ldLnByaW9yaXR5ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcHJvamVjdC5saXN0W2ldLnByaW9yaXR5ID0gMTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocHJvamVjdC5saXN0W2ldLnByaW9yaXR5ID09PSAxKSB7XG4gICAgICAgICAgICAgICAgcHJvamVjdC5saXN0W2ldLnByaW9yaXR5ID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iLCJpbXBvcnQgeyBjbGVhckNvbnRlbnQgfSBmcm9tIFwiLi9jbGVhclwiO1xuaW1wb3J0IHsgc2F2ZVRvRG8gfSBmcm9tIFwiLi90by1kb3NcIjtcblxuZXhwb3J0IGNvbnN0IHNob3dUb0RvRm9ybSA9ICgpID0+IHtcbiAgICBjbGVhckNvbnRlbnQoKTtcbiAgICBidWlsZFRvRG9Gb3JtKCk7XG59XG5cbmNvbnN0IGJ1aWxkVG9Eb0Zvcm0gPSAoKSA9PiB7XG4gICAgLy9CdWlsZCBmb3JtIGNvbnRhaW5lciAmIHRpdGxlXG4gICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0LWNvbnRhaW5lclwiKTtcbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvcm1cIik7XG4gICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XG4gICAgdGl0bGUudGV4dENvbnRlbnQgPSBcIkFkZCAnVG8gRG8nIEl0ZW1cIjtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoZm9ybSk7XG4gICAgZm9ybS5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgZm9ybS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcIm5ld1RvRG9Gb3JtXCIpO1xuICAgIGZvcm0uc2V0QXR0cmlidXRlKFwiYWN0aW9uXCIsIFwiXCIpO1xuICAgIGZvcm0uc2V0QXR0cmlidXRlKFwibWV0aG9kXCIsIFwicG9zdFwiKTtcbiAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoZGl2KTtcbiAgICBjb25zdCBsaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInVsXCIpO1xuICAgIGRpdi5hcHBlbmRDaGlsZChsaXN0KTtcblxuICAgIC8vQnVpbGQgcXVlc3Rpb25zXG4gICAgYnVpbGRUZXh0SW5wdXQobGlzdCwgXCJmaXJzdEl0ZW1cIiwgXCJuZXdUaXRsZVwiLCBcIlRvIERvIEl0ZW0gVGl0bGVcIiwgXCJpbnB1dDFcIiwgXCJ0ZXh0XCIpO1xuICAgIGJ1aWxkVGV4dElucHV0KGxpc3QsIFwic2VjSXRlbVwiLCBcImRlc2NcIiwgXCJEZXNjcmlwdGlvblwiLCBcImlucHV0MlwiLCBcInRleHRcIik7XG4gICAgYnVpbGRUZXh0SW5wdXQobGlzdCwgXCJ0aGlyZEl0ZW1cIiwgXCJkYXRlXCIsIFwiRHVlIERhdGVcIiwgXCJpbnB1dDNcIiwgXCJkYXRlXCIpO1xuICAgIGJ1aWxkUmFkaW9JbnB1dChsaXN0LCBcInByaW9yaXR5XCIsIFwiaGlnaC1wcmlvcml0eVwiLCBcIkhpZ2ggUHJpb3JpdHlcIiwgXCJpbnB1dDRcIiwgXCJoaWdoXCIsIFwibG93LXByaW9yaXR5XCIsIFwiTG93IFByaW9yaXR5XCIsIFwiaW5wdXQ1XCIsIFwibG93XCIpO1xuXG4gICAgLy9CdWlsZCBwcm9qZWN0IHF1ZXN0aW9uXG4gICAgY29uc3QgbGlOYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgIGNvbnN0IHNlbGVjdExhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICAgIHNlbGVjdExhYmVsLnRleHRDb250ZW50ID0gXCJQcm9qZWN0XCI7XG4gICAgc2VsZWN0TGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIFwic2VsZWN0LW9wdGlvblwiKTtcbiAgICBjb25zdCBzZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO1xuICAgIHNlbGVjdC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwiUHJvamVjdFwiKTtcbiAgICBzZWxlY3Quc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzZWxlY3Qtb3B0aW9uXCIpO1xuICAgIGxpc3QuYXBwZW5kQ2hpbGQobGlOYW1lKTtcbiAgICBsaU5hbWUuYXBwZW5kQ2hpbGQoc2VsZWN0TGFiZWwpO1xuICAgIGxpTmFtZS5hcHBlbmRDaGlsZChzZWxlY3QpO1xuXG4gICAgZm9yKGxldCBpPTA7IGkgPCBsb2NhbFN0b3JhZ2UubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3Qgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcbiAgICAgICAgY29uc3Qgb3B0aW9uVGl0bGUgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGxvY2FsU3RvcmFnZS5rZXkoaSkpKS50aXRsZTtcbiAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsb3B0aW9uVGl0bGUpO1xuICAgICAgICBvcHRpb24udGV4dENvbnRlbnQgPSBvcHRpb25UaXRsZTtcbiAgICAgICAgc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbik7XG4gICAgfVxuXG4gICAgLy9CdWlsZCBzdWJtaXQgYnV0dG9uXG4gICAgY29uc3QgYnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBidXR0b24uc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInN1Ym1pdFwiKTtcbiAgICBidXR0b24udGV4dENvbnRlbnQgPSBcIlN1Ym1pdFwiO1xuICAgIGJ1dHRvbi5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInN1Ym1pdC10b2RvXCIpO1xuICAgIGRpdi5hcHBlbmRDaGlsZChidXR0b24pO1xuICAgIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBzYXZlVG9Ebyk7XG59XG5cbmNvbnN0IGJ1aWxkVGV4dElucHV0ID0gKGNvbnRhaW5lciwgbGlOYW1lLCBsYWJlbE5hbWUsIHRleHRDb250ZW50LCBpbnB1dE5hbWUsIGlucHV0VHlwZSkgPT4ge1xuICAgIGxpTmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcbiAgICBjb25zdCBuZXdMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcbiAgICBuZXdMYWJlbC5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgbGFiZWxOYW1lKTtcbiAgICBuZXdMYWJlbC50ZXh0Q29udGVudCA9IHRleHRDb250ZW50O1xuICAgIGlucHV0TmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBpbnB1dE5hbWUuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBpbnB1dFR5cGUpO1xuICAgIGlucHV0TmFtZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBsYWJlbE5hbWUpO1xuICAgIGlucHV0TmFtZS5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIGxhYmVsTmFtZSk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGxpTmFtZSk7XG4gICAgbGlOYW1lLmFwcGVuZENoaWxkKG5ld0xhYmVsKTtcbiAgICBsaU5hbWUuYXBwZW5kQ2hpbGQoaW5wdXROYW1lKTtcbn1cblxuY29uc3QgYnVpbGRSYWRpb0lucHV0ID0gKGNvbnRhaW5lciwgY2F0ZWdvcnksIGxhYmVsMSwgdGV4dDEsIGlucHV0MSwgdmFsdWUxLCBsYWJlbDIsIHRleHQyLCBpbnB1dDIsIHZhbHVlMikgPT4ge1xuICAgIGNvbnN0IGxpTmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQobGlOYW1lKTtcblxuICAgIGNvbnN0IGJ1aWxkUmFkaW9PcHRpb24gPSAoY2F0ZWdvcnksIGxhYmVsLCB0ZXh0LCBpbnB1dCwgdmFsdWUpID0+IHtcbiAgICAgICAgY29uc3QgbmV3TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gICAgICAgIG5ld0xhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBsYWJlbCk7XG4gICAgICAgIG5ld0xhYmVsLnRleHRDb250ZW50ID0gdGV4dDtcbiAgICAgICAgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJyYWRpb1wiKTtcbiAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKFwiaWRcIiwgbGFiZWwpO1xuICAgICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIGNhdGVnb3J5KTtcbiAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgdmFsdWUpO1xuICAgICAgICBsaU5hbWUuYXBwZW5kQ2hpbGQoaW5wdXQpO1xuICAgICAgICBsaU5hbWUuYXBwZW5kQ2hpbGQobmV3TGFiZWwpO1xuICAgIH1cblxuICAgIGJ1aWxkUmFkaW9PcHRpb24oY2F0ZWdvcnksIGxhYmVsMSwgdGV4dDEsIGlucHV0MSwgdmFsdWUxKTtcbiAgICBidWlsZFJhZGlvT3B0aW9uKGNhdGVnb3J5LCBsYWJlbDIsIHRleHQyLCBpbnB1dDIsIHZhbHVlMik7XG59IiwiaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgeyBzaG93VG9Eb0Zvcm0gfSBmcm9tICcuL3RvLWRvZm9ybS5qcyc7XG5pbXBvcnQgeyBsb2FkUGFnZSB9IGZyb20gJy4vcGdsb2FkLmpzJztcbmltcG9ydCB7IHNob3dQcm9qZWN0Rm9ybSB9IGZyb20gJy4vcHJvamVjdC5qcyc7XG5cbmxvYWRQYWdlKCk7XG5cbi8vRVZFTlQgTElTVEVORVJTLy9cbmNvbnN0IGhvbWVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5hdj51bD5saVwiKTtcbmhvbWVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGxvYWRQYWdlKTtcblxuY29uc3QgYWRkVG9Eb0J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF2PnVsPmxpK2xpXCIpO1xuYWRkVG9Eb0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgc2hvd1RvRG9Gb3JtKTtcblxuY29uc3QgYWRkUHJvamVjdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF2PnVsPmxpK2xpK2xpXCIpO1xuYWRkUHJvamVjdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgc2hvd1Byb2plY3RGb3JtKTsiXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18iLCJVUkwiLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJ1cmwiLCJvcHRpb25zIiwiU3RyaW5nIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0ZXN0Iiwic2xpY2UiLCJoYXNoIiwibmVlZFF1b3RlcyIsInJlcGxhY2UiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJtIiwibiIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwIiwiYiIsImJhc2VVUkkiLCJzZWxmIiwiaHJlZiIsIm5jIiwiY2xlYXJDb250ZW50IiwibGFzdEVsZW1lbnRDaGlsZCIsImJ1aWxkTW9kYWwiLCJwcm9qIiwibW9kYWwiLCJjbGFzc0xpc3QiLCJhZGQiLCJjaGlsZCIsIm1vZGFsSGVhZGVyIiwibW9kYWxUaXRsZSIsIm1vZGFsQ2hlY2tib3giLCJpbm5lckhUTUwiLCJ0aXRsZSIsIm1vZGFsRGl2IiwibW9kYWxEZXNjVGl0bGUiLCJtb2RhbERlc2MiLCJ0ZXh0Q29udGVudCIsImRlc2NyaXB0aW9uIiwibW9kYWxEYXRlVGl0bGUiLCJtb2RhbERhdGUiLCJkdWVEYXRlIiwibW9kYWxQcmlvcml0eVRpdGxlIiwibW9kYWxQcmlvcml0eSIsInByaW9yaXR5TGV2ZWwiLCJwcmlvcml0eVN0YXIiLCJwcmlvcml0eSIsIm1vZGFsUHJvamVjdFRpdGxlIiwibW9kYWxQcm9qZWN0IiwibW9kYWxFZGl0IiwibW9kYWxEZWxldGUiLCJidXR0b25EaXYiLCJib2R5IiwiYWRkRXZlbnRMaXN0ZW5lciIsImRlbGV0ZVRvRG8iLCJldmVudCIsImNsYXNzTmFtZSIsInJlbW92ZU1vZGFsIiwic2F2ZVRvTG9jYWxTdG9yYWdlIiwiaW5wdXQiLCJlbXB0eU9iaiIsInZhbHVlIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsImxvYWRQYWdlIiwiY29uc29sZSIsImxvZyIsImJhY2twYWNrVHJpcCIsInN0YXR1cyIsImxvdmVEb2ciLCJjYXJkIiwibWFrZUNhcmQiLCJwYXJzZSIsImdldEl0ZW0iLCJwcm9qZWN0VGl0bGUiLCJsaXN0Q29udGFpbmVyIiwidG9Eb0xpc3QiLCJ0b0RvTGluZSIsImxlZnREaXYiLCJjaGVja2JveCIsInRvRG9UaXRsZSIsInRvRG9EYXRlIiwiZGlzcGxheVN0YXR1cyIsImFkZFN0YXR1c0xpc3RlbmVyIiwiZGVsZXRlUHJvakJ1dHRvbiIsInByb2plY3QiLCJyZW1vdmVJdGVtIiwibWFya0NvbXBsZXRlIiwidG9EbyIsInVwZGF0ZVN0YXR1cyIsIm1hcmtJbmNvbXBsZXRlIiwicGFyc2VkIiwiaiIsInNhdmVUb0RvIiwicHJldmVudERlZmF1bHQiLCJkZXNjIiwiZGF0ZSIsInByaW9yaXR5UmVzdWx0IiwiZ2V0RWxlbWVudHNCeU5hbWUiLCJjaGVja2VkIiwibmV3VG9EbyIsIm1ha2VUb0RvIiwiYWRkVG9EbyIsImJ1aWxkVGV4dElucHV0IiwiY29udGFpbmVyIiwibGlOYW1lIiwibGFiZWxOYW1lIiwiaW5wdXROYW1lIiwiaW5wdXRUeXBlIiwibmV3TGFiZWwiLCJidWlsZFJhZGlvSW5wdXQiLCJjYXRlZ29yeSIsImxhYmVsMSIsInRleHQxIiwiaW5wdXQxIiwidmFsdWUxIiwibGFiZWwyIiwidGV4dDIiLCJpbnB1dDIiLCJ2YWx1ZTIiLCJidWlsZFJhZGlvT3B0aW9uIiwibGFiZWwiLCJ0ZXh0IiwiZm9ybSIsImRpdiIsInNlbGVjdExhYmVsIiwic2VsZWN0Iiwib3B0aW9uIiwib3B0aW9uVGl0bGUiLCJidXR0b24iLCJidWlsZFRvRG9Gb3JtIiwiYnVpbGRQcm9qZWN0Rm9ybSJdLCJzb3VyY2VSb290IjoiIn0=