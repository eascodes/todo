(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>p});var o=n(537),r=n.n(o),a=n(645),i=n.n(a),l=n(667),c=n.n(l),A=new URL(n(201),n.b),d=i()(r()),s=c()(A);d.push([e.id,"@font-face {\n    font-family: 'MyFont';\n    src: url("+s+');\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    color: white;\n    font-family: \'MyFont\';\n    height: 100%;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    grid-template-areas: \n        "header header"\n        "nav project-container";\n}\n\n.header {\n    background-color: #e76f51;\n    grid-area: header;\n    text-align: center;\n}\n\n.nav {\n    background-color: #264653;\n    grid-area: nav;\n    min-width: 147px;\n} \n\n.nav > ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 1.3rem;\n    padding-left: 15px;\n}\n\n.nav li {\n    margin-bottom: 10px;\n}\n\n.nav ul li:hover {\n    cursor: pointer;\n    color: #ffd56b;\n}\n\n/*MAIN PROJECTS DISPLAY*/\n\n.project-container {\n    grid-area: project-container;\n    padding: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.card {\n    background-color: #2a9d8f;\n    width: 250px;\n    height: 250px;\n    box-sizing: border-box;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n}\n\n.card h3 {\n    margin: 0;\n    text-align: center;\n    min-height: 46px;\n}\n\n.card ul {\n    list-style: none;\n    padding-left: 0;\n}\n\n.card li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.card li > div > p + p:hover {\n    color: #ffd56b;\n    cursor: pointer;\n}\n\n.card > div > ul > li > div {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    align-items: center;\n}\n\n.card li > div > p:hover {\n    cursor: pointer;\n}\n\n.card p {\n    margin: 0;\n}\n\n.card button {\n    margin-bottom: 10px;\n    margin-top: auto;\n}\n\n.checkbox {\n    font-size: 2rem;\n}\n\n.strikethrough {\n    text-decoration: line-through;\n}\n\n/*FORMS*/\n\nform {\n    background-color: #2a9d8f;\n    padding: 20px 40px 20px 40px;\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\nform div {\n    display: flex;\n    flex-direction: column;\n}\n\nform ul {\n    list-style: none;\n    margin: 0;\n    padding-left: 0;\n}\n\nform li {\n    margin-bottom: 10px;\n}\n\nlabel[for="newTitle"],\nlabel[for="desc"],\nlabel[for="date"],\nlabel[for="select-option"] {\n    margin-right: 8px;\n}\n\n#low-priority {\n    margin-left: 8px;\n}\n\nlabel[for="project"] {\n    margin-bottom: 5px;\n}\n\nform h3 {\n    margin-top: 0;\n    text-align: center;\n    font-size: 1.6rem;\n}\n\nbutton {\n   border: none;\n   text-decoration: none; \n   background-color: #264653;\n   color: white;\n   padding: 5px 10px;\n   align-self: center;\n   margin-top: 15px;\n}\n\nbutton:hover {\n    cursor: pointer;\n    color: #264653;\n    background-color: white;\n}\n\n/*MODAL*/\n\n.modal {\n    top: 0%;\n    left: 0%;\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    background: rgba(0, 0, 0, 0.5);\n  }\n\n.child {\n    top: 50%;\n    left: 50%;\n    width: 350px;\n    height: 350px;\n    padding: 30px 30px;\n    background: #2a9d8f;\n    position: absolute;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.modal-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    gap: 10px;\n}\n\n.modal-div {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto auto auto;\n    justify-items: start;\n    align-items: start;\n    column-gap: 20px;\n    row-gap: 10px;\n}\n\n.child h3 {\n    margin-top: 0;\n    align-self: center;\n}\n\n.child p,\n.child h4 {\n    margin: 0;\n}\n\n.child h4 {\n    justify-self: end;\n    font-weight: bold;\n}\n\n.star-filled {\n    color: yellow;\n}\n\n.button-div {\n    display: flex;\n    align-content: center;\n    justify-content: center;\n    gap: 20px;\n    padding-top: 10px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAA8C;AAClD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,qBAAqB;IACrB,YAAY;IACZ,iBAAiB;IACjB,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B;;+BAE2B;AAC/B;;AAEA;IACI,yBAAyB;IACzB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA,wBAAwB;;AAExB;IACI,4BAA4B;IAC5B,aAAa;IACb,aAAa;IACb,eAAe;IACf,SAAS;AACb;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,SAAS;IACT,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,6BAA6B;AACjC;;AAEA,QAAQ;;AAER;IACI,yBAAyB;IACzB,4BAA4B;IAC5B,UAAU;IACV,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;;;;IAII,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;GACG,YAAY;GACZ,qBAAqB;GACrB,yBAAyB;GACzB,YAAY;GACZ,iBAAiB;GACjB,kBAAkB;GAClB,gBAAgB;AACnB;;AAEA;IACI,eAAe;IACf,cAAc;IACd,uBAAuB;AAC3B;;AAEA,QAAQ;;AAER;IACI,OAAO;IACP,QAAQ;IACR,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,8BAA8B;EAChC;;AAEF;IACI,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB,kBAAkB;IAClB,gCAAgC;IAChC,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,uCAAuC;IACvC,oBAAoB;IACpB,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB;;AAEA;;IAEI,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,uBAAuB;IACvB,SAAS;IACT,iBAAiB;AACrB",sourcesContent:['@font-face {\n    font-family: \'MyFont\';\n    src: url(\'./LexendDeca-VariableFont_wght.ttf\');\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    color: white;\n    font-family: \'MyFont\';\n    height: 100%;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    grid-template-areas: \n        "header header"\n        "nav project-container";\n}\n\n.header {\n    background-color: #e76f51;\n    grid-area: header;\n    text-align: center;\n}\n\n.nav {\n    background-color: #264653;\n    grid-area: nav;\n    min-width: 147px;\n} \n\n.nav > ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 1.3rem;\n    padding-left: 15px;\n}\n\n.nav li {\n    margin-bottom: 10px;\n}\n\n.nav ul li:hover {\n    cursor: pointer;\n    color: #ffd56b;\n}\n\n/*MAIN PROJECTS DISPLAY*/\n\n.project-container {\n    grid-area: project-container;\n    padding: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.card {\n    background-color: #2a9d8f;\n    width: 250px;\n    height: 250px;\n    box-sizing: border-box;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n}\n\n.card h3 {\n    margin: 0;\n    text-align: center;\n    min-height: 46px;\n}\n\n.card ul {\n    list-style: none;\n    padding-left: 0;\n}\n\n.card li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.card li > div > p + p:hover {\n    color: #ffd56b;\n    cursor: pointer;\n}\n\n.card > div > ul > li > div {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    align-items: center;\n}\n\n.card li > div > p:hover {\n    cursor: pointer;\n}\n\n.card p {\n    margin: 0;\n}\n\n.card button {\n    margin-bottom: 10px;\n    margin-top: auto;\n}\n\n.checkbox {\n    font-size: 2rem;\n}\n\n.strikethrough {\n    text-decoration: line-through;\n}\n\n/*FORMS*/\n\nform {\n    background-color: #2a9d8f;\n    padding: 20px 40px 20px 40px;\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\nform div {\n    display: flex;\n    flex-direction: column;\n}\n\nform ul {\n    list-style: none;\n    margin: 0;\n    padding-left: 0;\n}\n\nform li {\n    margin-bottom: 10px;\n}\n\nlabel[for="newTitle"],\nlabel[for="desc"],\nlabel[for="date"],\nlabel[for="select-option"] {\n    margin-right: 8px;\n}\n\n#low-priority {\n    margin-left: 8px;\n}\n\nlabel[for="project"] {\n    margin-bottom: 5px;\n}\n\nform h3 {\n    margin-top: 0;\n    text-align: center;\n    font-size: 1.6rem;\n}\n\nbutton {\n   border: none;\n   text-decoration: none; \n   background-color: #264653;\n   color: white;\n   padding: 5px 10px;\n   align-self: center;\n   margin-top: 15px;\n}\n\nbutton:hover {\n    cursor: pointer;\n    color: #264653;\n    background-color: white;\n}\n\n/*MODAL*/\n\n.modal {\n    top: 0%;\n    left: 0%;\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    background: rgba(0, 0, 0, 0.5);\n  }\n\n.child {\n    top: 50%;\n    left: 50%;\n    width: 350px;\n    height: 350px;\n    padding: 30px 30px;\n    background: #2a9d8f;\n    position: absolute;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.modal-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    gap: 10px;\n}\n\n.modal-div {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto auto auto;\n    justify-items: start;\n    align-items: start;\n    column-gap: 20px;\n    row-gap: 10px;\n}\n\n.child h3 {\n    margin-top: 0;\n    align-self: center;\n}\n\n.child p,\n.child h4 {\n    margin: 0;\n}\n\n.child h4 {\n    justify-self: end;\n    font-weight: bold;\n}\n\n.star-filled {\n    color: yellow;\n}\n\n.button-div {\n    display: flex;\n    align-content: center;\n    justify-content: center;\n    gap: 20px;\n    padding-top: 10px;\n}'],sourceRoot:""}]);const p=d},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var l=0;l<this.length;l++){var c=this[l][0];null!=c&&(i[c]=!0)}for(var A=0;A<e.length;A++){var d=[].concat(e[A]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),t.push(d))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],l=0;l<e.length;l++){var c=e[l],A=o.base?c[0]+o.base:c[0],d=a[A]||0,s="".concat(A," ").concat(d);a[A]=d+1;var p=n(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=r(u,o);o.byIndex=l,t.splice(l,0,{identifier:s,updater:m,references:1})}i.push(s)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var l=n(a[i]);t[l].references--}for(var c=o(e,r),A=0;A<a.length;A++){var d=n(a[A]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}a=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},201:(e,t,n)=>{e.exports=n.p+"85a26ab7491852266e9b.ttf"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),a=n(569),i=n.n(a),l=n(565),c=n.n(l),A=n(216),d=n.n(A),s=n(589),p=n.n(s),u=n(426),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),t()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const g=()=>{const e=document.querySelector(".project-container");for(;e.lastElementChild;)e.removeChild(e.lastElementChild)},f=e=>{let t={list:[""],title:e.value};localStorage.setItem(e.value,JSON.stringify(t))},h=()=>{if(g(),0===localStorage.length){let e={list:[{title:"Plan route",description:"Use guidebook to plan hiking route",dueDate:"4/1/23",priority:1,status:0},{title:"Plan meals",description:"Plan meals to meet calorie needs",dueDate:"4/7/23",priority:0,status:0},{title:"Pack gear",description:"Pack gear needed for 10 day trip",dueDate:"4/14/23",priority:1,status:0}],title:"Prep for Backpacking Trip"},t={list:[{title:"Cuddle",description:"Cuddle with my dog",dueDate:"12/20/22",priority:1,status:0}],title:"Love my dog"};localStorage.setItem("backpackTrip",JSON.stringify(e)),localStorage.setItem("loveDog",JSON.stringify(t))}!function(){for(let t=0;t<localStorage.length;t++){e=C(JSON.parse(localStorage.getItem(localStorage.key(t)))),document.querySelector(".project-container").appendChild(e)}var e}()};function C(e){const t=document.createElement("div");t.classList.add("card");const n=document.createElement("h3");n.textContent=e.title,t.appendChild(n);const o=document.createElement("div");t.appendChild(o);const r=document.createElement("ul");o.appendChild(r);for(let t=0;t<e.list.length;t++){const n=document.createElement("li");r.appendChild(n);const o=document.createElement("div");n.appendChild(o);const a=document.createElement("p");a.classList.add("checkbox");const i=document.createElement("p"),l=document.createElement("p");B(a,e.list[t],i,l);let c="";1!==e.list[t].priority&&"high"!==e.list[t].priority||(c="&#11088;"),null!=e.list[t].title&&(i.innerHTML=e.list[t].title+" "+c,l.innerHTML=e.list[t].dueDate,o.appendChild(a),o.appendChild(i),n.appendChild(l)),b(e.list[t],a,i,l,e),i.addEventListener("click",(()=>{x(e.list[t],e)}))}const a=document.createElement("button");return a.innerHTML="Delete Project",t.appendChild(a),a.addEventListener("click",(()=>{var t;t=e,localStorage.removeItem(t.title),h()})),t}const B=(e,t,n,o)=>{1===t.status?I(e,n,o):0===t.status&&(e.innerHTML="&#9744;")},I=(e,t,n)=>{e.innerHTML="&#9745;",t.classList.add("strikethrough"),n.classList.add("strikethrough")},b=(e,t,n,o,r)=>{t.addEventListener("click",(()=>{console.log(e.status),console.log(localStorage),0===e.status?(I(t,n,o),y(r,e)):1===e.status&&(((e,t,n)=>{e.innerHTML="&#9744;",t.classList.remove("strikethrough"),n.classList.remove("strikethrough")})(t,n,o),y(r,e))}))},y=(e,t)=>{for(let n=0;n<localStorage.length;n++)if(e.title===JSON.parse(localStorage.getItem(localStorage.key(n))).title){let e=JSON.parse(localStorage.getItem(localStorage.key(n)));for(let o=0;o<e.list.length;o++)e.list[o].title==t.title&&(0===e.list[o].status?e.list[o].status=1:1===e.list[o].status&&(e.list[o].status=0),localStorage.setItem(localStorage.key(n),JSON.stringify(e)))}h(),E(t,e)},x=(e,t)=>{const n=document.createElement("div");n.classList.add("modal");const o=document.createElement("div");o.classList.add("child");const r=document.createElement("div"),a=document.createElement("h3"),i=document.createElement("p"),l=document.createElement("div"),c=document.createElement("h4"),A=document.createElement("p"),d=document.createElement("h4"),s=document.createElement("p");r.classList.add("modal-header"),l.classList.add("modal-div"),i.classList.add("checkbox"),i.innerHTML="&#9634;",a.innerHTML=e.title,c.innerHTML="Description:",A.innerHTML=e.description,d.innerHTML="Due Date:",s.innerHTML=e.dueDate,r.appendChild(i),r.appendChild(a),b(e,i,a,s,t),B(i,e,a,s);const p=document.createElement("h4");p.innerHTML="Priority:";const u=document.createElement("p");let m="",g="";1===e.priority||"high"===e.priority?(g="&#11088;",m="High priority"):(g="&#9734;",m="Low priority"),u.innerHTML=m+" "+g;const f=document.createElement("h4");f.innerHTML="Project:";const h=document.createElement("p");h.innerHTML=t.title;const C=document.createElement("button");C.textContent="Edit Task";const I=document.createElement("button");I.textContent="Delete Task";const y=document.createElement("div");y.classList.add("button-div"),o.appendChild(r),o.appendChild(l),l.appendChild(c),l.appendChild(A),l.appendChild(d),l.appendChild(s),l.appendChild(p),l.appendChild(u),l.appendChild(f),l.appendChild(h),o.appendChild(y),y.appendChild(C),y.appendChild(I),n.appendChild(o),document.body.appendChild(n),I.addEventListener("click",(()=>{j(t,e)})),n.addEventListener("click",(e=>{"modal"===e.target.className&&v()}))},v=()=>{const e=document.querySelector(".modal");e&&e.remove()},E=(e,t)=>{const n=document.querySelector(".modal");if(v(),n)for(let n=0;n<localStorage.length;n++)if(t.title===JSON.parse(localStorage.getItem(localStorage.key(n))).title){let t=JSON.parse(localStorage.getItem(localStorage.key(n)));for(let n=0;n<t.list.length;n++)t.list[n].title==e.title&&x(t.list[n],t)}},S=e=>{e.preventDefault();const t=document.querySelector("#newTitle").value,n=document.querySelector("#desc").value,o=document.querySelector("#date").value;let r="",a=document.getElementsByName("priority");for(let e=0;e<a.length;e++)a[e].checked&&(r=a[e].value);let i=document.querySelector("#select-option").value;for(let e=0;e<localStorage.length;e++)i==JSON.parse(localStorage.getItem(localStorage.key(e))).title&&(i=JSON.parse(localStorage.getItem(localStorage.key(e))));let l=k(t,n,o,r,i);w(i,l)},k=(e,t,n,o)=>({title:e,description:t,dueDate:n,priority:o,status:0}),w=(e,t)=>{for(let n=0;n<localStorage.length;n++)if(e.title===JSON.parse(localStorage.getItem(localStorage.key(n))).title){let e=JSON.parse(localStorage.getItem(localStorage.key(n)));e.list.push(t),localStorage.setItem(localStorage.key(n),JSON.stringify(e))}h()},j=(e,t)=>{for(let n=0;n<localStorage.length;n++)if(e.title===JSON.parse(localStorage.getItem(localStorage.key(n))).title){let e=JSON.parse(localStorage.getItem(localStorage.key(n)));for(let o=0;o<e.list.length;o++)e.list[o].title==t.title&&(e.list.splice(o,1),localStorage.setItem(localStorage.key(n),JSON.stringify(e)))}h(),v()},L=(e,t,n,o,r,a)=>{t=document.createElement("li");const i=document.createElement("label");i.setAttribute("for",n),i.textContent=o,(r=document.createElement("input")).setAttribute("type",a),r.setAttribute("id",n),r.setAttribute("name",n),e.appendChild(t),t.appendChild(i),t.appendChild(r)},T=(e,t,n,o,r,a,i,l,c,A)=>{const d=document.createElement("li");e.appendChild(d);const s=(e,t,n,o,r)=>{const a=document.createElement("label");a.setAttribute("for",t),a.textContent=n,(o=document.createElement("input")).setAttribute("type","radio"),o.setAttribute("id",t),o.setAttribute("name",e),o.setAttribute("value",r),d.appendChild(o),d.appendChild(a)};s(t,n,o,r,a),s(t,i,l,c,A)};h(),document.querySelector(".nav>ul>li").addEventListener("click",h),document.querySelector(".nav>ul>li+li").addEventListener("click",(()=>{g(),(()=>{const e=document.querySelector(".project-container"),t=document.createElement("form"),n=document.createElement("h3");n.textContent="Add 'To Do' Item",e.appendChild(t),t.appendChild(n),t.setAttribute("id","newToDoForm"),t.setAttribute("action",""),t.setAttribute("method","post");const o=document.createElement("div");t.appendChild(o);const r=document.createElement("ul");o.appendChild(r),L(r,"firstItem","newTitle","To Do Item Title","input1","text"),L(r,"secItem","desc","Description","input2","text"),L(r,"thirdItem","date","Due Date","input3","date"),T(r,"priority","high-priority","High Priority","input4","high","low-priority","Low Priority","input5","low");const a=document.createElement("li"),i=document.createElement("label");i.textContent="Project",i.setAttribute("for","select-option");const l=document.createElement("select");l.setAttribute("name","Project"),l.setAttribute("id","select-option"),r.appendChild(a),a.appendChild(i),a.appendChild(l);for(let e=0;e<localStorage.length;e++){const t=document.createElement("option"),n=JSON.parse(localStorage.getItem(localStorage.key(e))).title;t.setAttribute("value",n),t.textContent=n,l.appendChild(t)}const c=document.createElement("button");c.setAttribute("type","submit"),c.textContent="Submit",c.setAttribute("id","submit-todo"),o.appendChild(c),t.addEventListener("submit",S)})()})),document.querySelector(".nav>ul>li+li+li").addEventListener("click",(()=>{g(),(()=>{const e=document.querySelector(".project-container"),t=document.createElement("form"),n=document.createElement("h3");n.textContent="Add a Project",e.appendChild(t),t.appendChild(n),t.setAttribute("id","newProjectForm"),t.setAttribute("action",""),t.setAttribute("method","post");const o=document.createElement("div");t.appendChild(o);const r=document.createElement("label");r.setAttribute("for","project"),r.textContent="New Project";const a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("id","project-title"),a.setAttribute("name","project"),o.appendChild(r),o.appendChild(a);const i=document.createElement("button");i.setAttribute("type","submit"),i.textContent="Submit",i.setAttribute("id","submit-project"),o.appendChild(i),t.addEventListener("submit",(()=>{f(a)}))})()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,