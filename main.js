(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(537),o=n.n(r),a=n(645),i=n.n(a),c=n(667),l=n.n(c),d=new URL(n(201),n.b),s=i()(o()),u=l()(d);s.push([e.id,"@font-face {\n    font-family: 'MyFont';\n    src: url("+u+');\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    color: white;\n    font-family: \'MyFont\';\n    height: 100%;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    grid-template-areas: \n        "header header"\n        "nav project-container";\n}\n\n.header {\n    background-color: #e76f51;\n    grid-area: header;\n    text-align: center;\n}\n\n.nav {\n    background-color: #264653;\n    grid-area: nav;\n} \n\n.nav > ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 1.3rem;\n    padding-left: 15px;\n}\n\n.project-container {\n    background-color: #e9c46a;\n    grid-area: project-container;\n    padding: 20px;\n    display: flex;\n    gap: 20px;\n}\n\n.card {\n    background-color: #2a9d8f;\n    width: 250px;\n    height: 250px;\n    box-sizing: border-box;\n    padding: 10px;\n}\n\n.card h3 {\n    margin: 0;\n    text-align: center;\n}\n\n.card ul {\n    list-style: none;\n    padding-left: 0;\n}\n\n.card li {\n    display: flex;\n    justify-content: space-between;\n}\n\n.card p {\n    margin: 0;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAA8C;AAClD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,qBAAqB;IACrB,YAAY;IACZ,iBAAiB;IACjB,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B;;+BAE2B;AAC/B;;AAEA;IACI,yBAAyB;IACzB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,4BAA4B;IAC5B,aAAa;IACb,aAAa;IACb,SAAS;AACb;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,SAAS;AACb",sourcesContent:["@font-face {\n    font-family: 'MyFont';\n    src: url('./LexendDeca-VariableFont_wght.ttf');\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    color: white;\n    font-family: 'MyFont';\n    height: 100%;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    grid-template-areas: \n        \"header header\"\n        \"nav project-container\";\n}\n\n.header {\n    background-color: #e76f51;\n    grid-area: header;\n    text-align: center;\n}\n\n.nav {\n    background-color: #264653;\n    grid-area: nav;\n} \n\n.nav > ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 1.3rem;\n    padding-left: 15px;\n}\n\n.project-container {\n    background-color: #e9c46a;\n    grid-area: project-container;\n    padding: 20px;\n    display: flex;\n    gap: 20px;\n}\n\n.card {\n    background-color: #2a9d8f;\n    width: 250px;\n    height: 250px;\n    box-sizing: border-box;\n    padding: 10px;\n}\n\n.card h3 {\n    margin: 0;\n    text-align: center;\n}\n\n.card ul {\n    list-style: none;\n    padding-left: 0;\n}\n\n.card li {\n    display: flex;\n    justify-content: space-between;\n}\n\n.card p {\n    margin: 0;\n}"],sourceRoot:""}]);const p=s},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var d=0;d<e.length;d++){var s=[].concat(e[d]);r&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),t.push(s))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var l=e[c],d=r.base?l[0]+r.base:l[0],s=a[d]||0,u="".concat(d," ").concat(s);a[d]=s+1;var p=n(u),A={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var m=o(A,r);r.byIndex=c,t.splice(c,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var l=r(e,o),d=0;d<a.length;d++){var s=n(a[d]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}a=l}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},201:(e,t,n)=>{e.exports=n.p+"85a26ab7491852266e9b.ttf"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),i=n.n(a),c=n(565),l=n.n(c),d=n(216),s=n.n(d),u=n(589),p=n.n(u),A=n(426),m={};m.styleTagTransform=p(),m.setAttributes=l(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=s(),t()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;const f=()=>{const e=document.querySelector(".project-container");for(;e.lastElementChild;)e.removeChild(e.lastElementChild)},h=(e,t,n,r,o,a)=>{t=document.createElement("li");const i=document.createElement("label");i.setAttribute("for",n),i.textContent=r,(o=document.createElement("input")).setAttribute("type",a),o.setAttribute("id",n),o.setAttribute("name",n),e.appendChild(t),t.appendChild(i),t.appendChild(o)},g=(e,t,n,r,o,a,i,c,l,d)=>{const s=document.createElement("li");e.appendChild(s);const u=(e,t,n,r,o)=>{const a=document.createElement("label");a.setAttribute("for",t),a.textContent=n,(r=document.createElement("input")).setAttribute("type","radio"),r.setAttribute("id",t),r.setAttribute("name",e),r.setAttribute("value",o),s.appendChild(a),s.appendChild(r)};u(t,n,r,o,a),u(t,i,c,l,d)};let C=[];const y=()=>{if(f(),0===C.length){let e={list:[{title:"Plan route",description:"Use guidebook to plan hiking route",dueDate:"4/1/23",priority:1,status:0},{title:"Plan meals",description:"Plan meals to meet calorie needs",dueDate:"4/7/23",priority:0,status:0},{title:"Pack gear",description:"Pack gear needed for 10 day trip",dueDate:"4/14/23",priority:1,status:0}],title:"Prep for Backpacking Trip"},t={list:[{title:"Cuddle",description:"Cuddle with my dog",dueDate:"12/20/22",priority:1,status:0}],title:"Love my dog"};C.push(e),C.push(t)}function e(e){const t=document.createElement("div");t.classList.add("card");const n=document.createElement("h3");n.textContent=e.title,t.appendChild(n);const r=document.createElement("div");t.appendChild(r);const o=document.createElement("ul");r.appendChild(o);for(let t=0;t<e.list.length;t++){const n=document.createElement("li");o.appendChild(n);const r=document.createElement("p"),a=document.createElement("p");r.textContent=e.list[t].title,a.textContent=e.list[t].dueDate,n.appendChild(r),n.appendChild(a)}return t}return console.log(C),function(){for(let n=0;n<C.length;n++){t=e(C[n]),document.querySelector(".project-container").appendChild(t)}var t}(),C},b=()=>{const e=document.querySelector("#newTitle").value,t=document.querySelector("#desc").value,n=document.querySelector("#date").value;let r="",o=document.getElementsByName("priority");for(let e=0;e<o.length;e++)o[e].checked&&(r=o[e].value);let a=document.querySelector("#select-option").value;for(let e=0;e<C.length;e++)a==C[e].title&&(a=C[e]);let i=v(e,t,n,r,a);B(a,i)},v=(e,t,n,r)=>({title:e,description:t,dueDate:n,priority:r,status:0}),B=(e,t)=>{e.list.push(t),y()};y(),document.querySelector(".nav>ul>li").addEventListener("click",y),document.querySelector(".nav>ul>li+li").addEventListener("click",(()=>{f(),(()=>{const e=document.querySelector(".project-container"),t=document.createElement("form"),n=document.createElement("h3");n.textContent="Add a 'To Do' Item",e.appendChild(t),t.appendChild(n),t.setAttribute("id","newToDoForm"),t.setAttribute("action",""),t.setAttribute("method","post");const r=document.createElement("div");t.appendChild(r);const o=document.createElement("ul");r.appendChild(o),h(o,"firstItem","newTitle","To Do Item Title","input1","text"),h(o,"secItem","desc","Description","input2","text"),h(o,"thirdItem","date","Due Date","input3","date"),g(o,"priority","high-priority","High Priority","input4","high","low-priority","Low Priority","input5","low");const a=document.createElement("li"),i=document.createElement("select");i.setAttribute("name","Project"),i.setAttribute("id","select-option"),o.appendChild(a),a.appendChild(i);for(let e=0;e<C.length;e++){const t=document.createElement("option");t.setAttribute("value",C[e].title),t.textContent=C[e].title,i.appendChild(t)}const c=document.createElement("button");c.setAttribute("type","submit"),c.textContent="Submit",c.setAttribute("id","submit-todo"),r.appendChild(c),t.addEventListener("submit",b)})()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,