(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>p});var o=n(537),r=n.n(o),i=n(645),a=n.n(i),l=n(667),c=n.n(l),A=new URL(n(201),n.b),d=a()(r()),s=c()(A);d.push([e.id,"@font-face {\n    font-family: 'MyFont';\n    src: url("+s+');\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    color: white;\n    font-family: \'MyFont\';\n    height: 100%;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    grid-template-areas: \n        "header header"\n        "nav project-container";\n}\n\n.header {\n    background-color: #e76f51;\n    grid-area: header;\n    text-align: center;\n}\n\n.nav {\n    background-color: #264653;\n    grid-area: nav;\n    min-width: 147px;\n} \n\n.nav > ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 1.3rem;\n    padding-left: 15px;\n}\n\n.nav li {\n    margin-bottom: 10px;\n}\n\n.nav ul li:hover {\n    cursor: pointer;\n    color: #ffd56b;\n}\n\n/*MAIN PROJECTS DISPLAY*/\n\n.project-container {\n    grid-area: project-container;\n    padding: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.card {\n    background-color: #2a9d8f;\n    width: 250px;\n    height: 250px;\n    box-sizing: border-box;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n}\n\n.card h3 {\n    margin: 0;\n    text-align: center;\n    min-height: 46px;\n}\n\n.card ul {\n    list-style: none;\n    padding-left: 0;\n}\n\n.card li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.card li > div > p + p:hover {\n    color: #ffd56b;\n    cursor: pointer;\n}\n\n.card > div > ul > li > div {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    align-items: center;\n}\n\n.card li > div > p:hover {\n    cursor: pointer;\n}\n\n.card p {\n    margin: 0;\n}\n\n.card button {\n    margin-bottom: 10px;\n    margin-top: auto;\n}\n\n.checkbox {\n    font-size: 2rem;\n}\n\n.strikethrough {\n    text-decoration: line-through;\n}\n\n/*FORMS*/\n\nform {\n    background-color: #2a9d8f;\n    padding: 20px 40px 20px 40px;\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\nform div {\n    display: flex;\n    flex-direction: column;\n}\n\nform ul {\n    list-style: none;\n    margin: 0;\n    padding-left: 0;\n}\n\nform li {\n    margin-bottom: 10px;\n}\n\nlabel[for="newTitle"],\nlabel[for="desc"],\nlabel[for="date"],\nlabel[for="select-option"] {\n    margin-right: 8px;\n}\n\n#low-priority {\n    margin-left: 8px;\n}\n\nlabel[for="project"] {\n    margin-bottom: 5px;\n}\n\nform h3 {\n    margin-top: 0;\n    text-align: center;\n    font-size: 1.6rem;\n}\n\nbutton {\n   border: none;\n   text-decoration: none; \n   background-color: #264653;\n   color: white;\n   padding: 5px 10px;\n   align-self: center;\n   margin-top: 15px;\n}\n\nbutton:hover {\n    cursor: pointer;\n    color: #264653;\n    background-color: white;\n}\n\n/*MODAL*/\n\n.modal {\n    top: 0%;\n    left: 0%;\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    background: rgba(0, 0, 0, 0.5);\n  }\n\n.child {\n    top: 50%;\n    left: 50%;\n    width: 350px;\n    height: 350px;\n    padding: 30px 30px;\n    background: #2a9d8f;\n    position: absolute;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.modal-div {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto auto auto;\n    justify-items: start;\n    align-items: start;\n    column-gap: 20px;\n    row-gap: 10px;\n}\n\n.child h3 {\n    margin-top: 0;\n    align-self: center;\n}\n\n.child p,\n.child h4 {\n    margin: 0;\n}\n\n.child h4 {\n    justify-self: end;\n    font-weight: bold;\n}\n\n.star-filled {\n    color: yellow;\n}\n\n.button-div {\n    display: flex;\n    align-content: center;\n    justify-content: center;\n    gap: 20px;\n    padding-top: 10px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAA8C;AAClD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,qBAAqB;IACrB,YAAY;IACZ,iBAAiB;IACjB,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B;;+BAE2B;AAC/B;;AAEA;IACI,yBAAyB;IACzB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA,wBAAwB;;AAExB;IACI,4BAA4B;IAC5B,aAAa;IACb,aAAa;IACb,eAAe;IACf,SAAS;AACb;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,SAAS;IACT,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,6BAA6B;AACjC;;AAEA,QAAQ;;AAER;IACI,yBAAyB;IACzB,4BAA4B;IAC5B,UAAU;IACV,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;;;;IAII,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;GACG,YAAY;GACZ,qBAAqB;GACrB,yBAAyB;GACzB,YAAY;GACZ,iBAAiB;GACjB,kBAAkB;GAClB,gBAAgB;AACnB;;AAEA;IACI,eAAe;IACf,cAAc;IACd,uBAAuB;AAC3B;;AAEA,QAAQ;;AAER;IACI,OAAO;IACP,QAAQ;IACR,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,8BAA8B;EAChC;;AAEF;IACI,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB,kBAAkB;IAClB,gCAAgC;IAChC,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,uCAAuC;IACvC,oBAAoB;IACpB,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB;;AAEA;;IAEI,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,uBAAuB;IACvB,SAAS;IACT,iBAAiB;AACrB",sourcesContent:['@font-face {\n    font-family: \'MyFont\';\n    src: url(\'./LexendDeca-VariableFont_wght.ttf\');\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    color: white;\n    font-family: \'MyFont\';\n    height: 100%;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    grid-template-areas: \n        "header header"\n        "nav project-container";\n}\n\n.header {\n    background-color: #e76f51;\n    grid-area: header;\n    text-align: center;\n}\n\n.nav {\n    background-color: #264653;\n    grid-area: nav;\n    min-width: 147px;\n} \n\n.nav > ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 1.3rem;\n    padding-left: 15px;\n}\n\n.nav li {\n    margin-bottom: 10px;\n}\n\n.nav ul li:hover {\n    cursor: pointer;\n    color: #ffd56b;\n}\n\n/*MAIN PROJECTS DISPLAY*/\n\n.project-container {\n    grid-area: project-container;\n    padding: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.card {\n    background-color: #2a9d8f;\n    width: 250px;\n    height: 250px;\n    box-sizing: border-box;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n}\n\n.card h3 {\n    margin: 0;\n    text-align: center;\n    min-height: 46px;\n}\n\n.card ul {\n    list-style: none;\n    padding-left: 0;\n}\n\n.card li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.card li > div > p + p:hover {\n    color: #ffd56b;\n    cursor: pointer;\n}\n\n.card > div > ul > li > div {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    align-items: center;\n}\n\n.card li > div > p:hover {\n    cursor: pointer;\n}\n\n.card p {\n    margin: 0;\n}\n\n.card button {\n    margin-bottom: 10px;\n    margin-top: auto;\n}\n\n.checkbox {\n    font-size: 2rem;\n}\n\n.strikethrough {\n    text-decoration: line-through;\n}\n\n/*FORMS*/\n\nform {\n    background-color: #2a9d8f;\n    padding: 20px 40px 20px 40px;\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\nform div {\n    display: flex;\n    flex-direction: column;\n}\n\nform ul {\n    list-style: none;\n    margin: 0;\n    padding-left: 0;\n}\n\nform li {\n    margin-bottom: 10px;\n}\n\nlabel[for="newTitle"],\nlabel[for="desc"],\nlabel[for="date"],\nlabel[for="select-option"] {\n    margin-right: 8px;\n}\n\n#low-priority {\n    margin-left: 8px;\n}\n\nlabel[for="project"] {\n    margin-bottom: 5px;\n}\n\nform h3 {\n    margin-top: 0;\n    text-align: center;\n    font-size: 1.6rem;\n}\n\nbutton {\n   border: none;\n   text-decoration: none; \n   background-color: #264653;\n   color: white;\n   padding: 5px 10px;\n   align-self: center;\n   margin-top: 15px;\n}\n\nbutton:hover {\n    cursor: pointer;\n    color: #264653;\n    background-color: white;\n}\n\n/*MODAL*/\n\n.modal {\n    top: 0%;\n    left: 0%;\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    background: rgba(0, 0, 0, 0.5);\n  }\n\n.child {\n    top: 50%;\n    left: 50%;\n    width: 350px;\n    height: 350px;\n    padding: 30px 30px;\n    background: #2a9d8f;\n    position: absolute;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.modal-div {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto auto auto;\n    justify-items: start;\n    align-items: start;\n    column-gap: 20px;\n    row-gap: 10px;\n}\n\n.child h3 {\n    margin-top: 0;\n    align-self: center;\n}\n\n.child p,\n.child h4 {\n    margin: 0;\n}\n\n.child h4 {\n    justify-self: end;\n    font-weight: bold;\n}\n\n.star-filled {\n    color: yellow;\n}\n\n.button-div {\n    display: flex;\n    align-content: center;\n    justify-content: center;\n    gap: 20px;\n    padding-top: 10px;\n}'],sourceRoot:""}]);const p=d},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var l=0;l<this.length;l++){var c=this[l][0];null!=c&&(a[c]=!0)}for(var A=0;A<e.length;A++){var d=[].concat(e[A]);o&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),t.push(d))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],l=0;l<e.length;l++){var c=e[l],A=o.base?c[0]+o.base:c[0],d=i[A]||0,s="".concat(A," ").concat(d);i[A]=d+1;var p=n(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=r(u,o);o.byIndex=l,t.splice(l,0,{identifier:s,updater:m,references:1})}a.push(s)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var l=n(i[a]);t[l].references--}for(var c=o(e,r),A=0;A<i.length;A++){var d=n(i[A]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},201:(e,t,n)=>{e.exports=n.p+"85a26ab7491852266e9b.ttf"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),i=n(569),a=n.n(i),l=n(565),c=n.n(l),A=n(216),d=n.n(A),s=n(589),p=n.n(s),u=n(426),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),t()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const g=()=>{const e=document.querySelector(".project-container");for(;e.lastElementChild;)e.removeChild(e.lastElementChild)},f=(e,t)=>{const n=document.createElement("div");n.classList.add("modal");const o=document.createElement("div");o.classList.add("child");const r=document.createElement("h3"),i=document.createElement("div");i.classList.add("modal-div"),r.innerHTML="&#9634; "+e.title;const a=document.createElement("h4");a.innerHTML="Description:";const l=document.createElement("p");l.textContent=e.description;const c=document.createElement("h4");c.innerHTML="Due Date:";const A=document.createElement("p");A.textContent=e.dueDate;const d=document.createElement("h4");d.innerHTML="Priority:";const s=document.createElement("p");let p="",u="";1===e.priority||"high"===e.priority?(u="&#11088;",p="High priority"):(u="&#9734;",p="Low priority"),s.innerHTML=p+" "+u;const m=document.createElement("h4");m.innerHTML="Project:";const g=document.createElement("p");g.innerHTML=t.title;const f=document.createElement("button");f.textContent="Edit Task";const C=document.createElement("button");C.textContent="Delete Task";const B=document.createElement("div");B.classList.add("button-div"),o.appendChild(r),o.appendChild(i),i.appendChild(a),i.appendChild(l),i.appendChild(c),i.appendChild(A),i.appendChild(d),i.appendChild(s),i.appendChild(m),i.appendChild(g),o.appendChild(B),B.appendChild(f),B.appendChild(C),n.appendChild(o),document.body.appendChild(n),C.addEventListener("click",(()=>{v(t,e)})),n.addEventListener("click",(e=>{"modal"===e.target.className&&h()}))},h=()=>{const e=document.querySelector(".modal");e&&e.remove()},C=e=>{let t={list:[""],title:e.value};localStorage.setItem(e.value,JSON.stringify(t))},B=()=>{if(g(),console.log(localStorage),0===localStorage.length){let e={list:[{title:"Plan route",description:"Use guidebook to plan hiking route",dueDate:"4/1/23",priority:1,status:0},{title:"Plan meals",description:"Plan meals to meet calorie needs",dueDate:"4/7/23",priority:0,status:0},{title:"Pack gear",description:"Pack gear needed for 10 day trip",dueDate:"4/14/23",priority:1,status:0}],title:"Prep for Backpacking Trip"},t={list:[{title:"Cuddle",description:"Cuddle with my dog",dueDate:"12/20/22",priority:1,status:0}],title:"Love my dog"};localStorage.setItem("backpackTrip",JSON.stringify(e)),localStorage.setItem("loveDog",JSON.stringify(t))}function e(e){const r=document.createElement("div");r.classList.add("card");const i=document.createElement("h3");i.textContent=e.title,r.appendChild(i);const a=document.createElement("div");r.appendChild(a);const l=document.createElement("ul");a.appendChild(l);for(let r=0;r<e.list.length;r++){const i=document.createElement("li");l.appendChild(i);const a=document.createElement("div");i.appendChild(a);const c=document.createElement("p");c.classList.add("checkbox");const A=document.createElement("p"),d=document.createElement("p");1===e.list[r].status?t(c,A,d,0,e.list[r]):0===e.list[r].status&&(c.innerHTML="&#9744;");let s="";1!==e.list[r].priority&&"high"!==e.list[r].priority||(s="&#11088;"),null!=e.list[r].title&&(A.innerHTML=e.list[r].title+" "+s,d.innerHTML=e.list[r].dueDate,a.appendChild(c),a.appendChild(A),i.appendChild(d)),c.addEventListener("click",(()=>{0===e.list[r].status?(t(c,A,d,0,e.list[r]),o(e,e.list[r])):1===e.list[r].status&&(n(c,A,d,0,e.list[r]),o(e,e.list[r]))})),A.addEventListener("click",(()=>{f(e.list[r],e)}))}const c=document.createElement("button");return c.innerHTML="Delete Project",r.appendChild(c),c.addEventListener("click",(()=>{var t;t=e,localStorage.removeItem(t.title),B()})),r}function t(e,t,n,o,r){e.innerHTML="&#9745;",t.classList.add("strikethrough"),n.classList.add("strikethrough")}function n(e,t,n,o,r){e.innerHTML="&#9744;",t.classList.remove("strikethrough"),n.classList.remove("strikethrough")}function o(e,t){for(let n=0;n<localStorage.length;n++)if(e.title===JSON.parse(localStorage.getItem(localStorage.key(n))).title){let e=JSON.parse(localStorage.getItem(localStorage.key(n)));for(let o=0;o<e.list.length;o++)e.list[o].title==t.title&&(0===e.list[o].status?e.list[o].status=1:1===e.list[o].status&&(e.list[o].status=0),localStorage.setItem(localStorage.key(n),JSON.stringify(e)))}B()}!function(){for(let n=0;n<localStorage.length;n++){t=e(JSON.parse(localStorage.getItem(localStorage.key(n)))),document.querySelector(".project-container").appendChild(t)}var t}()},I=e=>{e.preventDefault();const t=document.querySelector("#newTitle").value,n=document.querySelector("#desc").value,o=document.querySelector("#date").value;let r="",i=document.getElementsByName("priority");for(let e=0;e<i.length;e++)i[e].checked&&(r=i[e].value);let a=document.querySelector("#select-option").value;for(let e=0;e<localStorage.length;e++)a==JSON.parse(localStorage.getItem(localStorage.key(e))).title&&(a=JSON.parse(localStorage.getItem(localStorage.key(e))));let l=b(t,n,o,r,a);y(a,l)},b=(e,t,n,o)=>({title:e,description:t,dueDate:n,priority:o,status:0}),y=(e,t)=>{for(let n=0;n<localStorage.length;n++)if(e.title===JSON.parse(localStorage.getItem(localStorage.key(n))).title){let e=JSON.parse(localStorage.getItem(localStorage.key(n)));e.list.push(t),localStorage.setItem(localStorage.key(n),JSON.stringify(e))}B()},v=(e,t)=>{for(let n=0;n<localStorage.length;n++)if(e.title===JSON.parse(localStorage.getItem(localStorage.key(n))).title){let e=JSON.parse(localStorage.getItem(localStorage.key(n)));for(let o=0;o<e.list.length;o++)e.list[o].title==t.title&&(e.list.splice(o,1),localStorage.setItem(localStorage.key(n),JSON.stringify(e)))}B(),h()},x=(e,t,n,o,r,i)=>{t=document.createElement("li");const a=document.createElement("label");a.setAttribute("for",n),a.textContent=o,(r=document.createElement("input")).setAttribute("type",i),r.setAttribute("id",n),r.setAttribute("name",n),e.appendChild(t),t.appendChild(a),t.appendChild(r)},E=(e,t,n,o,r,i,a,l,c,A)=>{const d=document.createElement("li");e.appendChild(d);const s=(e,t,n,o,r)=>{const i=document.createElement("label");i.setAttribute("for",t),i.textContent=n,(o=document.createElement("input")).setAttribute("type","radio"),o.setAttribute("id",t),o.setAttribute("name",e),o.setAttribute("value",r),d.appendChild(o),d.appendChild(i)};s(t,n,o,r,i),s(t,a,l,c,A)};B(),document.querySelector(".nav>ul>li").addEventListener("click",B),document.querySelector(".nav>ul>li+li").addEventListener("click",(()=>{g(),(()=>{const e=document.querySelector(".project-container"),t=document.createElement("form"),n=document.createElement("h3");n.textContent="Add 'To Do' Item",e.appendChild(t),t.appendChild(n),t.setAttribute("id","newToDoForm"),t.setAttribute("action",""),t.setAttribute("method","post");const o=document.createElement("div");t.appendChild(o);const r=document.createElement("ul");o.appendChild(r),x(r,"firstItem","newTitle","To Do Item Title","input1","text"),x(r,"secItem","desc","Description","input2","text"),x(r,"thirdItem","date","Due Date","input3","date"),E(r,"priority","high-priority","High Priority","input4","high","low-priority","Low Priority","input5","low");const i=document.createElement("li"),a=document.createElement("label");a.textContent="Project",a.setAttribute("for","select-option");const l=document.createElement("select");l.setAttribute("name","Project"),l.setAttribute("id","select-option"),r.appendChild(i),i.appendChild(a),i.appendChild(l);for(let e=0;e<localStorage.length;e++){const t=document.createElement("option"),n=JSON.parse(localStorage.getItem(localStorage.key(e))).title;t.setAttribute("value",n),t.textContent=n,l.appendChild(t)}const c=document.createElement("button");c.setAttribute("type","submit"),c.textContent="Submit",c.setAttribute("id","submit-todo"),o.appendChild(c),t.addEventListener("submit",I)})()})),document.querySelector(".nav>ul>li+li+li").addEventListener("click",(()=>{g(),(()=>{const e=document.querySelector(".project-container"),t=document.createElement("form"),n=document.createElement("h3");n.textContent="Add a Project",e.appendChild(t),t.appendChild(n),t.setAttribute("id","newProjectForm"),t.setAttribute("action",""),t.setAttribute("method","post");const o=document.createElement("div");t.appendChild(o);const r=document.createElement("label");r.setAttribute("for","project"),r.textContent="New Project";const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("id","project-title"),i.setAttribute("name","project"),o.appendChild(r),o.appendChild(i);const a=document.createElement("button");a.setAttribute("type","submit"),a.textContent="Submit",a.setAttribute("id","submit-project"),o.appendChild(a),t.addEventListener("submit",(()=>{C(i)}))})()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RixFQUFNcEYsYUFBYSxLQUFNLGlCQUN6Qm9GLEVBQU1wRixhQUFhLE9BQVEsV0FDM0JtSixFQUFJMUosWUFBWTJJLEdBQ2hCZSxFQUFJMUosWUFBWTJGLEdBR2hCLE1BQU1vRSxFQUFTeEssU0FBU1csY0FBYyxVQUN0QzZKLEVBQU94SixhQUFhLE9BQVEsVUFDNUJ3SixFQUFPMUYsWUFBYyxTQUNyQjBGLEVBQU94SixhQUFhLEtBQU0sa0JBQzFCbUosRUFBSTFKLFlBQVkrSixHQUNoQk4sRUFBS3BFLGlCQUFpQixVQUFVLEtBQzVCSyxFQUFtQkMsRUFBTSxHQUU1QixFQXpDRHNFLEVBQWtCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NsZWFyLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvbW9kYWwuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9wcm9qZWN0LmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvcGdsb2FkLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvdG8tZG9zLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvdG8tZG9mb3JtLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIi4vTGV4ZW5kRGVjYS1WYXJpYWJsZUZvbnRfd2dodC50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdNeUZvbnQnO1xcbiAgICBzcmM6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gKyBcIik7XFxufVxcblxcbmJvZHkge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgZm9udC1mYW1pbHk6ICdNeUZvbnQnO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA2ZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDZmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXFxuICAgICAgICBcXFwiaGVhZGVyIGhlYWRlclxcXCJcXG4gICAgICAgIFxcXCJuYXYgcHJvamVjdC1jb250YWluZXJcXFwiO1xcbn1cXG5cXG4uaGVhZGVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U3NmY1MTtcXG4gICAgZ3JpZC1hcmVhOiBoZWFkZXI7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLm5hdiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNjQ2NTM7XFxuICAgIGdyaWQtYXJlYTogbmF2O1xcbiAgICBtaW4td2lkdGg6IDE0N3B4O1xcbn0gXFxuXFxuLm5hdiA+IHVsIHtcXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiA1cHg7XFxuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XFxufVxcblxcbi5uYXYgbGkge1xcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbn1cXG5cXG4ubmF2IHVsIGxpOmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBjb2xvcjogI2ZmZDU2YjtcXG59XFxuXFxuLypNQUlOIFBST0pFQ1RTIERJU1BMQVkqL1xcblxcbi5wcm9qZWN0LWNvbnRhaW5lciB7XFxuICAgIGdyaWQtYXJlYTogcHJvamVjdC1jb250YWluZXI7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXG4gICAgZ2FwOiAyMHB4O1xcbn1cXG5cXG4uY2FyZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyYTlkOGY7XFxuICAgIHdpZHRoOiAyNTBweDtcXG4gICAgaGVpZ2h0OiAyNTBweDtcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLmNhcmQgaDMge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgbWluLWhlaWdodDogNDZweDtcXG59XFxuXFxuLmNhcmQgdWwge1xcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XFxufVxcblxcbi5jYXJkIGxpIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uY2FyZCBsaSA+IGRpdiA+IHAgKyBwOmhvdmVyIHtcXG4gICAgY29sb3I6ICNmZmQ1NmI7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmNhcmQgPiBkaXYgPiB1bCA+IGxpID4gZGl2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgZ2FwOiA1cHg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5jYXJkIGxpID4gZGl2ID4gcDpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmNhcmQgcCB7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxuLmNhcmQgYnV0dG9uIHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG4gICAgbWFyZ2luLXRvcDogYXV0bztcXG59XFxuXFxuLmNoZWNrYm94IHtcXG4gICAgZm9udC1zaXplOiAycmVtO1xcbn1cXG5cXG4uc3RyaWtldGhyb3VnaCB7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xcbn1cXG5cXG4vKkZPUk1TKi9cXG5cXG5mb3JtIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJhOWQ4ZjtcXG4gICAgcGFkZGluZzogMjBweCA0MHB4IDIwcHggNDBweDtcXG4gICAgd2lkdGg6IDUwJTtcXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XFxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcXG59XFxuXFxuZm9ybSBkaXYge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG5mb3JtIHVsIHtcXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XFxufVxcblxcbmZvcm0gbGkge1xcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbn1cXG5cXG5sYWJlbFtmb3I9XFxcIm5ld1RpdGxlXFxcIl0sXFxubGFiZWxbZm9yPVxcXCJkZXNjXFxcIl0sXFxubGFiZWxbZm9yPVxcXCJkYXRlXFxcIl0sXFxubGFiZWxbZm9yPVxcXCJzZWxlY3Qtb3B0aW9uXFxcIl0ge1xcbiAgICBtYXJnaW4tcmlnaHQ6IDhweDtcXG59XFxuXFxuI2xvdy1wcmlvcml0eSB7XFxuICAgIG1hcmdpbi1sZWZ0OiA4cHg7XFxufVxcblxcbmxhYmVsW2Zvcj1cXFwicHJvamVjdFxcXCJdIHtcXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xcbn1cXG5cXG5mb3JtIGgzIHtcXG4gICAgbWFyZ2luLXRvcDogMDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBmb250LXNpemU6IDEuNnJlbTtcXG59XFxuXFxuYnV0dG9uIHtcXG4gICBib3JkZXI6IG5vbmU7XFxuICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyBcXG4gICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjY0NjUzO1xcbiAgIGNvbG9yOiB3aGl0ZTtcXG4gICBwYWRkaW5nOiA1cHggMTBweDtcXG4gICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxuICAgbWFyZ2luLXRvcDogMTVweDtcXG59XFxuXFxuYnV0dG9uOmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBjb2xvcjogIzI2NDY1MztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxufVxcblxcbi8qTU9EQUwqL1xcblxcbi5tb2RhbCB7XFxuICAgIHRvcDogMCU7XFxuICAgIGxlZnQ6IDAlO1xcbiAgICB3aWR0aDogMTAwdnc7XFxuICAgIGhlaWdodDogMTAwdmg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xcbiAgfVxcblxcbi5jaGlsZCB7XFxuICAgIHRvcDogNTAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHdpZHRoOiAzNTBweDtcXG4gICAgaGVpZ2h0OiAzNTBweDtcXG4gICAgcGFkZGluZzogMzBweCAzMHB4O1xcbiAgICBiYWNrZ3JvdW5kOiAjMmE5ZDhmO1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLm1vZGFsLWRpdiB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG8gYXV0byBhdXRvO1xcbiAgICBqdXN0aWZ5LWl0ZW1zOiBzdGFydDtcXG4gICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xcbiAgICBjb2x1bW4tZ2FwOiAyMHB4O1xcbiAgICByb3ctZ2FwOiAxMHB4O1xcbn1cXG5cXG4uY2hpbGQgaDMge1xcbiAgICBtYXJnaW4tdG9wOiAwO1xcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxufVxcblxcbi5jaGlsZCBwLFxcbi5jaGlsZCBoNCB7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxuLmNoaWxkIGg0IHtcXG4gICAganVzdGlmeS1zZWxmOiBlbmQ7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG5cXG4uc3Rhci1maWxsZWQge1xcbiAgICBjb2xvcjogeWVsbG93O1xcbn1cXG5cXG4uYnV0dG9uLWRpdiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGdhcDogMjBweDtcXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsNENBQThDO0FBQ2xEOztBQUVBO0lBQ0ksU0FBUztJQUNULFVBQVU7SUFDVixZQUFZO0lBQ1oscUJBQXFCO0lBQ3JCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLDhCQUE4QjtJQUM5QiwyQkFBMkI7SUFDM0I7OytCQUUyQjtBQUMvQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixRQUFRO0lBQ1IsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGVBQWU7SUFDZixjQUFjO0FBQ2xCOztBQUVBLHdCQUF3Qjs7QUFFeEI7SUFDSSw0QkFBNEI7SUFDNUIsYUFBYTtJQUNiLGFBQWE7SUFDYixlQUFlO0lBQ2YsU0FBUztBQUNiOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYixhQUFhO0lBQ2Isc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksU0FBUztJQUNULGtCQUFrQjtJQUNsQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFFBQVE7SUFDUixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksU0FBUztBQUNiOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSw2QkFBNkI7QUFDakM7O0FBRUEsUUFBUTs7QUFFUjtJQUNJLHlCQUF5QjtJQUN6Qiw0QkFBNEI7SUFDNUIsVUFBVTtJQUNWLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFNBQVM7SUFDVCxlQUFlO0FBQ25COztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBOzs7O0lBSUksaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixpQkFBaUI7QUFDckI7O0FBRUE7R0FDRyxZQUFZO0dBQ1oscUJBQXFCO0dBQ3JCLHlCQUF5QjtHQUN6QixZQUFZO0dBQ1osaUJBQWlCO0dBQ2pCLGtCQUFrQjtHQUNsQixnQkFBZ0I7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztJQUNkLHVCQUF1QjtBQUMzQjs7QUFFQSxRQUFROztBQUVSO0lBQ0ksT0FBTztJQUNQLFFBQVE7SUFDUixZQUFZO0lBQ1osYUFBYTtJQUNiLGtCQUFrQjtJQUNsQiw4QkFBOEI7RUFDaEM7O0FBRUY7SUFDSSxRQUFRO0lBQ1IsU0FBUztJQUNULFlBQVk7SUFDWixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsZ0NBQWdDO0lBQ2hDLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5Qix1Q0FBdUM7SUFDdkMsb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixrQkFBa0I7QUFDdEI7O0FBRUE7O0lBRUksU0FBUztBQUNiOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IscUJBQXFCO0lBQ3JCLHVCQUF1QjtJQUN2QixTQUFTO0lBQ1QsaUJBQWlCO0FBQ3JCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ015Rm9udCc7XFxuICAgIHNyYzogdXJsKCcuL0xleGVuZERlY2EtVmFyaWFibGVGb250X3dnaHQudHRmJyk7XFxufVxcblxcbmJvZHkge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgZm9udC1mYW1pbHk6ICdNeUZvbnQnO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA2ZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDZmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXFxuICAgICAgICBcXFwiaGVhZGVyIGhlYWRlclxcXCJcXG4gICAgICAgIFxcXCJuYXYgcHJvamVjdC1jb250YWluZXJcXFwiO1xcbn1cXG5cXG4uaGVhZGVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U3NmY1MTtcXG4gICAgZ3JpZC1hcmVhOiBoZWFkZXI7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLm5hdiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNjQ2NTM7XFxuICAgIGdyaWQtYXJlYTogbmF2O1xcbiAgICBtaW4td2lkdGg6IDE0N3B4O1xcbn0gXFxuXFxuLm5hdiA+IHVsIHtcXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiA1cHg7XFxuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XFxufVxcblxcbi5uYXYgbGkge1xcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbn1cXG5cXG4ubmF2IHVsIGxpOmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBjb2xvcjogI2ZmZDU2YjtcXG59XFxuXFxuLypNQUlOIFBST0pFQ1RTIERJU1BMQVkqL1xcblxcbi5wcm9qZWN0LWNvbnRhaW5lciB7XFxuICAgIGdyaWQtYXJlYTogcHJvamVjdC1jb250YWluZXI7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXG4gICAgZ2FwOiAyMHB4O1xcbn1cXG5cXG4uY2FyZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyYTlkOGY7XFxuICAgIHdpZHRoOiAyNTBweDtcXG4gICAgaGVpZ2h0OiAyNTBweDtcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLmNhcmQgaDMge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgbWluLWhlaWdodDogNDZweDtcXG59XFxuXFxuLmNhcmQgdWwge1xcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XFxufVxcblxcbi5jYXJkIGxpIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uY2FyZCBsaSA+IGRpdiA+IHAgKyBwOmhvdmVyIHtcXG4gICAgY29sb3I6ICNmZmQ1NmI7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmNhcmQgPiBkaXYgPiB1bCA+IGxpID4gZGl2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgZ2FwOiA1cHg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5jYXJkIGxpID4gZGl2ID4gcDpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmNhcmQgcCB7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxuLmNhcmQgYnV0dG9uIHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG4gICAgbWFyZ2luLXRvcDogYXV0bztcXG59XFxuXFxuLmNoZWNrYm94IHtcXG4gICAgZm9udC1zaXplOiAycmVtO1xcbn1cXG5cXG4uc3RyaWtldGhyb3VnaCB7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xcbn1cXG5cXG4vKkZPUk1TKi9cXG5cXG5mb3JtIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJhOWQ4ZjtcXG4gICAgcGFkZGluZzogMjBweCA0MHB4IDIwcHggNDBweDtcXG4gICAgd2lkdGg6IDUwJTtcXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XFxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcXG59XFxuXFxuZm9ybSBkaXYge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG5mb3JtIHVsIHtcXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XFxufVxcblxcbmZvcm0gbGkge1xcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbn1cXG5cXG5sYWJlbFtmb3I9XFxcIm5ld1RpdGxlXFxcIl0sXFxubGFiZWxbZm9yPVxcXCJkZXNjXFxcIl0sXFxubGFiZWxbZm9yPVxcXCJkYXRlXFxcIl0sXFxubGFiZWxbZm9yPVxcXCJzZWxlY3Qtb3B0aW9uXFxcIl0ge1xcbiAgICBtYXJnaW4tcmlnaHQ6IDhweDtcXG59XFxuXFxuI2xvdy1wcmlvcml0eSB7XFxuICAgIG1hcmdpbi1sZWZ0OiA4cHg7XFxufVxcblxcbmxhYmVsW2Zvcj1cXFwicHJvamVjdFxcXCJdIHtcXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xcbn1cXG5cXG5mb3JtIGgzIHtcXG4gICAgbWFyZ2luLXRvcDogMDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBmb250LXNpemU6IDEuNnJlbTtcXG59XFxuXFxuYnV0dG9uIHtcXG4gICBib3JkZXI6IG5vbmU7XFxuICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyBcXG4gICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjY0NjUzO1xcbiAgIGNvbG9yOiB3aGl0ZTtcXG4gICBwYWRkaW5nOiA1cHggMTBweDtcXG4gICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxuICAgbWFyZ2luLXRvcDogMTVweDtcXG59XFxuXFxuYnV0dG9uOmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBjb2xvcjogIzI2NDY1MztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxufVxcblxcbi8qTU9EQUwqL1xcblxcbi5tb2RhbCB7XFxuICAgIHRvcDogMCU7XFxuICAgIGxlZnQ6IDAlO1xcbiAgICB3aWR0aDogMTAwdnc7XFxuICAgIGhlaWdodDogMTAwdmg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xcbiAgfVxcblxcbi5jaGlsZCB7XFxuICAgIHRvcDogNTAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHdpZHRoOiAzNTBweDtcXG4gICAgaGVpZ2h0OiAzNTBweDtcXG4gICAgcGFkZGluZzogMzBweCAzMHB4O1xcbiAgICBiYWNrZ3JvdW5kOiAjMmE5ZDhmO1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLm1vZGFsLWRpdiB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG8gYXV0byBhdXRvO1xcbiAgICBqdXN0aWZ5LWl0ZW1zOiBzdGFydDtcXG4gICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xcbiAgICBjb2x1bW4tZ2FwOiAyMHB4O1xcbiAgICByb3ctZ2FwOiAxMHB4O1xcbn1cXG5cXG4uY2hpbGQgaDMge1xcbiAgICBtYXJnaW4tdG9wOiAwO1xcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxufVxcblxcbi5jaGlsZCBwLFxcbi5jaGlsZCBoNCB7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxuLmNoaWxkIGg0IHtcXG4gICAganVzdGlmeS1zZWxmOiBlbmQ7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG5cXG4uc3Rhci1maWxsZWQge1xcbiAgICBjb2xvcjogeWVsbG93O1xcbn1cXG5cXG4uYnV0dG9uLWRpdiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGdhcDogMjBweDtcXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7XG5cbiAgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH1cblxuICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImV4cG9ydCBjb25zdCBjbGVhckNvbnRlbnQgPSAoKSA9PiB7XG4gICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdC1jb250YWluZXJcIik7XG4gICAgd2hpbGUgKGNvbnRlbnQubGFzdEVsZW1lbnRDaGlsZCkge1xuICAgICAgICBjb250ZW50LnJlbW92ZUNoaWxkKGNvbnRlbnQubGFzdEVsZW1lbnRDaGlsZCk7XG4gICAgfVxufSIsImltcG9ydCB7IGRlbGV0ZVRvRG8gfSBmcm9tIFwiLi90by1kb3NcIlxuXG5leHBvcnQgY29uc3QgYnVpbGRNb2RhbCA9IChvYmosIHByb2opID0+IHtcbiAgLy9DcmVhdGUgdGhlIGJhY2tncm91bmQgbW9kYWwgZGl2XG4gIGNvbnN0IG1vZGFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgbW9kYWwuY2xhc3NMaXN0LmFkZCgnbW9kYWwnKVxuXG4gIC8vQ3JlYXRlIHRoZSBpbm5lciBtb2RhbCBkaXZcbiAgY29uc3QgY2hpbGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICBjaGlsZC5jbGFzc0xpc3QuYWRkKCdjaGlsZCcpXG5cbiAgLy9DcmVhdGUgdGl0bGUsIGRlc2NyaXB0aW9uLCAmIGR1ZSBkYXRlIGNvbnRlbnRcbiAgY29uc3QgbW9kYWxUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoM1wiKTtcbiAgY29uc3QgbW9kYWxEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBtb2RhbERpdi5jbGFzc0xpc3QuYWRkKFwibW9kYWwtZGl2XCIpO1xuICBtb2RhbFRpdGxlLmlubmVySFRNTCA9IFwiJiM5NjM0OyBcIiArIG9iai50aXRsZTtcbiAgY29uc3QgbW9kYWxEZXNjVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDRcIik7XG4gIG1vZGFsRGVzY1RpdGxlLmlubmVySFRNTCA9IFwiRGVzY3JpcHRpb246XCI7XG4gIGNvbnN0IG1vZGFsRGVzYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICBtb2RhbERlc2MudGV4dENvbnRlbnQgPSBvYmouZGVzY3JpcHRpb247XG4gIGNvbnN0IG1vZGFsRGF0ZVRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImg0XCIpO1xuICBtb2RhbERhdGVUaXRsZS5pbm5lckhUTUwgPSBcIkR1ZSBEYXRlOlwiXG4gIGNvbnN0IG1vZGFsRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICBtb2RhbERhdGUudGV4dENvbnRlbnQgPSBvYmouZHVlRGF0ZTtcblxuICAvL1NldCBjb3JyZWN0IHByaW9yaXR5IHN0YXR1cyBjb250ZW50XG4gIGNvbnN0IG1vZGFsUHJpb3JpdHlUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoNFwiKTtcbiAgbW9kYWxQcmlvcml0eVRpdGxlLmlubmVySFRNTCA9IFwiUHJpb3JpdHk6XCJcbiAgY29uc3QgbW9kYWxQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICBcbiAgbGV0IHByaW9yaXR5TGV2ZWwgPSBcIlwiO1xuICBsZXQgcHJpb3JpdHlTdGFyID0gXCJcIjtcbiAgaWYgKG9iai5wcmlvcml0eSA9PT0gMSB8fCBvYmoucHJpb3JpdHkgPT09IFwiaGlnaFwiKSB7XG4gICAgcHJpb3JpdHlTdGFyID0gXCImIzExMDg4O1wiO1xuICAgIHByaW9yaXR5TGV2ZWwgPSBcIkhpZ2ggcHJpb3JpdHlcIjsgXG4gIH0gZWxzZSB7XG4gICAgcHJpb3JpdHlTdGFyID0gXCImIzk3MzQ7XCI7XG4gICAgcHJpb3JpdHlMZXZlbCA9IFwiTG93IHByaW9yaXR5XCI7fVxuXG4gIG1vZGFsUHJpb3JpdHkuaW5uZXJIVE1MID0gcHJpb3JpdHlMZXZlbCArIFwiIFwiICsgcHJpb3JpdHlTdGFyO1xuICBjb25zdCBtb2RhbFByb2plY3RUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoNFwiKTtcbiAgbW9kYWxQcm9qZWN0VGl0bGUuaW5uZXJIVE1MID0gXCJQcm9qZWN0OlwiXG4gIFxuICAvL1NldCBjb3JyZWN0IHByb2plY3QgY29udGVudFxuICBjb25zdCBtb2RhbFByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgbW9kYWxQcm9qZWN0LmlubmVySFRNTCA9IHByb2oudGl0bGU7XG5cbiAgLy9BZGQgZWRpdCAmIGRlbGV0ZSBidXR0b25zXG4gIGNvbnN0IG1vZGFsRWRpdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gIG1vZGFsRWRpdC50ZXh0Q29udGVudCA9IFwiRWRpdCBUYXNrXCI7XG4gIGNvbnN0IG1vZGFsRGVsZXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgbW9kYWxEZWxldGUudGV4dENvbnRlbnQgPSBcIkRlbGV0ZSBUYXNrXCI7XG4gIGNvbnN0IGJ1dHRvbkRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGJ1dHRvbkRpdi5jbGFzc0xpc3QuYWRkKFwiYnV0dG9uLWRpdlwiKTtcblxuICAvL0FwcGVuZCBjb250ZW50IHRvIG1vZGFsXG4gIGNoaWxkLmFwcGVuZENoaWxkKG1vZGFsVGl0bGUpO1xuICBjaGlsZC5hcHBlbmRDaGlsZChtb2RhbERpdik7XG4gIG1vZGFsRGl2LmFwcGVuZENoaWxkKG1vZGFsRGVzY1RpdGxlKTtcbiAgbW9kYWxEaXYuYXBwZW5kQ2hpbGQobW9kYWxEZXNjKTtcbiAgbW9kYWxEaXYuYXBwZW5kQ2hpbGQobW9kYWxEYXRlVGl0bGUpO1xuICBtb2RhbERpdi5hcHBlbmRDaGlsZChtb2RhbERhdGUpO1xuICBtb2RhbERpdi5hcHBlbmRDaGlsZChtb2RhbFByaW9yaXR5VGl0bGUpO1xuICBtb2RhbERpdi5hcHBlbmRDaGlsZChtb2RhbFByaW9yaXR5KTtcbiAgbW9kYWxEaXYuYXBwZW5kQ2hpbGQobW9kYWxQcm9qZWN0VGl0bGUpO1xuICBtb2RhbERpdi5hcHBlbmRDaGlsZChtb2RhbFByb2plY3QpO1xuICBjaGlsZC5hcHBlbmRDaGlsZChidXR0b25EaXYpO1xuICBidXR0b25EaXYuYXBwZW5kQ2hpbGQobW9kYWxFZGl0KTtcbiAgYnV0dG9uRGl2LmFwcGVuZENoaWxkKG1vZGFsRGVsZXRlKTtcbiAgbW9kYWwuYXBwZW5kQ2hpbGQoY2hpbGQpO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG1vZGFsKTtcbiAgXG4gIC8vRGVsZXRlIHRvIGRvIHRhc2sgaWYgZGVsZXRlIGJ1dHRvbiBjbGlja2VkXG4gIG1vZGFsRGVsZXRlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgZGVsZXRlVG9Ebyhwcm9qLCBvYmopO1xuICB9KTtcblxuICAvLyBSZW1vdmUgbW9kYWwgaWYgYmFja2dyb3VuZCBjbGlja2VkXG4gIG1vZGFsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZXZlbnQgPT4ge1xuICAgIGlmIChldmVudC50YXJnZXQuY2xhc3NOYW1lID09PSAnbW9kYWwnKSB7XG4gICAgICByZW1vdmVNb2RhbCgpXG4gICAgfVxuICB9KVxufVxuXG4vL0ZpbmQgdGhlIG1vZGFsIGFuZCByZW1vdmUgaWYgaXQgZXhpc3RzXG5leHBvcnQgY29uc3QgcmVtb3ZlTW9kYWwgPSAoKSA9PiB7XG4gICAgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWwnKVxuICAgIGlmIChtb2RhbCkge1xuICAgICAgbW9kYWwucmVtb3ZlKClcbiAgICB9XG4gIH0iLCJpbXBvcnQgeyBjbGVhckNvbnRlbnQgfSBmcm9tIFwiLi9jbGVhclwiO1xuaW1wb3J0IHsgbG9hZFBhZ2UgfSBmcm9tIFwiLi9wZ2xvYWRcIjtcblxuZXhwb3J0IGNvbnN0IG1ha2VQcm9qZWN0ID0gKHRpdGxlKSA9PiB7XG4gICAgbGV0IGxpc3QgPSBbXTtcbiAgICByZXR1cm4geyB0aXRsZSwgbGlzdCB9O1xufVxuXG5leHBvcnQgY29uc3Qgc2hvd1Byb2plY3RGb3JtID0gKCkgPT4ge1xuICAgIGNsZWFyQ29udGVudCgpO1xuICAgIGJ1aWxkUHJvamVjdEZvcm0oKTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVByb2plY3QgPSAocHJvamVjdCkgPT4ge1xuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKHByb2plY3QudGl0bGUpO1xuICAgIGxvYWRQYWdlKCk7XG59XG5cbmNvbnN0IGJ1aWxkUHJvamVjdEZvcm0gPSAoKSA9PiB7XG4gICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0LWNvbnRhaW5lclwiKTtcbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvcm1cIik7XG4gICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XG4gICAgdGl0bGUudGV4dENvbnRlbnQgPSBcIkFkZCBhIFByb2plY3RcIjtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoZm9ybSk7XG4gICAgZm9ybS5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgZm9ybS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcIm5ld1Byb2plY3RGb3JtXCIpO1xuICAgIGZvcm0uc2V0QXR0cmlidXRlKFwiYWN0aW9uXCIsIFwiXCIpO1xuICAgIGZvcm0uc2V0QXR0cmlidXRlKFwibWV0aG9kXCIsIFwicG9zdFwiKTtcbiAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoZGl2KTtcblxuICAgIC8vQnVpbGQgcHJvamVjdCBpbnB1dFxuICAgIGNvbnN0IG5ld0xhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICAgIG5ld0xhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBcInByb2plY3RcIik7XG4gICAgbmV3TGFiZWwudGV4dENvbnRlbnQgPSBcIk5ldyBQcm9qZWN0XCI7XG4gICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgaW5wdXQuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInRleHRcIik7XG4gICAgaW5wdXQuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJwcm9qZWN0LXRpdGxlXCIpO1xuICAgIGlucHV0LnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgXCJwcm9qZWN0XCIpO1xuICAgIGRpdi5hcHBlbmRDaGlsZChuZXdMYWJlbCk7XG4gICAgZGl2LmFwcGVuZENoaWxkKGlucHV0KTtcblxuICAgIC8vQnVpbGQgc3VibWl0IGJ1dHRvblxuICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgYnV0dG9uLnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJzdWJtaXRcIik7XG4gICAgYnV0dG9uLnRleHRDb250ZW50ID0gXCJTdWJtaXRcIjtcbiAgICBidXR0b24uc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzdWJtaXQtcHJvamVjdFwiKTtcbiAgICBkaXYuYXBwZW5kQ2hpbGQoYnV0dG9uKTtcbiAgICBmb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKCkgPT4ge1xuICAgICAgICBzYXZlVG9Mb2NhbFN0b3JhZ2UoaW5wdXQpO1xuICAgIH1cbiAgICApO1xufVxuXG5jb25zdCBzYXZlVG9Mb2NhbFN0b3JhZ2UgPSAoaW5wdXQpID0+IHtcbiAgICBsZXQgZW1wdHlPYmogPSB7XG4gICAgICAgIGxpc3Q6IFtcIlwiXSxcbiAgICAgICAgdGl0bGU6IGlucHV0LnZhbHVlXG4gICAgfVxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGlucHV0LnZhbHVlLCBKU09OLnN0cmluZ2lmeShlbXB0eU9iaikpO1xufSIsImltcG9ydCB7IGRlbGV0ZVByb2plY3QgfSBmcm9tICcuL3Byb2plY3QuanMnO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgeyBjbGVhckNvbnRlbnQgfSBmcm9tICcuL2NsZWFyLmpzJztcbmltcG9ydCB7IGJ1aWxkTW9kYWwgfSBmcm9tICcuL21vZGFsLmpzJztcblxuXG5leHBvcnQgY29uc3QgbG9hZFBhZ2UgPSAoKSA9PiB7XG4gICAgY2xlYXJDb250ZW50KCk7XG4gICAgY29uc29sZS5sb2cobG9jYWxTdG9yYWdlKTtcbiAgICAvL2xvY2FsU3RvcmFnZS5jbGVhcigpO1xuXG4gICAgaWYgKGxvY2FsU3RvcmFnZS5sZW5ndGggPT09IDApIHtcblxuICAgICAgICBsZXQgYmFja3BhY2tUcmlwID0ge1xuICAgICAgICAgICAgbGlzdDogW1xuICAgICAgICAgICAgICAgIHt0aXRsZTogJ1BsYW4gcm91dGUnLCBkZXNjcmlwdGlvbjogJ1VzZSBndWlkZWJvb2sgdG8gcGxhbiBoaWtpbmcgcm91dGUnLCBkdWVEYXRlOiAnNC8xLzIzJywgcHJpb3JpdHk6IDEsIHN0YXR1czogMH0sXG4gICAgICAgICAgICAgICAge3RpdGxlOiAnUGxhbiBtZWFscycsIGRlc2NyaXB0aW9uOiAnUGxhbiBtZWFscyB0byBtZWV0IGNhbG9yaWUgbmVlZHMnLCBkdWVEYXRlOiAnNC83LzIzJywgcHJpb3JpdHk6IDAsIHN0YXR1czogMH0sXG4gICAgICAgICAgICAgICAge3RpdGxlOiAnUGFjayBnZWFyJywgZGVzY3JpcHRpb246ICdQYWNrIGdlYXIgbmVlZGVkIGZvciAxMCBkYXkgdHJpcCcsIGR1ZURhdGU6ICc0LzE0LzIzJywgcHJpb3JpdHk6IDEsIHN0YXR1czogMH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB0aXRsZTogXCJQcmVwIGZvciBCYWNrcGFja2luZyBUcmlwXCJcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBsb3ZlRG9nID0ge1xuICAgICAgICAgICAgbGlzdDogW1xuICAgICAgICAgICAgICAgIHt0aXRsZTogJ0N1ZGRsZScsIGRlc2NyaXB0aW9uOiAnQ3VkZGxlIHdpdGggbXkgZG9nJywgZHVlRGF0ZTogJzEyLzIwLzIyJywgcHJpb3JpdHk6IDEsIHN0YXR1czogMH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB0aXRsZTogXCJMb3ZlIG15IGRvZ1wiXG4gICAgICAgIH1cblxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImJhY2twYWNrVHJpcFwiLCBKU09OLnN0cmluZ2lmeShiYWNrcGFja1RyaXApKTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJsb3ZlRG9nXCIsIEpTT04uc3RyaW5naWZ5KGxvdmVEb2cpKTtcbiAgICB9XG5cbiAgICAvL0JVSUxEIFRIRSBDQVJEUy8vXG4gICAgZnVuY3Rpb24gbWFrZUNhcmQob2JqKSB7XG4gICAgICAgIGNvbnN0IGNhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBjYXJkLmNsYXNzTGlzdC5hZGQoXCJjYXJkXCIpO1xuICAgICAgICBjb25zdCBwcm9qZWN0VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XG4gICAgICAgIHByb2plY3RUaXRsZS50ZXh0Q29udGVudCA9IG9iai50aXRsZTtcbiAgICAgICAgY2FyZC5hcHBlbmRDaGlsZChwcm9qZWN0VGl0bGUpO1xuXG4gICAgICAgIGNvbnN0IGxpc3RDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBjYXJkLmFwcGVuZENoaWxkKGxpc3RDb250YWluZXIpO1xuICAgICAgICBjb25zdCB0b0RvTGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiKTtcbiAgICAgICAgbGlzdENvbnRhaW5lci5hcHBlbmRDaGlsZCh0b0RvTGlzdCk7ICAgICAgICBcblxuICAgICAgICBmb3IobGV0IGk9MDsgaTxvYmoubGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgdG9Eb0xpbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gICAgICAgICAgICB0b0RvTGlzdC5hcHBlbmRDaGlsZCh0b0RvTGluZSk7XG4gICAgICAgICAgICBjb25zdCBsZWZ0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgIHRvRG9MaW5lLmFwcGVuZENoaWxkKGxlZnREaXYpO1xuICAgICAgICAgICAgY29uc3QgY2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICAgICAgICAgIGNoZWNrYm94LmNsYXNzTGlzdC5hZGQoXCJjaGVja2JveFwiKTtcbiAgICAgICAgICAgIGNvbnN0IHRvRG9UaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgICAgICAgY29uc3QgdG9Eb0RhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcblxuICAgICAgICAgICAgaWYgKG9iai5saXN0W2ldLnN0YXR1cyA9PT0gMSkge1xuICAgICAgICAgICAgICAgIG1hcmtDb21wbGV0ZShjaGVja2JveCwgdG9Eb1RpdGxlLCB0b0RvRGF0ZSwgb2JqLCBvYmoubGlzdFtpXSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKG9iai5saXN0W2ldLnN0YXR1cyA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGNoZWNrYm94LmlubmVySFRNTCA9IFwiJiM5NzQ0O1wiO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgcHJpb3JpdHlTdGFyID0gXCJcIjtcbiAgICAgICAgICAgIGlmIChvYmoubGlzdFtpXS5wcmlvcml0eSA9PT0gMSB8fCBvYmoubGlzdFtpXS5wcmlvcml0eSA9PT0gXCJoaWdoXCIpIHtcbiAgICAgICAgICAgICAgICBwcmlvcml0eVN0YXIgPSBcIiYjMTEwODg7XCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChvYmoubGlzdFtpXS50aXRsZSAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0b0RvVGl0bGUuaW5uZXJIVE1MID0gb2JqLmxpc3RbaV0udGl0bGUgKyBcIiBcIiArIHByaW9yaXR5U3RhcjtcbiAgICAgICAgICAgICAgICB0b0RvRGF0ZS5pbm5lckhUTUwgPSBvYmoubGlzdFtpXS5kdWVEYXRlO1xuICAgICAgICAgICAgICAgIGxlZnREaXYuYXBwZW5kQ2hpbGQoY2hlY2tib3gpO1xuICAgICAgICAgICAgICAgIGxlZnREaXYuYXBwZW5kQ2hpbGQodG9Eb1RpdGxlKTtcbiAgICAgICAgICAgICAgICB0b0RvTGluZS5hcHBlbmRDaGlsZCh0b0RvRGF0ZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vTWFyayB0YXNrIGNvbXBsZXRlIHdoZW4gY2hlY2tib3ggaXMgY2hlY2tlZFxuICAgICAgICAgICAgY2hlY2tib3guYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAob2JqLmxpc3RbaV0uc3RhdHVzID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmtDb21wbGV0ZShjaGVja2JveCwgdG9Eb1RpdGxlLCB0b0RvRGF0ZSwgb2JqLCBvYmoubGlzdFtpXSk7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVN0YXR1cyhvYmosIG9iai5saXN0W2ldKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKG9iai5saXN0W2ldLnN0YXR1cyA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBtYXJrSW5jb21wbGV0ZShjaGVja2JveCwgdG9Eb1RpdGxlLCB0b0RvRGF0ZSwgb2JqLCBvYmoubGlzdFtpXSk7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVN0YXR1cyhvYmosIG9iai5saXN0W2ldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAvL0J1aWxkIG1vZGFsIHdoZW4gdXNlciBjbGlja3Mgb24gdGFzayB0aXRsZVxuICAgICAgICAgICAgdG9Eb1RpdGxlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgYnVpbGRNb2RhbChvYmoubGlzdFtpXSwgb2JqKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICAvL0FwcGVuZCBkZWxldGUgcHJvamVjdCBidXR0b25cbiAgICAgICAgY29uc3QgZGVsZXRlUHJvakJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGRlbGV0ZVByb2pCdXR0b24uaW5uZXJIVE1MID0gXCJEZWxldGUgUHJvamVjdFwiO1xuICAgICAgICBjYXJkLmFwcGVuZENoaWxkKGRlbGV0ZVByb2pCdXR0b24pO1xuICAgICAgICBkZWxldGVQcm9qQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICBkZWxldGVQcm9qZWN0KG9iaik7XG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiBjYXJkO1xuICAgIH1cblxuICAgIC8vQWRkIGNhcmQgdG8gcHJvamVjdCBjb250YWluZXJcbiAgICBmdW5jdGlvbiBhZGRDYXJkKGNhcmQpIHtcbiAgICAgICAgY29uc3QgZGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0LWNvbnRhaW5lclwiKTtcbiAgICAgICAgZGl2LmFwcGVuZENoaWxkKGNhcmQpO1xuICAgIH1cblxuICAgIC8vTWFyayB0YXNrIGFzIGNvbXBsZXRlXG4gICAgZnVuY3Rpb24gbWFya0NvbXBsZXRlKGNoZWNrYm94LCB0b0RvVGl0bGUsIHRvRG9EYXRlLCBwcm9qZWN0LCB0b0RvKSB7XG4gICAgICAgIGNoZWNrYm94LmlubmVySFRNTCA9IFwiJiM5NzQ1O1wiO1xuICAgICAgICB0b0RvVGl0bGUuY2xhc3NMaXN0LmFkZChcInN0cmlrZXRocm91Z2hcIik7XG4gICAgICAgIHRvRG9EYXRlLmNsYXNzTGlzdC5hZGQoXCJzdHJpa2V0aHJvdWdoXCIpO1xuICAgIH1cblxuICAgIC8vTWFyayB0YXNrIGFzIGluY29tcGxldGVcbiAgICBmdW5jdGlvbiBtYXJrSW5jb21wbGV0ZShjaGVja2JveCwgdG9Eb1RpdGxlLCB0b0RvRGF0ZSwgcHJvamVjdCwgdG9Ebykge1xuICAgICAgICBjaGVja2JveC5pbm5lckhUTUwgPSBcIiYjOTc0NDtcIjtcbiAgICAgICAgdG9Eb1RpdGxlLmNsYXNzTGlzdC5yZW1vdmUoXCJzdHJpa2V0aHJvdWdoXCIpO1xuICAgICAgICB0b0RvRGF0ZS5jbGFzc0xpc3QucmVtb3ZlKFwic3RyaWtldGhyb3VnaFwiKTtcbiAgICB9XG5cbiAgICAvL1VwZGF0ZSB0YXNrIHN0YXR1cyBpbiBsb2NhbCBzdG9yYWdlXG4gICAgZnVuY3Rpb24gdXBkYXRlU3RhdHVzKHByb2plY3QsIHRvRG8pIHtcbiAgICAgICAgZm9yIChsZXQgaT0wOyBpPGxvY2FsU3RvcmFnZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgLy9GaW5kIHByb2plY3QgaW4gbG9jYWwgc3RvcmFnZVxuICAgICAgICAgICAgaWYgKHByb2plY3QudGl0bGUgPT09IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0obG9jYWxTdG9yYWdlLmtleShpKSkpLnRpdGxlKSB7XG4gICAgICAgICAgICAgICAvL1NldCBwcm9qZWN0IGFzIGFuIG9iamVjdFxuICAgICAgICAgICAgICAgIGxldCBwYXJzZWQgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGxvY2FsU3RvcmFnZS5rZXkoaSkpKTtcbiAgICAgICAgICAgICAgICAvL0ZpbmQgdG8gZG8gdGFzayB3aXRoaW4gcHJvamVjdFxuICAgICAgICAgICAgICAgIGZvciAobGV0IGo9MDsgajxwYXJzZWQubGlzdC5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAocGFyc2VkLmxpc3Rbal0udGl0bGUgPT0gdG9Eby50aXRsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9VcGRhdGUgc3RhdHVzIG9mIHRvIGRvIHRhc2sgaW4gcGFyc2VkIHZhcmlhYmxlXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocGFyc2VkLmxpc3Rbal0uc3RhdHVzID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VkLmxpc3Rbal0uc3RhdHVzID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocGFyc2VkLmxpc3Rbal0uc3RhdHVzID09PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VkLmxpc3Rbal0uc3RhdHVzID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vVXBkYXRlIGxvY2FsIHN0b3JhZ2UgdG8gbWF0Y2ggdXBkYXRlZCBwYXJzZWQgdmFyaWFibGVcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGxvY2FsU3RvcmFnZS5rZXkoaSksIEpTT04uc3RyaW5naWZ5KHBhcnNlZCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBcbiAgICAgICAgfVxuICAgICAgIGxvYWRQYWdlKCk7XG4gICAgfVxuXG4gICAgKGZ1bmN0aW9uIGNyZWF0ZUNhcmREaXNwbGF5KCkge1xuICAgICAgICBmb3IgKGxldCBpPTA7IGkgPCBsb2NhbFN0b3JhZ2UubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IG5ld0NhcmQgPSBtYWtlQ2FyZChKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGxvY2FsU3RvcmFnZS5rZXkoaSkpKSk7XG4gICAgICAgICAgICBhZGRDYXJkKG5ld0NhcmQpO1xuICAgICAgICB9XG4gICAgfSkoKTtcbn0iLCJpbXBvcnQgeyByZW1vdmVNb2RhbCB9IGZyb20gJy4vbW9kYWwuanMnO1xuaW1wb3J0IHsgbG9hZFBhZ2UgfSBmcm9tICcuL3BnbG9hZC5qcyc7XG5cblxuXG5leHBvcnQgY29uc3Qgc2F2ZVRvRG8gPSAoZSkgPT4ge1xuICAgIFxuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbmV3VGl0bGVcIikudmFsdWU7XG4gICAgY29uc3QgZGVzYyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGVzY1wiKS52YWx1ZTtcbiAgICBjb25zdCBkYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkYXRlXCIpLnZhbHVlO1xuICAgIGxldCBwcmlvcml0eSA9IFwiXCI7XG4gICAgbGV0IHByaW9yaXR5UmVzdWx0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoXCJwcmlvcml0eVwiKTtcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgcHJpb3JpdHlSZXN1bHQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYocHJpb3JpdHlSZXN1bHRbaV0uY2hlY2tlZCkge1xuICAgICAgICAgICAgcHJpb3JpdHkgPSBwcmlvcml0eVJlc3VsdFtpXS52YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBsZXQgcHJvamVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2VsZWN0LW9wdGlvblwiKS52YWx1ZTtcbiAgICBmb3IgKGxldCBpPTA7IGk8bG9jYWxTdG9yYWdlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChwcm9qZWN0ID09IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0obG9jYWxTdG9yYWdlLmtleShpKSkpLnRpdGxlKSB7XG4gICAgICAgICAgICBwcm9qZWN0ID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShsb2NhbFN0b3JhZ2Uua2V5KGkpKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbGV0IG5ld1RvRG8gPSBtYWtlVG9Ebyh0aXRsZSwgZGVzYywgZGF0ZSwgcHJpb3JpdHksIHByb2plY3QpO1xuICAgIGFkZFRvRG8ocHJvamVjdCwgbmV3VG9Ebyk7XG59XG5cbmV4cG9ydCBjb25zdCBtYWtlVG9EbyA9ICh0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5KSA9PiB7XG4gICAgbGV0IHN0YXR1cyA9IDA7XG4gICAgcmV0dXJuIHsgdGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSwgc3RhdHVzIH07XG59XG5cbmV4cG9ydCBjb25zdCBhZGRUb0RvID0gKHByb2plY3QsIHRvRG8pID0+IHtcbiAgICAgZm9yIChsZXQgaT0wOyBpPGxvY2FsU3RvcmFnZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgaWYgKHByb2plY3QudGl0bGUgPT09IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0obG9jYWxTdG9yYWdlLmtleShpKSkpLnRpdGxlKSB7XG4gICAgICAgICAgICBsZXQgcGFyc2VkID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShsb2NhbFN0b3JhZ2Uua2V5KGkpKSk7XG4gICAgICAgICAgICBwYXJzZWQubGlzdC5wdXNoKHRvRG8pO1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0obG9jYWxTdG9yYWdlLmtleShpKSwgSlNPTi5zdHJpbmdpZnkocGFyc2VkKSk7XG4gICAgICAgICB9IFxuICAgICB9XG4gICAgbG9hZFBhZ2UoKTtcbn1cblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVRvRG8gPSAocHJvamVjdCwgdG9EbykgPT4ge1xuICAgIGZvciAobGV0IGk9MDsgaTxsb2NhbFN0b3JhZ2UubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChwcm9qZWN0LnRpdGxlID09PSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGxvY2FsU3RvcmFnZS5rZXkoaSkpKS50aXRsZSkge1xuICAgICAgICAgICAgICAgbGV0IHBhcnNlZCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0obG9jYWxTdG9yYWdlLmtleShpKSkpO1xuICAgICAgICAgICAgICAgZm9yIChsZXQgaj0wOyBqPHBhcnNlZC5saXN0Lmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHBhcnNlZC5saXN0W2pdLnRpdGxlID09IHRvRG8udGl0bGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VkLmxpc3Quc3BsaWNlKGosMSk7XG4gICAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGxvY2FsU3RvcmFnZS5rZXkoaSksIEpTT04uc3RyaW5naWZ5KHBhcnNlZCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gXG4gICAgICAgIH1cbiAgIGxvYWRQYWdlKCk7XG4gICByZW1vdmVNb2RhbCgpO1xufVxuXG5leHBvcnQgY29uc3QgY2hhbmdlU3RhdHVzID0gKHByb2plY3QsIHRvRG8pID0+IHtcbiAgICBmb3IgKGxldCBpPTA7IGkgPCBwcm9qZWN0Lmxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYocHJvamVjdC5saXN0W2ldID09PSB0b0RvKSB7XG4gICAgICAgICAgICBpZihwcm9qZWN0Lmxpc3RbaV0uc3RhdHVzID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcHJvamVjdC5saXN0W2ldLnN0YXR1cyA9IDE7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHByb2plY3QubGlzdFtpXS5zdGF0dXMgPT09IDEpIHtcbiAgICAgICAgICAgICAgICBwcm9qZWN0Lmxpc3RbaV0uc3RhdHVzID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IGNoYW5nZVByaW9yaXR5ID0gKHByb2plY3QsIHRvRG8pID0+IHtcbiAgICBmb3IgKGxldCBpPTA7IGkgPCBwcm9qZWN0Lmxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYocHJvamVjdC5saXN0W2ldID09PSB0b0RvKSB7XG4gICAgICAgICAgICBpZihwcm9qZWN0Lmxpc3RbaV0ucHJpb3JpdHkgPT09IDApIHtcbiAgICAgICAgICAgICAgICBwcm9qZWN0Lmxpc3RbaV0ucHJpb3JpdHkgPSAxO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChwcm9qZWN0Lmxpc3RbaV0ucHJpb3JpdHkgPT09IDEpIHtcbiAgICAgICAgICAgICAgICBwcm9qZWN0Lmxpc3RbaV0ucHJpb3JpdHkgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSIsImltcG9ydCB7IGNsZWFyQ29udGVudCB9IGZyb20gXCIuL2NsZWFyXCI7XG5pbXBvcnQgeyBzYXZlVG9EbyB9IGZyb20gXCIuL3RvLWRvc1wiO1xuXG5leHBvcnQgY29uc3Qgc2hvd1RvRG9Gb3JtID0gKCkgPT4ge1xuICAgIGNsZWFyQ29udGVudCgpO1xuICAgIGJ1aWxkVG9Eb0Zvcm0oKTtcbn1cblxuY29uc3QgYnVpbGRUb0RvRm9ybSA9ICgpID0+IHtcbiAgICAvL0J1aWxkIGZvcm0gY29udGFpbmVyICYgdGl0bGVcbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2plY3QtY29udGFpbmVyXCIpO1xuICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKTtcbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoM1wiKTtcbiAgICB0aXRsZS50ZXh0Q29udGVudCA9IFwiQWRkICdUbyBEbycgSXRlbVwiO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChmb3JtKTtcbiAgICBmb3JtLmFwcGVuZENoaWxkKHRpdGxlKTtcbiAgICBmb3JtLnNldEF0dHJpYnV0ZShcImlkXCIsIFwibmV3VG9Eb0Zvcm1cIik7XG4gICAgZm9ybS5zZXRBdHRyaWJ1dGUoXCJhY3Rpb25cIiwgXCJcIik7XG4gICAgZm9ybS5zZXRBdHRyaWJ1dGUoXCJtZXRob2RcIiwgXCJwb3N0XCIpO1xuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChkaXYpO1xuICAgIGNvbnN0IGxpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidWxcIik7XG4gICAgZGl2LmFwcGVuZENoaWxkKGxpc3QpO1xuXG4gICAgLy9CdWlsZCBxdWVzdGlvbnNcbiAgICBidWlsZFRleHRJbnB1dChsaXN0LCBcImZpcnN0SXRlbVwiLCBcIm5ld1RpdGxlXCIsIFwiVG8gRG8gSXRlbSBUaXRsZVwiLCBcImlucHV0MVwiLCBcInRleHRcIik7XG4gICAgYnVpbGRUZXh0SW5wdXQobGlzdCwgXCJzZWNJdGVtXCIsIFwiZGVzY1wiLCBcIkRlc2NyaXB0aW9uXCIsIFwiaW5wdXQyXCIsIFwidGV4dFwiKTtcbiAgICBidWlsZFRleHRJbnB1dChsaXN0LCBcInRoaXJkSXRlbVwiLCBcImRhdGVcIiwgXCJEdWUgRGF0ZVwiLCBcImlucHV0M1wiLCBcImRhdGVcIik7XG4gICAgYnVpbGRSYWRpb0lucHV0KGxpc3QsIFwicHJpb3JpdHlcIiwgXCJoaWdoLXByaW9yaXR5XCIsIFwiSGlnaCBQcmlvcml0eVwiLCBcImlucHV0NFwiLCBcImhpZ2hcIiwgXCJsb3ctcHJpb3JpdHlcIiwgXCJMb3cgUHJpb3JpdHlcIiwgXCJpbnB1dDVcIiwgXCJsb3dcIik7XG5cbiAgICAvL0J1aWxkIHByb2plY3QgcXVlc3Rpb25cbiAgICBjb25zdCBsaU5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gICAgY29uc3Qgc2VsZWN0TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gICAgc2VsZWN0TGFiZWwudGV4dENvbnRlbnQgPSBcIlByb2plY3RcIjtcbiAgICBzZWxlY3RMYWJlbC5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgXCJzZWxlY3Qtb3B0aW9uXCIpO1xuICAgIGNvbnN0IHNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XG4gICAgc2VsZWN0LnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgXCJQcm9qZWN0XCIpO1xuICAgIHNlbGVjdC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInNlbGVjdC1vcHRpb25cIik7XG4gICAgbGlzdC5hcHBlbmRDaGlsZChsaU5hbWUpO1xuICAgIGxpTmFtZS5hcHBlbmRDaGlsZChzZWxlY3RMYWJlbCk7XG4gICAgbGlOYW1lLmFwcGVuZENoaWxkKHNlbGVjdCk7XG5cbiAgICBmb3IobGV0IGk9MDsgaSA8IGxvY2FsU3RvcmFnZS5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xuICAgICAgICBjb25zdCBvcHRpb25UaXRsZSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0obG9jYWxTdG9yYWdlLmtleShpKSkpLnRpdGxlO1xuICAgICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIixvcHRpb25UaXRsZSk7XG4gICAgICAgIG9wdGlvbi50ZXh0Q29udGVudCA9IG9wdGlvblRpdGxlO1xuICAgICAgICBzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcbiAgICB9XG5cbiAgICAvL0J1aWxkIHN1Ym1pdCBidXR0b25cbiAgICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGJ1dHRvbi5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwic3VibWl0XCIpO1xuICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU3VibWl0XCI7XG4gICAgYnV0dG9uLnNldEF0dHJpYnV0ZShcImlkXCIsIFwic3VibWl0LXRvZG9cIik7XG4gICAgZGl2LmFwcGVuZENoaWxkKGJ1dHRvbik7XG4gICAgZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHNhdmVUb0RvKTtcbn1cblxuY29uc3QgYnVpbGRUZXh0SW5wdXQgPSAoY29udGFpbmVyLCBsaU5hbWUsIGxhYmVsTmFtZSwgdGV4dENvbnRlbnQsIGlucHV0TmFtZSwgaW5wdXRUeXBlKSA9PiB7XG4gICAgbGlOYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgIGNvbnN0IG5ld0xhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICAgIG5ld0xhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBsYWJlbE5hbWUpO1xuICAgIG5ld0xhYmVsLnRleHRDb250ZW50ID0gdGV4dENvbnRlbnQ7XG4gICAgaW5wdXROYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgIGlucHV0TmFtZS5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIGlucHV0VHlwZSk7XG4gICAgaW5wdXROYW1lLnNldEF0dHJpYnV0ZShcImlkXCIsIGxhYmVsTmFtZSk7XG4gICAgaW5wdXROYW1lLnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgbGFiZWxOYW1lKTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQobGlOYW1lKTtcbiAgICBsaU5hbWUuYXBwZW5kQ2hpbGQobmV3TGFiZWwpO1xuICAgIGxpTmFtZS5hcHBlbmRDaGlsZChpbnB1dE5hbWUpO1xufVxuXG5jb25zdCBidWlsZFJhZGlvSW5wdXQgPSAoY29udGFpbmVyLCBjYXRlZ29yeSwgbGFiZWwxLCB0ZXh0MSwgaW5wdXQxLCB2YWx1ZTEsIGxhYmVsMiwgdGV4dDIsIGlucHV0MiwgdmFsdWUyKSA9PiB7XG4gICAgY29uc3QgbGlOYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChsaU5hbWUpO1xuXG4gICAgY29uc3QgYnVpbGRSYWRpb09wdGlvbiA9IChjYXRlZ29yeSwgbGFiZWwsIHRleHQsIGlucHV0LCB2YWx1ZSkgPT4ge1xuICAgICAgICBjb25zdCBuZXdMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcbiAgICAgICAgbmV3TGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIGxhYmVsKTtcbiAgICAgICAgbmV3TGFiZWwudGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgICAgICBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInJhZGlvXCIpO1xuICAgICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBsYWJlbCk7XG4gICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgY2F0ZWdvcnkpO1xuICAgICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCB2YWx1ZSk7XG4gICAgICAgIGxpTmFtZS5hcHBlbmRDaGlsZChpbnB1dCk7XG4gICAgICAgIGxpTmFtZS5hcHBlbmRDaGlsZChuZXdMYWJlbCk7XG4gICAgfVxuXG4gICAgYnVpbGRSYWRpb09wdGlvbihjYXRlZ29yeSwgbGFiZWwxLCB0ZXh0MSwgaW5wdXQxLCB2YWx1ZTEpO1xuICAgIGJ1aWxkUmFkaW9PcHRpb24oY2F0ZWdvcnksIGxhYmVsMiwgdGV4dDIsIGlucHV0MiwgdmFsdWUyKTtcbn0iLCJpbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCB7IHNob3dUb0RvRm9ybSB9IGZyb20gJy4vdG8tZG9mb3JtLmpzJztcbmltcG9ydCB7IGxvYWRQYWdlIH0gZnJvbSAnLi9wZ2xvYWQuanMnO1xuaW1wb3J0IHsgc2hvd1Byb2plY3RGb3JtIH0gZnJvbSAnLi9wcm9qZWN0LmpzJztcblxubG9hZFBhZ2UoKTtcblxuLy9FVkVOVCBMSVNURU5FUlMvL1xuY29uc3QgaG9tZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF2PnVsPmxpXCIpO1xuaG9tZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgbG9hZFBhZ2UpO1xuXG5jb25zdCBhZGRUb0RvQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uYXY+dWw+bGkrbGlcIik7XG5hZGRUb0RvQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBzaG93VG9Eb0Zvcm0pO1xuXG5jb25zdCBhZGRQcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uYXY+dWw+bGkrbGkrbGlcIik7XG5hZGRQcm9qZWN0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBzaG93UHJvamVjdEZvcm0pOyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwibmMiLCJjbGVhckNvbnRlbnQiLCJsYXN0RWxlbWVudENoaWxkIiwiYnVpbGRNb2RhbCIsInByb2oiLCJtb2RhbCIsImNsYXNzTGlzdCIsImFkZCIsImNoaWxkIiwibW9kYWxUaXRsZSIsIm1vZGFsRGl2IiwiaW5uZXJIVE1MIiwidGl0bGUiLCJtb2RhbERlc2NUaXRsZSIsIm1vZGFsRGVzYyIsInRleHRDb250ZW50IiwiZGVzY3JpcHRpb24iLCJtb2RhbERhdGVUaXRsZSIsIm1vZGFsRGF0ZSIsImR1ZURhdGUiLCJtb2RhbFByaW9yaXR5VGl0bGUiLCJtb2RhbFByaW9yaXR5IiwicHJpb3JpdHlMZXZlbCIsInByaW9yaXR5U3RhciIsInByaW9yaXR5IiwibW9kYWxQcm9qZWN0VGl0bGUiLCJtb2RhbFByb2plY3QiLCJtb2RhbEVkaXQiLCJtb2RhbERlbGV0ZSIsImJ1dHRvbkRpdiIsImJvZHkiLCJhZGRFdmVudExpc3RlbmVyIiwiZGVsZXRlVG9EbyIsImV2ZW50IiwiY2xhc3NOYW1lIiwicmVtb3ZlTW9kYWwiLCJzYXZlVG9Mb2NhbFN0b3JhZ2UiLCJpbnB1dCIsImVtcHR5T2JqIiwidmFsdWUiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwibG9hZFBhZ2UiLCJjb25zb2xlIiwibG9nIiwiYmFja3BhY2tUcmlwIiwic3RhdHVzIiwibG92ZURvZyIsIm1ha2VDYXJkIiwiY2FyZCIsInByb2plY3RUaXRsZSIsImxpc3RDb250YWluZXIiLCJ0b0RvTGlzdCIsInRvRG9MaW5lIiwibGVmdERpdiIsImNoZWNrYm94IiwidG9Eb1RpdGxlIiwidG9Eb0RhdGUiLCJtYXJrQ29tcGxldGUiLCJ1cGRhdGVTdGF0dXMiLCJtYXJrSW5jb21wbGV0ZSIsImRlbGV0ZVByb2pCdXR0b24iLCJwcm9qZWN0IiwicmVtb3ZlSXRlbSIsInRvRG8iLCJwYXJzZSIsImdldEl0ZW0iLCJwYXJzZWQiLCJqIiwic2F2ZVRvRG8iLCJwcmV2ZW50RGVmYXVsdCIsImRlc2MiLCJkYXRlIiwicHJpb3JpdHlSZXN1bHQiLCJnZXRFbGVtZW50c0J5TmFtZSIsImNoZWNrZWQiLCJuZXdUb0RvIiwibWFrZVRvRG8iLCJhZGRUb0RvIiwiYnVpbGRUZXh0SW5wdXQiLCJjb250YWluZXIiLCJsaU5hbWUiLCJsYWJlbE5hbWUiLCJpbnB1dE5hbWUiLCJpbnB1dFR5cGUiLCJuZXdMYWJlbCIsImJ1aWxkUmFkaW9JbnB1dCIsImNhdGVnb3J5IiwibGFiZWwxIiwidGV4dDEiLCJpbnB1dDEiLCJ2YWx1ZTEiLCJsYWJlbDIiLCJ0ZXh0MiIsImlucHV0MiIsInZhbHVlMiIsImJ1aWxkUmFkaW9PcHRpb24iLCJsYWJlbCIsInRleHQiLCJmb3JtIiwiZGl2Iiwic2VsZWN0TGFiZWwiLCJzZWxlY3QiLCJvcHRpb24iLCJvcHRpb25UaXRsZSIsImJ1dHRvbiIsImJ1aWxkVG9Eb0Zvcm0iLCJidWlsZFByb2plY3RGb3JtIl0sInNvdXJjZVJvb3QiOiIifQ==