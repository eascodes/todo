(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>p});var o=n(537),r=n.n(o),i=n(645),a=n.n(i),l=n(667),c=n.n(l),A=new URL(n(201),n.b),d=a()(r()),s=c()(A);d.push([e.id,"@font-face {\n    font-family: 'MyFont';\n    src: url("+s+');\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    color: white;\n    font-family: \'MyFont\';\n    height: 100%;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    grid-template-areas: \n        "header header"\n        "nav project-container";\n}\n\n.header {\n    background-color: #e76f51;\n    grid-area: header;\n    text-align: center;\n}\n\n.nav {\n    background-color: #264653;\n    grid-area: nav;\n    min-width: 147px;\n} \n\n.nav > ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 1.3rem;\n    padding-left: 15px;\n}\n\n.nav li {\n    margin-bottom: 10px;\n}\n\n.nav ul li:hover {\n    cursor: pointer;\n    color: #ffd56b;\n}\n\n/*MAIN PROJECTS DISPLAY*/\n\n.project-container {\n    grid-area: project-container;\n    padding: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.card {\n    background-color: #2a9d8f;\n    width: 250px;\n    height: 250px;\n    box-sizing: border-box;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n}\n\n.card h3 {\n    margin: 0;\n    text-align: center;\n    min-height: 46px;\n}\n\n.card ul {\n    list-style: none;\n    padding-left: 0;\n}\n\n.card li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.card li > div > p + p:hover {\n    color: #ffd56b;\n    cursor: pointer;\n}\n\n.card > div > ul > li > div {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    align-items: center;\n}\n\n.card li > div > p:hover {\n    cursor: pointer;\n}\n\n.card p {\n    margin: 0;\n}\n\n.card button {\n    margin-bottom: 10px;\n    margin-top: auto;\n}\n\n.checkbox {\n    font-size: 2rem;\n}\n\n.strikethrough {\n    text-decoration: line-through;\n}\n\n/*FORMS*/\n\nform {\n    background-color: #2a9d8f;\n    padding: 20px 40px 20px 40px;\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\nform div {\n    display: flex;\n    flex-direction: column;\n}\n\nform ul {\n    list-style: none;\n    margin: 0;\n    padding-left: 0;\n}\n\nform li {\n    margin-bottom: 10px;\n}\n\nlabel[for="newTitle"],\nlabel[for="desc"],\nlabel[for="date"],\nlabel[for="select-option"] {\n    margin-right: 8px;\n}\n\n#low-priority {\n    margin-left: 8px;\n}\n\nlabel[for="project"] {\n    margin-bottom: 5px;\n}\n\nform h3 {\n    margin-top: 0;\n    text-align: center;\n    font-size: 1.6rem;\n}\n\nbutton {\n   border: none;\n   text-decoration: none; \n   background-color: #264653;\n   color: white;\n   padding: 5px 10px;\n   align-self: center;\n   margin-top: 15px;\n}\n\nbutton:hover {\n    cursor: pointer;\n    color: #264653;\n    background-color: white;\n}\n\n/*MODAL*/\n\n.modal {\n    top: 0%;\n    left: 0%;\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    background: rgba(0, 0, 0, 0.5);\n  }\n\n.child {\n    top: 50%;\n    left: 50%;\n    width: 350px;\n    height: 350px;\n    padding: 30px 30px;\n    background: #2a9d8f;\n    position: absolute;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.modal-div {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto auto auto;\n    justify-items: start;\n    align-items: start;\n    column-gap: 20px;\n    row-gap: 10px;\n}\n\n.child h3 {\n    margin-top: 0;\n    align-self: center;\n}\n\n.child p,\n.child h4 {\n    margin: 0;\n}\n\n.child h4 {\n    justify-self: end;\n    font-weight: bold;\n}\n\n.star-filled {\n    color: yellow;\n}\n\n.button-div {\n    display: flex;\n    align-content: center;\n    justify-content: center;\n    gap: 20px;\n    padding-top: 10px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAA8C;AAClD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,qBAAqB;IACrB,YAAY;IACZ,iBAAiB;IACjB,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B;;+BAE2B;AAC/B;;AAEA;IACI,yBAAyB;IACzB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA,wBAAwB;;AAExB;IACI,4BAA4B;IAC5B,aAAa;IACb,aAAa;IACb,eAAe;IACf,SAAS;AACb;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,SAAS;IACT,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,6BAA6B;AACjC;;AAEA,QAAQ;;AAER;IACI,yBAAyB;IACzB,4BAA4B;IAC5B,UAAU;IACV,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;;;;IAII,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;GACG,YAAY;GACZ,qBAAqB;GACrB,yBAAyB;GACzB,YAAY;GACZ,iBAAiB;GACjB,kBAAkB;GAClB,gBAAgB;AACnB;;AAEA;IACI,eAAe;IACf,cAAc;IACd,uBAAuB;AAC3B;;AAEA,QAAQ;;AAER;IACI,OAAO;IACP,QAAQ;IACR,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,8BAA8B;EAChC;;AAEF;IACI,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB,kBAAkB;IAClB,gCAAgC;IAChC,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,uCAAuC;IACvC,oBAAoB;IACpB,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB;;AAEA;;IAEI,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,uBAAuB;IACvB,SAAS;IACT,iBAAiB;AACrB",sourcesContent:['@font-face {\n    font-family: \'MyFont\';\n    src: url(\'./LexendDeca-VariableFont_wght.ttf\');\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    color: white;\n    font-family: \'MyFont\';\n    height: 100%;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    grid-template-areas: \n        "header header"\n        "nav project-container";\n}\n\n.header {\n    background-color: #e76f51;\n    grid-area: header;\n    text-align: center;\n}\n\n.nav {\n    background-color: #264653;\n    grid-area: nav;\n    min-width: 147px;\n} \n\n.nav > ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 1.3rem;\n    padding-left: 15px;\n}\n\n.nav li {\n    margin-bottom: 10px;\n}\n\n.nav ul li:hover {\n    cursor: pointer;\n    color: #ffd56b;\n}\n\n/*MAIN PROJECTS DISPLAY*/\n\n.project-container {\n    grid-area: project-container;\n    padding: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.card {\n    background-color: #2a9d8f;\n    width: 250px;\n    height: 250px;\n    box-sizing: border-box;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n}\n\n.card h3 {\n    margin: 0;\n    text-align: center;\n    min-height: 46px;\n}\n\n.card ul {\n    list-style: none;\n    padding-left: 0;\n}\n\n.card li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.card li > div > p + p:hover {\n    color: #ffd56b;\n    cursor: pointer;\n}\n\n.card > div > ul > li > div {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    align-items: center;\n}\n\n.card li > div > p:hover {\n    cursor: pointer;\n}\n\n.card p {\n    margin: 0;\n}\n\n.card button {\n    margin-bottom: 10px;\n    margin-top: auto;\n}\n\n.checkbox {\n    font-size: 2rem;\n}\n\n.strikethrough {\n    text-decoration: line-through;\n}\n\n/*FORMS*/\n\nform {\n    background-color: #2a9d8f;\n    padding: 20px 40px 20px 40px;\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\nform div {\n    display: flex;\n    flex-direction: column;\n}\n\nform ul {\n    list-style: none;\n    margin: 0;\n    padding-left: 0;\n}\n\nform li {\n    margin-bottom: 10px;\n}\n\nlabel[for="newTitle"],\nlabel[for="desc"],\nlabel[for="date"],\nlabel[for="select-option"] {\n    margin-right: 8px;\n}\n\n#low-priority {\n    margin-left: 8px;\n}\n\nlabel[for="project"] {\n    margin-bottom: 5px;\n}\n\nform h3 {\n    margin-top: 0;\n    text-align: center;\n    font-size: 1.6rem;\n}\n\nbutton {\n   border: none;\n   text-decoration: none; \n   background-color: #264653;\n   color: white;\n   padding: 5px 10px;\n   align-self: center;\n   margin-top: 15px;\n}\n\nbutton:hover {\n    cursor: pointer;\n    color: #264653;\n    background-color: white;\n}\n\n/*MODAL*/\n\n.modal {\n    top: 0%;\n    left: 0%;\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    background: rgba(0, 0, 0, 0.5);\n  }\n\n.child {\n    top: 50%;\n    left: 50%;\n    width: 350px;\n    height: 350px;\n    padding: 30px 30px;\n    background: #2a9d8f;\n    position: absolute;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.modal-div {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto auto auto;\n    justify-items: start;\n    align-items: start;\n    column-gap: 20px;\n    row-gap: 10px;\n}\n\n.child h3 {\n    margin-top: 0;\n    align-self: center;\n}\n\n.child p,\n.child h4 {\n    margin: 0;\n}\n\n.child h4 {\n    justify-self: end;\n    font-weight: bold;\n}\n\n.star-filled {\n    color: yellow;\n}\n\n.button-div {\n    display: flex;\n    align-content: center;\n    justify-content: center;\n    gap: 20px;\n    padding-top: 10px;\n}'],sourceRoot:""}]);const p=d},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var l=0;l<this.length;l++){var c=this[l][0];null!=c&&(a[c]=!0)}for(var A=0;A<e.length;A++){var d=[].concat(e[A]);o&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),t.push(d))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],l=0;l<e.length;l++){var c=e[l],A=o.base?c[0]+o.base:c[0],d=i[A]||0,s="".concat(A," ").concat(d);i[A]=d+1;var p=n(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=r(u,o);o.byIndex=l,t.splice(l,0,{identifier:s,updater:m,references:1})}a.push(s)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var l=n(i[a]);t[l].references--}for(var c=o(e,r),A=0;A<i.length;A++){var d=n(i[A]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},201:(e,t,n)=>{e.exports=n.p+"85a26ab7491852266e9b.ttf"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{const e=()=>{const e=document.querySelector(".project-container");for(;e.lastElementChild;)e.removeChild(e.lastElementChild)},t=e=>{let t={list:[""],title:e.value};localStorage.setItem(e.value,JSON.stringify(t))};var o=n(379),r=n.n(o),i=n(795),a=n.n(i),l=n(569),c=n.n(l),A=n(565),d=n.n(A),s=n(216),p=n.n(s),u=n(589),m=n.n(u),g=n(426),f={};f.styleTagTransform=m(),f.setAttributes=d(),f.insert=c().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),r()(g.Z,f),g.Z&&g.Z.locals&&g.Z.locals;const h=(e,t,n,o,r,i)=>{t=document.createElement("li");const a=document.createElement("label");a.setAttribute("for",n),a.textContent=o,(r=document.createElement("input")).setAttribute("type",i),r.setAttribute("id",n),r.setAttribute("name",n),e.appendChild(t),t.appendChild(a),t.appendChild(r)},C=(e,t,n,o,r,i,a,l,c,A)=>{const d=document.createElement("li");e.appendChild(d);const s=(e,t,n,o,r)=>{const i=document.createElement("label");i.setAttribute("for",t),i.textContent=n,(o=document.createElement("input")).setAttribute("type","radio"),o.setAttribute("id",t),o.setAttribute("name",e),o.setAttribute("value",r),d.appendChild(o),d.appendChild(i)};s(t,n,o,r,i),s(t,a,l,c,A)},B=()=>{if(e(),console.log(localStorage),0===localStorage.length){let e={list:[{title:"Plan route",description:"Use guidebook to plan hiking route",dueDate:"4/1/23",priority:1,status:0},{title:"Plan meals",description:"Plan meals to meet calorie needs",dueDate:"4/7/23",priority:0,status:0},{title:"Pack gear",description:"Pack gear needed for 10 day trip",dueDate:"4/14/23",priority:1,status:0}],title:"Prep for Backpacking Trip"},t={list:[{title:"Cuddle",description:"Cuddle with my dog",dueDate:"12/20/22",priority:1,status:0}],title:"Love my dog"};localStorage.setItem("backpackTrip",JSON.stringify(e)),localStorage.setItem("loveDog",JSON.stringify(t))}function t(e){const t=document.createElement("div");t.classList.add("card");const i=document.createElement("h3");i.textContent=e.title,t.appendChild(i);const a=document.createElement("div");t.appendChild(a);const l=document.createElement("ul");a.appendChild(l);for(let t=0;t<e.list.length;t++){const i=document.createElement("li");l.appendChild(i);const a=document.createElement("div");i.appendChild(a);const c=document.createElement("p");c.classList.add("checkbox");const A=document.createElement("p"),d=document.createElement("p");1===e.list[t].status?n(c,A,d,0,e.list[t]):0===e.list[t].status&&(c.innerHTML="&#9744;");let s="";1!==e.list[t].priority&&"high"!==e.list[t].priority||(s="&#11088;"),null!=e.list[t].title&&(A.innerHTML=e.list[t].title+" "+s,d.innerHTML=e.list[t].dueDate,a.appendChild(c),a.appendChild(A),i.appendChild(d)),c.addEventListener("click",(()=>{0===e.list[t].status?(n(c,A,d,0,e.list[t]),r(e,e.list[t])):1===e.list[t].status&&(o(c,A,d,0,e.list[t]),r(e,e.list[t]))})),A.addEventListener("click",(()=>{I(e.list[t],e)}))}const c=document.createElement("button");return c.innerHTML="Delete Project",t.appendChild(c),c.addEventListener("click",(()=>{var t;t=e,localStorage.removeItem(t.title),B()})),t}function n(e,t,n,o,r){e.innerHTML="&#9745;",t.classList.add("strikethrough"),n.classList.add("strikethrough")}function o(e,t,n,o,r){e.innerHTML="&#9744;",t.classList.remove("strikethrough"),n.classList.remove("strikethrough")}function r(e,t){for(let n=0;n<localStorage.length;n++)if(e.title===JSON.parse(localStorage.getItem(localStorage.key(n))).title){let e=JSON.parse(localStorage.getItem(localStorage.key(n)));for(let o=0;o<e.list.length;o++)e.list[o].title==t.title&&(0===e.list[o].status?e.list[o].status=1:1===e.list[o].status&&(e.list[o].status=0),localStorage.setItem(localStorage.key(n),JSON.stringify(e)))}B()}!function(){for(let n=0;n<localStorage.length;n++){e=t(JSON.parse(localStorage.getItem(localStorage.key(n)))),document.querySelector(".project-container").appendChild(e)}var e}()},I=(e,t)=>{const n=document.createElement("div");n.classList.add("modal");const o=document.createElement("div");o.classList.add("child");const r=document.createElement("h3"),i=document.createElement("div");i.classList.add("modal-div"),r.innerHTML="&#9634; "+e.title;const a=document.createElement("h4");a.innerHTML="Description:";const l=document.createElement("p");l.textContent=e.description;const c=document.createElement("h4");c.innerHTML="Due Date:";const A=document.createElement("p");A.textContent=e.dueDate;const d=document.createElement("h4");d.innerHTML="Priority:";const s=document.createElement("p");let p="",u="";1===e.priority||"high"===e.priority?(u="&#11088;",p="High priority"):(u="&#9734;",p="Low priority"),s.innerHTML=p+" "+u;const m=document.createElement("h4");m.innerHTML="Project:";const g=document.createElement("p");g.innerHTML=t.title;const f=document.createElement("button");f.textContent="Edit Task";const h=document.createElement("button");h.textContent="Delete Task";const C=document.createElement("div");C.classList.add("button-div"),o.appendChild(r),o.appendChild(i),i.appendChild(a),i.appendChild(l),i.appendChild(c),i.appendChild(A),i.appendChild(d),i.appendChild(s),i.appendChild(m),i.appendChild(g),o.appendChild(C),C.appendChild(f),C.appendChild(h),n.appendChild(o),document.body.appendChild(n),h.addEventListener("click",(()=>{E(t,e)})),n.addEventListener("click",(e=>{"modal"===e.target.className&&b()}))},b=()=>{const e=document.querySelector(".modal");e&&e.remove()},y=e=>{e.preventDefault();const t=document.querySelector("#newTitle").value,n=document.querySelector("#desc").value,o=document.querySelector("#date").value;let r="",i=document.getElementsByName("priority");for(let e=0;e<i.length;e++)i[e].checked&&(r=i[e].value);let a=document.querySelector("#select-option").value;for(let e=0;e<localStorage.length;e++)a==JSON.parse(localStorage.getItem(localStorage.key(e))).title&&(a=JSON.parse(localStorage.getItem(localStorage.key(e))));let l=v(t,n,o,r,a);x(a,l)},v=(e,t,n,o)=>({title:e,description:t,dueDate:n,priority:o,status:0}),x=(e,t)=>{for(let n=0;n<localStorage.length;n++)if(e.title===JSON.parse(localStorage.getItem(localStorage.key(n))).title){let e=JSON.parse(localStorage.getItem(localStorage.key(n)));e.list.push(t),localStorage.setItem(localStorage.key(n),JSON.stringify(e))}B()},E=(e,t)=>{for(let n=0;n<localStorage.length;n++)if(e.title===JSON.parse(localStorage.getItem(localStorage.key(n))).title){let e=JSON.parse(localStorage.getItem(localStorage.key(n)));for(let o=0;o<e.list.length;o++)e.list[o].title==t.title&&(e.list.splice(o,1),localStorage.setItem(localStorage.key(n),JSON.stringify(e)))}B(),b()};B(),document.querySelector(".nav>ul>li").addEventListener("click",B),document.querySelector(".nav>ul>li+li").addEventListener("click",(()=>{e(),(()=>{const e=document.querySelector(".project-container"),t=document.createElement("form"),n=document.createElement("h3");n.textContent="Add 'To Do' Item",e.appendChild(t),t.appendChild(n),t.setAttribute("id","newToDoForm"),t.setAttribute("action",""),t.setAttribute("method","post");const o=document.createElement("div");t.appendChild(o);const r=document.createElement("ul");o.appendChild(r),h(r,"firstItem","newTitle","To Do Item Title","input1","text"),h(r,"secItem","desc","Description","input2","text"),h(r,"thirdItem","date","Due Date","input3","date"),C(r,"priority","high-priority","High Priority","input4","high","low-priority","Low Priority","input5","low");const i=document.createElement("li"),a=document.createElement("label");a.textContent="Project",a.setAttribute("for","select-option");const l=document.createElement("select");l.setAttribute("name","Project"),l.setAttribute("id","select-option"),r.appendChild(i),i.appendChild(a),i.appendChild(l);for(let e=0;e<localStorage.length;e++){const t=document.createElement("option"),n=JSON.parse(localStorage.getItem(localStorage.key(e))).title;t.setAttribute("value",n),t.textContent=n,l.appendChild(t)}const c=document.createElement("button");c.setAttribute("type","submit"),c.textContent="Submit",c.setAttribute("id","submit-todo"),o.appendChild(c),t.addEventListener("submit",y)})()})),document.querySelector(".nav>ul>li+li+li").addEventListener("click",(()=>{e(),(()=>{const e=document.querySelector(".project-container"),n=document.createElement("form"),o=document.createElement("h3");o.textContent="Add a Project",e.appendChild(n),n.appendChild(o),n.setAttribute("id","newProjectForm"),n.setAttribute("action",""),n.setAttribute("method","post");const r=document.createElement("div");n.appendChild(r);const i=document.createElement("label");i.setAttribute("for","project"),i.textContent="New Project";const a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("id","project-title"),a.setAttribute("name","project"),r.appendChild(i),r.appendChild(a);const l=document.createElement("button");l.setAttribute("type","submit"),l.textContent="Submit",l.setAttribute("id","submit-project"),r.appendChild(l),n.addEventListener("submit",(()=>{t(a)}))})()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,