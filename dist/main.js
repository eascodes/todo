(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),l=t(667),c=t.n(l),A=new URL(t(201),t.b),d=a()(o()),p=c()(A);d.push([e.id,"@font-face {\n    font-family: 'MyFont';\n    src: url("+p+');\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    color: white;\n    font-family: \'MyFont\';\n    height: 100%;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    grid-template-areas: \n        "header header"\n        "nav project-container";\n}\n\n.header {\n    background-color: #e76f51;\n    grid-area: header;\n    text-align: center;\n}\n\n.nav {\n    background-color: #264653;\n    grid-area: nav;\n    min-width: 147px;\n} \n\n.nav > ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 1.3rem;\n    padding-left: 15px;\n}\n\n.nav li {\n    margin-bottom: 10px;\n}\n\n.nav ul li:hover {\n    cursor: pointer;\n    color: #ffd56b;\n}\n\n/*MAIN PROJECTS DISPLAY*/\n\n.project-container {\n    /*background-color: #e9c46a;*/\n    grid-area: project-container;\n    padding: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.card {\n    background-color: #2a9d8f;\n    width: 250px;\n    min-height: 250px;\n    box-sizing: border-box;\n    padding: 10px;\n}\n\n.card h3 {\n    margin: 0;\n    text-align: center;\n    min-height: 46px;\n}\n\n.card ul {\n    list-style: none;\n    padding-left: 0;\n}\n\n.card li {\n    display: flex;\n    justify-content: space-between;\n}\n\n.card li:hover {\n    color: #ffd56b;\n    cursor: pointer;\n}\n\n.card p {\n    margin: 0;\n}\n\n/*FORMS*/\n\nform {\n    background-color: #2a9d8f;\n    padding: 20px 40px 20px 40px;\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\nform div {\n    display: flex;\n    flex-direction: column;\n}\n\nform ul {\n    list-style: none;\n    margin: 0;\n    padding-left: 0;\n}\n\nform li {\n    margin-bottom: 10px;\n}\n\nlabel[for="newTitle"],\nlabel[for="desc"],\nlabel[for="date"],\nlabel[for="select-option"] {\n    margin-right: 8px;\n}\n\n#low-priority {\n    margin-left: 8px;\n}\n\nlabel[for="project"] {\n    margin-bottom: 5px;\n}\n\nform h3 {\n    margin-top: 0;\n    text-align: center;\n    font-size: 1.6rem;\n}\n\nbutton {\n   border: none;\n   text-decoration: none; \n   background-color: #264653;\n   color: white;\n   padding: 5px 10px;\n   align-self: center;\n   margin-top: 15px;\n}\n\nbutton:hover {\n    cursor: pointer;\n    color: #264653;\n    background-color: white;\n}\n\n/*MODAL*/\n\n.modal {\n    top: 0%;\n    left: 0%;\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    background: rgba(0, 0, 0, 0.5);\n  }\n\n.child {\n    top: 50%;\n    left: 50%;\n    width: 350px;\n    height: 350px;\n    padding: 30px 30px;\n    background: #2a9d8f;\n    position: absolute;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.child div {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr 1fr 1fr;\n    justify-items: start;\n    align-items: start;\n    column-gap: 20px;\n    row-gap: 10px;\n}\n\n.child h3 {\n    margin-top: 0;\n    align-self: center;\n}\n\n.child p,\n.child h4 {\n    margin: 0;\n}\n\n.child h4 {\n    justify-self: end;\n    font-weight: bold;\n}\n\n.star-filled {\n    color: yellow;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,4CAA8C;AAClD;;AAEA;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,qBAAqB;IACrB,YAAY;IACZ,iBAAiB;IACjB,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B;;+BAE2B;AAC/B;;AAEA;IACI,yBAAyB;IACzB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;IACzB,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA,wBAAwB;;AAExB;IACI,6BAA6B;IAC7B,4BAA4B;IAC5B,aAAa;IACb,aAAa;IACb,eAAe;IACf,SAAS;AACb;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,iBAAiB;IACjB,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,SAAS;IACT,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,SAAS;AACb;;AAEA,QAAQ;;AAER;IACI,yBAAyB;IACzB,4BAA4B;IAC5B,UAAU;IACV,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;;;;IAII,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;GACG,YAAY;GACZ,qBAAqB;GACrB,yBAAyB;GACzB,YAAY;GACZ,iBAAiB;GACjB,kBAAkB;GAClB,gBAAgB;AACnB;;AAEA;IACI,eAAe;IACf,cAAc;IACd,uBAAuB;AAC3B;;AAEA,QAAQ;;AAER;IACI,OAAO;IACP,QAAQ;IACR,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,8BAA8B;EAChC;;AAEF;IACI,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB,kBAAkB;IAClB,gCAAgC;IAChC,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mCAAmC;IACnC,oBAAoB;IACpB,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB;;AAEA;;IAEI,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB",sourcesContent:['@font-face {\n    font-family: \'MyFont\';\n    src: url(\'./LexendDeca-VariableFont_wght.ttf\');\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    color: white;\n    font-family: \'MyFont\';\n    height: 100%;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    grid-template-areas: \n        "header header"\n        "nav project-container";\n}\n\n.header {\n    background-color: #e76f51;\n    grid-area: header;\n    text-align: center;\n}\n\n.nav {\n    background-color: #264653;\n    grid-area: nav;\n    min-width: 147px;\n} \n\n.nav > ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-size: 1.3rem;\n    padding-left: 15px;\n}\n\n.nav li {\n    margin-bottom: 10px;\n}\n\n.nav ul li:hover {\n    cursor: pointer;\n    color: #ffd56b;\n}\n\n/*MAIN PROJECTS DISPLAY*/\n\n.project-container {\n    /*background-color: #e9c46a;*/\n    grid-area: project-container;\n    padding: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.card {\n    background-color: #2a9d8f;\n    width: 250px;\n    min-height: 250px;\n    box-sizing: border-box;\n    padding: 10px;\n}\n\n.card h3 {\n    margin: 0;\n    text-align: center;\n    min-height: 46px;\n}\n\n.card ul {\n    list-style: none;\n    padding-left: 0;\n}\n\n.card li {\n    display: flex;\n    justify-content: space-between;\n}\n\n.card li:hover {\n    color: #ffd56b;\n    cursor: pointer;\n}\n\n.card p {\n    margin: 0;\n}\n\n/*FORMS*/\n\nform {\n    background-color: #2a9d8f;\n    padding: 20px 40px 20px 40px;\n    width: 50%;\n    margin-left: auto;\n    margin-right: auto;\n}\n\nform div {\n    display: flex;\n    flex-direction: column;\n}\n\nform ul {\n    list-style: none;\n    margin: 0;\n    padding-left: 0;\n}\n\nform li {\n    margin-bottom: 10px;\n}\n\nlabel[for="newTitle"],\nlabel[for="desc"],\nlabel[for="date"],\nlabel[for="select-option"] {\n    margin-right: 8px;\n}\n\n#low-priority {\n    margin-left: 8px;\n}\n\nlabel[for="project"] {\n    margin-bottom: 5px;\n}\n\nform h3 {\n    margin-top: 0;\n    text-align: center;\n    font-size: 1.6rem;\n}\n\nbutton {\n   border: none;\n   text-decoration: none; \n   background-color: #264653;\n   color: white;\n   padding: 5px 10px;\n   align-self: center;\n   margin-top: 15px;\n}\n\nbutton:hover {\n    cursor: pointer;\n    color: #264653;\n    background-color: white;\n}\n\n/*MODAL*/\n\n.modal {\n    top: 0%;\n    left: 0%;\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    background: rgba(0, 0, 0, 0.5);\n  }\n\n.child {\n    top: 50%;\n    left: 50%;\n    width: 350px;\n    height: 350px;\n    padding: 30px 30px;\n    background: #2a9d8f;\n    position: absolute;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.child div {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr 1fr 1fr;\n    justify-items: start;\n    align-items: start;\n    column-gap: 20px;\n    row-gap: 10px;\n}\n\n.child h3 {\n    margin-top: 0;\n    align-self: center;\n}\n\n.child p,\n.child h4 {\n    margin: 0;\n}\n\n.child h4 {\n    justify-self: end;\n    font-weight: bold;\n}\n\n.star-filled {\n    color: yellow;\n}'],sourceRoot:""}]);const s=d},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var l=0;l<this.length;l++){var c=this[l][0];null!=c&&(a[c]=!0)}for(var A=0;A<e.length;A++){var d=[].concat(e[A]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],l=0;l<e.length;l++){var c=e[l],A=r.base?c[0]+r.base:c[0],d=i[A]||0,p="".concat(A," ").concat(d);i[A]=d+1;var s=t(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==s)n[s].references++,n[s].updater(u);else{var m=o(u,r);r.byIndex=l,n.splice(l,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var l=t(i[a]);n[l].references--}for(var c=r(e,o),A=0;A<i.length;A++){var d=t(i[A]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},201:(e,n,t)=>{e.exports=t.p+"85a26ab7491852266e9b.ttf"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),i=t(569),a=t.n(i),l=t(565),c=t.n(l),A=t(216),d=t.n(A),p=t(589),s=t.n(p),u=t(426),m={};m.styleTagTransform=s(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const g=()=>{const e=document.querySelector(".project-container");for(;e.lastElementChild;)e.removeChild(e.lastElementChild)},f=(e,n,t,r,o,i)=>{n=document.createElement("li");const a=document.createElement("label");a.setAttribute("for",t),a.textContent=r,(o=document.createElement("input")).setAttribute("type",i),o.setAttribute("id",t),o.setAttribute("name",t),e.appendChild(n),n.appendChild(a),n.appendChild(o)},h=(e,n,t,r,o,i,a,l,c,A)=>{const d=document.createElement("li");e.appendChild(d);const p=(e,n,t,r,o)=>{const i=document.createElement("label");i.setAttribute("for",n),i.textContent=t,(r=document.createElement("input")).setAttribute("type","radio"),r.setAttribute("id",n),r.setAttribute("name",e),r.setAttribute("value",o),d.appendChild(r),d.appendChild(i)};p(n,t,r,o,i),p(n,a,l,c,A)},C=(e,n)=>{const t=document.createElement("div");t.classList.add("modal");const r=document.createElement("div");r.classList.add("child");const o=document.createElement("h3"),i=document.createElement("div");o.innerHTML="&#9634; "+e.title;const a=document.createElement("h4");a.innerHTML="Description:";const l=document.createElement("p");l.textContent=e.description;const c=document.createElement("h4");c.innerHTML="Due Date:";const A=document.createElement("p");A.textContent=e.dueDate;const d=document.createElement("h4");d.innerHTML="Priority:";const p=document.createElement("p");let s="",u="";1===e.priority||"high"===e.priority?(u="&#11088;",s="High priority"):(u="&#9734;",s="Low priority"),p.innerHTML=s+" "+u;const m=document.createElement("h4");m.innerHTML="Project:";const g=document.createElement("p");g.innerHTML=n.title;const f=document.createElement("button");f.textContent="Delete Task",r.appendChild(o),r.appendChild(i),i.appendChild(a),i.appendChild(l),i.appendChild(c),i.appendChild(A),i.appendChild(d),i.appendChild(p),i.appendChild(m),i.appendChild(g),r.appendChild(f),t.appendChild(r),document.body.appendChild(t),t.addEventListener("click",(e=>{"modal"===e.target.className&&B()}))},B=()=>{const e=document.querySelector(".modal");e&&e.remove()},I=()=>{if(g(),console.log(localStorage),0===localStorage.length){let e={list:[{title:"Plan route",description:"Use guidebook to plan hiking route",dueDate:"4/1/23",priority:1,status:0},{title:"Plan meals",description:"Plan meals to meet calorie needs",dueDate:"4/7/23",priority:0,status:0},{title:"Pack gear",description:"Pack gear needed for 10 day trip",dueDate:"4/14/23",priority:1,status:0}],title:"Prep for Backpacking Trip"},n={list:[{title:"Cuddle",description:"Cuddle with my dog",dueDate:"12/20/22",priority:1,status:0}],title:"Love my dog"};localStorage.setItem("backpackTrip",JSON.stringify(e)),localStorage.setItem("loveDog",JSON.stringify(n))}function e(e){const n=document.createElement("div");n.classList.add("card");const t=document.createElement("h3");t.textContent=e.title,n.appendChild(t);const r=document.createElement("div");n.appendChild(r);const o=document.createElement("ul");r.appendChild(o);for(let n=0;n<e.list.length;n++){const t=document.createElement("li");o.appendChild(t);const r=document.createElement("p"),i=document.createElement("p");let a="";1!==e.list[n].priority&&"high"!==e.list[n].priority||(a="&#11088;"),null!=e.list[n].title&&(r.innerHTML="&#9634; "+e.list[n].title+" "+a,i.innerHTML=e.list[n].dueDate,t.appendChild(r),t.appendChild(i)),t.addEventListener("click",(()=>{C(e.list[n],e)}))}return n}!function(){for(let t=0;t<localStorage.length;t++){n=e(JSON.parse(localStorage.getItem(localStorage.key(t)))),document.querySelector(".project-container").appendChild(n)}var n}()},b=e=>{e.preventDefault();const n=document.querySelector("#newTitle").value,t=document.querySelector("#desc").value,r=document.querySelector("#date").value;let o="",i=document.getElementsByName("priority");for(let e=0;e<i.length;e++)i[e].checked&&(o=i[e].value);let a=document.querySelector("#select-option").value;for(let e=0;e<localStorage.length;e++)a==JSON.parse(localStorage.getItem(localStorage.key(e))).title&&(a=JSON.parse(localStorage.getItem(localStorage.key(e))));let l=y(n,t,r,o,a);x(a,l)},y=(e,n,t,r)=>({title:e,description:n,dueDate:t,priority:r,status:0}),x=(e,n)=>{for(let t=0;t<localStorage.length;t++)if(e.title===JSON.parse(localStorage.getItem(localStorage.key(t))).title){let e=JSON.parse(localStorage.getItem(localStorage.key(t)));e.list.push(n),localStorage.setItem(localStorage.key(t),JSON.stringify(e))}I()},v=e=>{let n={list:[""],title:e.value};localStorage.setItem(e.value,JSON.stringify(n))};I(),document.querySelector(".nav>ul>li").addEventListener("click",I),document.querySelector(".nav>ul>li+li").addEventListener("click",(()=>{g(),(()=>{const e=document.querySelector(".project-container"),n=document.createElement("form"),t=document.createElement("h3");t.textContent="Add 'To Do' Item",e.appendChild(n),n.appendChild(t),n.setAttribute("id","newToDoForm"),n.setAttribute("action",""),n.setAttribute("method","post");const r=document.createElement("div");n.appendChild(r);const o=document.createElement("ul");r.appendChild(o),f(o,"firstItem","newTitle","To Do Item Title","input1","text"),f(o,"secItem","desc","Description","input2","text"),f(o,"thirdItem","date","Due Date","input3","date"),h(o,"priority","high-priority","High Priority","input4","high","low-priority","Low Priority","input5","low");const i=document.createElement("li"),a=document.createElement("label");a.textContent="Project",a.setAttribute("for","select-option");const l=document.createElement("select");l.setAttribute("name","Project"),l.setAttribute("id","select-option"),o.appendChild(i),i.appendChild(a),i.appendChild(l);for(let e=0;e<localStorage.length;e++){const n=document.createElement("option"),t=JSON.parse(localStorage.getItem(localStorage.key(e))).title;n.setAttribute("value",t),n.textContent=t,l.appendChild(n)}const c=document.createElement("button");c.setAttribute("type","submit"),c.textContent="Submit",c.setAttribute("id","submit-todo"),r.appendChild(c),n.addEventListener("submit",b)})()})),document.querySelector(".nav>ul>li+li+li").addEventListener("click",(()=>{g(),(()=>{const e=document.querySelector(".project-container"),n=document.createElement("form"),t=document.createElement("h3");t.textContent="Add a Project",e.appendChild(n),n.appendChild(t),n.setAttribute("id","newProjectForm"),n.setAttribute("action",""),n.setAttribute("method","post");const r=document.createElement("div");n.appendChild(r);const o=document.createElement("label");o.setAttribute("for","project"),o.textContent="New Project";const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("id","project-title"),i.setAttribute("name","project"),r.appendChild(o),r.appendChild(i);const a=document.createElement("button");a.setAttribute("type","submit"),a.textContent="Submit",a.setAttribute("id","submit-project"),r.appendChild(a),n.addEventListener("submit",(()=>{v(i)}))})()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,